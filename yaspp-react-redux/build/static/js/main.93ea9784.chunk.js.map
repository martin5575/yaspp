{"version":3,"sources":["reducers/selectors/uiSelector.js","reducers/selectors/modelSelector.js","utils/listUtils.js","stats/statsType.js","stats/seasonInfo.js","maths/probabilities.js","parts/MatchProbabilityDetails.jsx","parts/MatchDetails.jsx","parts/Match.jsx","parts/MatchsPerDay.jsx","parts/Matchs.jsx","parts/Table.jsx","components/ListNavigator.jsx","actions/actions.js","services/leagues.js","services/index.js","services/mapOpenLigaDB.js","utils/filter.js","actions/ActionBuilder.js","utils/storeHelpers.js","actions/ActionBuilderWithStore.js","components/MatchdayNavigator.jsx","parts/RefreshCurrentMatchDayButton.jsx","components/RefreshButton.jsx","parts/MatchDayOptionsButton.jsx","parts/MatchDayViewSettings.jsx","parts/LoadingPage.jsx","components/IconButton.jsx","parts/Storage/ClearAllButton.jsx","parts/Storage/ClearSeasonButton.jsx","utils/stateStats.js","parts/Storage/index.jsx","components/PercentageButton.jsx","parts/App.jsx","components/Navbar.jsx","parts/Header.jsx","parts/Footer.jsx","utils/dateFormat.js","Root.jsx","reducers/uiReducer.js","reducers/modelReducer.js","reducers/index.js","index.js","utils/localStorage.js"],"names":["getUi","prop","getSelectedLeague","pipe","getSelectedYear","getSelectedMatchDay","getIsInitializing","getIsLoadingLeagues","getIsLoadingYears","getIsLoadingTeams","getIsLoadingAllMatchDays","getIsLoadingMatchDay","getIsLoading","getModel","getAllLeagues","getAllTeams","getTeamsByLeagueAndYear","getAllMatchDays","getAllMatchs","getAllYearsByLeague","groupByArray","xs","key","reduce","rv","x","v","Function","el","find","r","values","push","dictionarize","array","result","y","id","sortByField","sort","compare","a","b","sum","res","definitions","short","description","getPoints","gf","ga","sumFields","teamInfo","key1","key2","undefined","aggregateSeasonInfo","matchs","home","map","team","hgf","fullTimeHome","hga","fullTimeAway","hp","match","hm","length","away","agf","aga","ap","am","fullWithTotal","concat","_toConsumableArray","_objectSpread","tgf","tga","tp","tm","totalGA","aggregate","avgGA","hdf","adf","tdf","getHG_AG_AVG","infoHome","infoAway","getTG_TG_AVG","getStats","statsType","goals","getHGDF_AGDF_AVG","getTGDF_TGDF_AVG","formatNumber","n","digits","toFixed","poissonProbability","lambda","k","Math","pow","exp","i","faculty","calcLossProbs","probs","probSum","j","calcWinProbs","calcTieProbs","calcResultProbs","hg","ag","arguments","minProb","max","row","formatPercentage","formatRate","min","MatchProbabilityDetails","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","_inherits","_createClass","value","props","stats","numberOfGoals","React","createElement","className","style","backgroundColor","Component","MatchDetails","_getPrototypeOf2","_this","_len","args","Array","_key","call","logoSize","teamId","teams","seasonInfo","info","src","iconUrl","alt","name","height","width","Fragment","details","teamHomeId","teamAwayId","formatProbOrRate","showPercentage","Match","_this2","modelKey","probabilityDetailsMatchId","isProbabilityDetailsShown","teamHome","teamAway","calcStats","formatedStats","formatStats","win","tie","loss","calcWinLossTieProbs","formatProbs","data-toggle","title","moment","lastUpdate","format","shortName","halfTimeHome","halfTimeAway","isFinished","Button","size","color","onClick","toggleProbabilityDetails","FontAwesomeIcon","icon","Collapse","isOpen","MatchsPerDay","statsTitle","statsDescription","scope","date","m","Matchs","func","groupByMatchDay","matchDateTime","groupedMatchs","Object","entries","selectedModelId","statsHeader","item","getShort","getDescription","gm","Table","rawData","table","reverse","class","index","ListNavigator","_Component","event","node","target","parentElement","onSelect","data","buttonStyles","bgStyles","currentIndex","findIndex","selected","selectedItem","nextIndex","prevIndex","nextId","prevId","role","aria-label","disabled","bind","aria-haspopup","aria-expanded","aria-labelledby","RequestLeagues","RequestYears","RequestTeams","RequestMatchDays","RequestMatchs","ReceiveLeagues","ReceiveYears","ReceiveTeams","ReceiveMatchDays","ReceiveMatchs","SelectMatchDay","SelectLeague","SelectYear","StartRefreshMatchs","leagues","years","openligaBaseUrl","mapTeam","olTeam","teamIconUrl","teamName","getSelectedMatchs","state","selectedLeague","selectedYear","selectedMatchDay","allMatchs","filter","league","year","matchDayId","getSelectedYears","toString","getSelectedMatchDays","existsMatchDay","existLeagues","allLeagues","existYears","Error","yearsOfLeague","existTeams","relevantTeams","existMatchDays","relevantDay","getLatestUpdate","selectMatchDay","type","actions","selectLeague","selectYear","receiveMatchDays","json","isLoadingMatchDays","matchDays","olGroup","parseInt","groupOrderID","groupName","groupID","fetchMatchDays","dispatch","requestMatchDays","url","fetch","then","service","fetchMatchs","isLoadingMatchs","requestMatchs","matchday","olMatchs","olMatch","twoTeams","team1","team2","t1","t2","mapper","matchID","matchIsFinished","group","leagueKey","leagueId","lastUpdateDateTime","halfTimeResult","matchResults","resultName","fullTimeResult","pointsTeam1","pointsTeam2","receiveMatchs","refreshMatchs","isRefreshingMatchs","console","log","updateMatchsRequired","endRefreshMatchs","fetchTeams","isLoadingTeams","requestTeams","teamData","teamsByLeagueAndYear","receiveTeams","fetchLeagues","isLoadingLeagues","fetchYears","isLoadingYears","requestYears","yearsByLeague","receiveYears","startInitializing","isInitializing","endInitializing","areSelectedMatchsPresent","store","getState","dispatchFetchMatchs","matchDay","dispatchFetchInitial","fetchInitial","dispatchFetchYears","dispatchSelectMatchDay","dispatchSelectLeague","dispatchSelectYear","updateMatchDaysIfNecessary","areSelectedMatchDaysPresent","dispatchFetchMatchDays","dispatchSwitchMenu","menuId","switchMenu","MatchdayNavigator","updateMatchs","relevantMatchDays","RefreshCurrentMatchDayButton","connect","isUpdating","ui","_ref","spin","MatchDayOptionsButton","ownProps","payload","currentId","switchModel","MatchDayViewSettings","LoadingPage","IconButton","handleClick","ClearAllButton","ClearSeasonButton","getTeamCount","keys","model","getSeasonsCount","seasons","z","count","z1","Storage","teamCount","getStorageStats","l","s","PercentageButton","aria-pressed","_regeneratorRuntime","e","t","prototype","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","f","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_componentDidMount","forceUpdate","unsubscribe","subscribe","update","_asyncToGenerator","_callee","_context","relevantMatchs","previousMatchs","getSeasonInfo","matchId","actionBuilder","Navbar","_leagueChange","_yearChange","_x","_x2","_callee2","_context2","relevantYears","href","yearChange","data-target","aria-controls","leagueChange","selectMenu","Header","Footer","lastUpdateDate","now","dt","duration","diff","asYears","humanize","formatUpdateDate","library","add","icons","Root","initialState","isLoadingAllMatchDays","isLoadingMatchDay","reducer","combineReducers","action","isLoadingLeague","matchDict","_action$payload","locale","thunk","ReduxThunk","persistedState","serializedState","localStorage","getItem","JSON","parse","error","loadState","createStore","applyMiddleware","throttle","stringify","setItem","saveState","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.93ea9784.chunk.js","sourcesContent":["import { prop, pipe } from 'ramda'\r\n\r\nexport const getUi = prop('ui')\r\n\r\nexport const getSelectedLeague = pipe(\r\n  getUi,\r\n  prop('selectedLeague')\r\n)\r\n\r\nexport const getSelectedYear = pipe(\r\n  getUi,\r\n  prop('selectedYear')\r\n)\r\n\r\nexport const getSelectedMatchDay = pipe(\r\n  getUi,\r\n  prop('selectedMatchDay')\r\n)\r\n\r\nexport const getIsInitializing = pipe(\r\n  getUi,\r\n  prop('isInitializing')\r\n)\r\n\r\nexport const getIsLoadingLeagues = pipe(\r\n  getUi,\r\n  prop('isLoadingLeagues')\r\n)\r\n\r\nexport const getIsLoadingYears = pipe(\r\n  getUi,\r\n  prop('isLoadingYears')\r\n)\r\n\r\nexport const getIsLoadingTeams = pipe(\r\n  getUi,\r\n  prop('isLoadingTeams')\r\n)\r\n\r\nexport const getIsLoadingAllMatchDays = pipe(\r\n  getUi,\r\n  prop('isLoadingAllMatchDays')\r\n)\r\n\r\nexport const getIsLoadingMatchDay = pipe(\r\n  getUi,\r\n  prop('isLoadingMatchDay')\r\n)\r\n\r\nexport const getIsLoading =\r\n  getIsInitializing ||\r\n  getIsLoadingLeagues ||\r\n  getIsLoadingYears ||\r\n  getIsLoadingTeams ||\r\n  getIsLoadingAllMatchDays ||\r\n  getIsLoadingMatchDay\r\n","import { prop, pipe } from 'ramda'\r\n\r\nexport const getModel = prop('model')\r\n\r\nexport const getAllLeagues = pipe(\r\n  getModel,\r\n  prop('leagues')\r\n)\r\n\r\nexport const getAllTeams = pipe(\r\n  getModel,\r\n  prop('teams')\r\n)\r\n\r\nexport const getTeamsByLeagueAndYear = pipe(\r\n  getModel,\r\n  prop('teamsByLeagueAndYear')\r\n)\r\n\r\nexport const getAllMatchDays = pipe(\r\n  getModel,\r\n  prop('matchDays')\r\n)\r\n\r\nexport const getAllMatchs = pipe(\r\n  getModel,\r\n  prop('matchs')\r\n)\r\n\r\nexport const getAllYearsByLeague = pipe(\r\n  getModel,\r\n  prop('yearsByLeague')\r\n)\r\n","export const groupByField = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByFunc = (xs, func) => {\r\n  return xs.reduce((rv, x) => {\r\n    const key = func(x)\r\n    ;(rv[key] = rv[key] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByArray = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    let v = key instanceof Function ? key(x) : x[key]\r\n    let el = rv.find((r) => r && r.key === v)\r\n\r\n    if (el) {\r\n      el.values.push(x)\r\n    } else {\r\n      rv.push({ key: v, values: [x] })\r\n    }\r\n\r\n    return rv\r\n  }, [])\r\n}\r\n\r\nexport const dictionarize = (array) => {\r\n  return array.reduce((result, y) => {\r\n    result[y.id] = y\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport const sortByField = (xs, key) => xs.sort(compare(key))\r\n\r\nexport const compare = (key) => (a, b) => {\r\n  if (a[key] < b[key]) return -1\r\n  if (a[key] > b[key]) return 1\r\n  return 0\r\n}\r\n\r\nexport const sum = (xs) => xs.reduce((res, x) => res + x, 0)\r\n","export const TotalGoalsVsTotalGoals = \"tg_vs_tg\"\nexport const TotalGoalsVsTotalGoalsWithDefenseFactor = \"tgdf_vs_tgdf\"\nexport const HomeGoalsVsAwayGoals = \"hg_vs_ag\"\nexport const HomeGoalsVsAwayGoalsWithDefenseFactor = \"hgdf_vs_agdf\"\n//export const TotalPointsVsTotalPoints = \"tp_vs_tp\"\n\nexport const getKeys = () => {     \n    return [\n        TotalGoalsVsTotalGoals,\n        TotalGoalsVsTotalGoalsWithDefenseFactor,\n        HomeGoalsVsAwayGoals,\n        HomeGoalsVsAwayGoalsWithDefenseFactor\n    ]\n}\n\nconst definitions = [\n    {\n        key: TotalGoalsVsTotalGoals,\n        short: \"t-t\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt.\"\n    },\n    {\n        key: TotalGoalsVsTotalGoalsWithDefenseFactor,\n        short: \"t-t*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    },    {\n        key: HomeGoalsVsAwayGoals,\n        short: \"h-a\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore.\"\n    },\n    {\n        key: HomeGoalsVsAwayGoalsWithDefenseFactor,\n        short: \"h-a*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    }\n]\n\nconst find = (key) => definitions.find(x=>x.key===key)\n\nexport const getDescription = (key) => {\n    const item = find(key)\n    return item ? item.description : \"\"\n}\n\nexport const getShort = (key) => {\n    const item = find(key)\n    return item ? item.short : \"\"\n}\n\nexport const getNextId = (currentId) => ++currentId % definitions.length\n\nexport const getKey = (currentId) => definitions[currentId].key","import {\n  getSelectedLeague,\n  getSelectedYear,\n  getSelectedMatchDay,\n} from '../reducers/selectors/uiSelector'\nimport {\n  getAllMatchs\n} from '../reducers/selectors/modelSelector'\nimport {\n  groupByArray,\n  sum\n} from '../utils/listUtils'\n\nimport * as stats from './statsType';\n\nconst getPoints = (gf, ga) => {\n  if (gf > ga) return 3\n  if (gf === ga) return 1\n  return 0\n}\n\nconst getHomePoints = (match) =>\n  getPoints(match.fullTimeHome, match.fullTimeAway)\nconst getAwayPoints = (match) =>\n  getPoints(match.fullTimeAway, match.fullTimeHome)\n\n\n  const sumFields = (teamInfo, key1, key2) => {\n    return !teamInfo ?\n      undefined :\n      teamInfo[key1] && teamInfo[key2] ?\n      teamInfo[key1] + teamInfo[key2] :\n      teamInfo[key1] ?\n      teamInfo[key1] :\n      teamInfo[key2]\n  }\n  \n  const tgf = (teamInfo) => {\n    return sumFields(teamInfo, 'hgf', 'agf')\n  }\n  \n  const tga = (teamInfo) => {\n    return sumFields(teamInfo, 'hga', 'aga')\n  }\n  \n  const tp = (teamInfo) => {\n    return sumFields(teamInfo, 'hp', 'ap')\n  }\n  \n  const tm = (teamInfo) => {\n    return sumFields(teamInfo, 'hm', 'am')\n  }\n\n\nexport const getSeasonInfo = (state) => {\n  const league = getSelectedLeague(state)\n  const year = getSelectedYear(state)\n  const matchDay = getSelectedMatchDay(state)\n  const allMatchs = getAllMatchs(state)\n\n  const previousMatchs = !allMatchs ? [] :\n    // @ts-ignore\n    allMatchs.filter(\n      (m) => m.year === year && m.league === league && m.isFinished &&\n      m.matchDayId < matchDay\n    )\n    \n    return aggregateSeasonInfo(previousMatchs)\n  }\n\nexport const aggregateSeasonInfo = (matchs) => {\n  const home = groupByArray(matchs, 'teamHomeId').map((x) => ({\n    team: x.key,\n    hgf: sum(x.values.map((y) => y.fullTimeHome)),\n    hga: sum(x.values.map((y) => y.fullTimeAway)),\n    hp: sum(x.values.map((y) => getHomePoints(y))),\n    hm: x.values.length,\n  }))\n  const away = groupByArray(matchs, 'teamAwayId').map((x) => ({\n    team: x.key,\n    agf: sum(x.values.map((y) => y.fullTimeAway)),\n    aga: sum(x.values.map((y) => y.fullTimeHome)),\n    ap: sum(x.values.map((y) => getAwayPoints(y))),\n    am: x.values.length,\n  }))\n  \n  const fullByTeam = groupByArray([...home, ...away], 'team')\n  const full = fullByTeam.map((x) =>\n    x.values.reduce((res, x) => ({ ...res,\n      ...x\n    }), {hgf:0, hga:0, hp:0, hm:0, agf:0, aga:0, ap:0, am:0})\n  )\n\n  const fullWithTotal = full.map(x=>{\n    var res = {...x}\n    res.tgf = tgf(x)\n    res.tga = tga(x)\n    res.tp = tp(x)\n    res.tm = tm(x)\n    return res    \n  })\n\n  const totalGA = fullWithTotal.reduce((res,x)=>{\n    var aggregate = { ...res };\n    aggregate.hga += x.hga;\n    aggregate.hm += x.hm;\n    aggregate.aga += x.aga;\n    aggregate.am += x.am;\n    aggregate.tga += x.tga;\n    aggregate.tm += x.tm;\n    return aggregate;\n  }, {hga:0, hm:0, aga:0, am:0, tga:0, tm:0})\n\n  const avgGA = {\n    hga: totalGA.hm > 0 ? totalGA.hga / totalGA.hm : undefined,\n    aga: totalGA.am > 0 ? totalGA.aga / totalGA.am : undefined,\n    tga: totalGA.tm > 0 ? totalGA.tga / totalGA.tm : undefined\n  }\n\n  const fullWithDefenseFactor = fullWithTotal.map(x => ({...x, \n    hdf: avgGA.hga ? (x.hga/x.hm) / avgGA.hga : 1.0,\n    adf: avgGA.aga ? (x.aga/x.am) / avgGA.aga : 1.0,\n    tdf: avgGA.tga ? (x.tga/x.tm) / avgGA.tga : 1.0\n    })\n  )\n\n  return fullWithDefenseFactor\n}\n\n\n\nconst getHG_AG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.hm ? infoHome.hgf / infoHome.hm : undefined\n  const goalsAway =\n    infoAway && infoAway.am ? infoAway.agf / infoAway.am : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getHGDF_AGDF_AVG = (infoHome, infoAway) => {\n  const goals = getHG_AG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.adf ? goals.home * infoAway.adf :undefined,\n    away: goals.away && infoHome.hdf ? goals.away * infoHome.hdf: undefined\n  }\n}\n\nconst getTG_TG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.tm ? infoHome.tgf / infoHome.tm : undefined\n  const goalsAway =\n    infoAway && infoAway.tm ? infoAway.tgf / infoAway.tm : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getTGDF_TGDF_AVG = (infoHome, infoAway) => {\n  const goals = getTG_TG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.tdf ? goals.home * infoAway.tdf :undefined,\n    away: goals.away && infoHome.tdf ? goals.away * infoHome.tdf :undefined,\n  }\n}\n\nconst getStats = (infoHome, infoAway, statsType) => {\n  switch (statsType) {\n    case stats.HomeGoalsVsAwayGoalsWithDefenseFactor:\n      return getHGDF_AGDF_AVG(infoHome, infoAway)\n    case stats.HomeGoalsVsAwayGoals:\n      return getHG_AG_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoalsWithDefenseFactor:\n      return getTGDF_TGDF_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoals:\n    default:\n      return getTG_TG_AVG(infoHome, infoAway)\n  }\n}\n\nexport const calcStats = (seasonInfo, teamHomeId, teamAwayId, stats) => {\n  const infoHome = seasonInfo.find((x) => x.team === teamHomeId)\n  const infoAway = seasonInfo.find((x) => x.team === teamAwayId)\n  return getStats(infoHome, infoAway, stats)\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '0.0')\nexport const formatStats = (stats, digits = 2) => {\n  return `${formatNumber(stats.home, digits)}:${formatNumber(\n    stats.away,\n    digits\n  )}`\n}","const faculty = (k) => {\n  let r = 1.0\n  for (let i = 1; i <= k; ++i) {\n    r *= i\n  }\n  return r\n}\n\nconst poissonProbability = (lambda, k) => {\n  return (Math.pow(lambda, k) * Math.exp(-lambda)) / faculty(k)\n}\n\nexport const calcLossProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    for (let j = i + 1; j < n; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcWinProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 1; i < n; ++i) {\n    for (let j = 0; j < i; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcTieProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    probSum += probs[i][i]\n  }\n  return probSum\n}\n\nexport const calcWinLossTieProbs = (hg, ag) => {\n  const probs = calcResultProbs(hg, ag)\n  return {\n    win: calcWinProbs(probs),\n    tie: calcTieProbs(probs),\n    loss: calcLossProbs(probs),\n  }\n}\n\nexport const calcResultProbs = (hg, ag, n = 20, minProb = 0.01) => {\n  const hgf = Math.max(minProb, hg || 0.0)\n  const agf = Math.max(minProb, ag || 0.0)\n\n  let result = []\n  for (let i = 0; i <= n; ++i) {\n    let row = []\n    for (let j = 0; j <= n; ++j) {\n      row.push(poissonProbability(hgf, i) * poissonProbability(agf, j))\n    }\n    result.push(row)\n  }\n  return result\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '-')\n\nexport const formatPercentage = (n, digits = 0) =>\n  n ? (n * 100.0).toFixed(digits) + '%' : '-'\n\nexport const formatProbs = (probs, n = 2) => {\n  return `${formatPercentage(probs.win, n)}/${formatPercentage(\n    probs.tie,\n    n\n  )}/${formatPercentage(probs.loss, n)}`\n}\n\nexport const formatRate = (n, digits = 1) =>\n  n ? Math.min(99.9, 1.0 / n).toFixed(digits) : '-'\n\nexport const getProbDescription = (hg, ag) => {\n  const results = calcResultProbs(hg, ag)\n  let content = ''\n  for (let i = 0; i <= 5; ++i) {\n    for (let j = 0; j <= 5; ++j) {\n      if (i + j > 6) continue\n      content += `<b>${i}:${j}</b> ${formatPercentage(results[i][j])}<br/>`\n    }\n  }\n  return `<div>${content}</div>`\n}\n","import React from 'react'\nimport './MatchProbabilityDetails.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\nexport class MatchProbabilityDetails extends React.Component {\n  \n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 7, 0.01)\n    const numberOfGoals = [0,1,2,3,4,5,6]\n    const formatProb = (prob) => { return (prob*100).toFixed(0)};\n     return (\n            <div className='d-flex flex-column p-0'>\n                <div className='d-flex flex-nowrap align-items-stretch'>\n                  <div className='p-2 text-center score-card'>[%]</div>\n                  {numberOfGoals.map((i) => (<div className='p-2 text-center score-card'>{i}</div>))}\n                </div>\n                {numberOfGoals.map((i) => (\n                    <div className='d-flex flex-nowrap align-items-stretch'>\n                        <div className='p-2 text-center score-card'>{i}</div>\n                        {numberOfGoals.map((j) => (\n                        <div className={`p-2 text-center score-card ${i===j?\"diagonal\":\"\"}`} style={{backgroundColor: `hsl(360 100% ${100 - (probs[i][j]*70.0)}%)`}}>\n                            <small>{formatProb(probs[i][j])}</small>\n                        </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n     )    \n  }\n}","import React from 'react'\nimport './Matchs.css'\n\nexport class MatchDetails extends React.Component {\n    logoSize = 20\n\n  details(teamId, teams, seasonInfo) {\n    const team = teams[teamId]\n    const info = seasonInfo.find(x=>x.team===teamId)\n    return <div className='row'>\n        <div className='col-2'>\n            <img src={team.iconUrl} alt={team.name} \n                        height={this.logoSize}\n                        width={this.logoSize}/>\n        </div>\n        {!info && (<div className='col-10'><i>no data</i></div>)}\n        {info && (<>\n            <div className='col-1'>\n                <small>{info.tp}</small>\n            </div>\n            <div className='col-2'>\n                <small>{info.tgf}:{info.tga}</small>\n            </div>\n            <div className='col-1'>\n                <small>{info.hp}</small>\n            </div>\n            <div className='col-2'>\n                <small>{info.hgf}:{info.hga}</small>\n            </div>\n            <div className='col-1'>\n                <small>{info.ap}</small>\n            </div>\n            <div className='col-2'>\n                <small>{info.agf}:{info.aga}</small>\n            </div>\n        </>)} \n    </div>\n  }\n\n  render() {\n    const teams = this.props.teams;\n    const match = this.props.match;\n    const seasonInfo = this.props.seasonInfo;\n    if (!teams || !match || !seasonInfo) return <div>empty</div>\n    return <div className='container'>\n        <div className='row'>\n            <div className='col-2'><small>Team</small></div>\n            <div className='col-3'><small>Gesamt</small></div>\n            <div className='col-3'><small>Heim</small></div>\n            <div className='col-3'><small>Auswärts</small></div>\n        </div>\n        {this.details(match.teamHomeId, teams, seasonInfo)}\n        {this.details(match.teamAwayId, teams, seasonInfo)}\n    </div>\n  }\n}\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport './Match.css'\r\nimport { formatStats, calcStats } from '../stats/seasonInfo'\r\nimport {\r\n  formatProbs,\r\n  formatRate,\r\n  calcWinLossTieProbs,\r\n  formatPercentage,\r\n  getProbDescription,\r\n} from '../maths/probabilities'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button, Collapse } from 'reactstrap'\r\nimport { MatchProbabilityDetails } from './MatchProbabilityDetails'\r\nimport { MatchDetails } from './MatchDetails'\r\n\r\nconst formatProbOrRate = (showPercentage, value) =>\r\n  showPercentage ? formatPercentage(value) : formatRate(value)\r\n\r\nclass Match extends React.Component {\r\n  logoSize = 20\r\n  render() {\r\n\r\n\r\n    const match = this.props.match\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const modelKey = this.props.modelKey\r\n    const probabilityDetailsMatchId = this.props.probabilityDetailsMatchId;\r\n    const isProbabilityDetailsShown = match.id===probabilityDetailsMatchId;\r\n \r\n\r\n    const teamHome = teams[match.teamHomeId]\r\n    const teamAway = teams[match.teamAwayId]\r\n\r\n    const stats = calcStats(\r\n      seasonInfo,\r\n      match.teamHomeId,\r\n      match.teamAwayId,\r\n      modelKey\r\n    )\r\n    const digits = 1\r\n    const formatedStats = formatStats(stats, digits)\r\n    const probs = calcWinLossTieProbs(stats.home, stats.away)\r\n    const formatedProbs = formatProbs(probs)\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      <>\r\n      <div\r\n        className=\"row\"\r\n        key={match.id}\r\n        data-toggle=\"tooltip\"\r\n        title={\r\n          'aktualisiert: ' +\r\n          moment(match.lastUpdate).format('DD.MM.YY HH:mm:ss')\r\n        }\r\n      >\r\n        <div className=\"col-2 pr-0\">\r\n          <img\r\n            src={teamHome.iconUrl}\r\n            alt={teamHome.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n          <img\r\n            src={teamAway.iconUrl}\r\n            alt={teamAway.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n        </div>\r\n        <div className=\"col-1 pr-0\">\r\n          <small>\r\n            ({match.halfTimeHome}:{match.halfTimeAway})\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 pr-0\">\r\n          <small className={match.isFinished ? 'final ' : ''}>\r\n            {match.fullTimeHome}:{match.fullTimeAway}\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <Button size='sm' color=\"link\" onClick={()=>this.props.toggleProbabilityDetails(isProbabilityDetailsShown ? null: match.id)}>\r\n            <FontAwesomeIcon icon=\"angle-double-down\" color=\"gray\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-2 text-center pr-0\">\r\n          <small>\r\n            <i>{formatedStats}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.win)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.tie)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.loss)}</i>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Collapse className='col-12' isOpen={isProbabilityDetailsShown}>\r\n          <MatchDetails match={match} teams={teams} seasonInfo={seasonInfo} />\r\n          <MatchProbabilityDetails stats={stats} />\r\n        </Collapse>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Match\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport Match from './Match'\r\nimport './MatchsPerDay.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass MatchsPerDay extends React.Component {\r\n  render() {\r\n    const statsTitle = this.props.statsTitle\r\n    const statsDescription = this.props.statsDescription\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      < >\r\n              <div className=\"row\" key=\"this.props.date\">\r\n                <div scope=\"col\" className=\"col-5 \">\r\n                  <small>\r\n                    {moment(this.props.date).format('ddd DD.MM HH:mm')}\r\n                  </small>\r\n                </div>\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-2 text-center\">\r\n                    <small>\r\n                      {statsTitle}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon icon=\"info-circle\" size=\"sm\" />\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>1</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>0</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>2</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\" />\r\n                )}\r\n              </div>\r\n              {this.props.matchs.map((m) => (\r\n                <Match\r\n                  match={m}\r\n                  teams={this.props.teams}\r\n                  seasonInfo={this.props.seasonInfo}\r\n                  key={m.id}\r\n                  showPercentage={showPercentage}\r\n                  modelKey={this.props.modelKey}\r\n                  probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n                  toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n                />\r\n              ))}\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchsPerDay\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Matchs extends React.Component {\r\n  render() {\r\n    const matchs = this.props.matchs\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const showPercentage = this.props.showPercentage\r\n    if (!matchs || matchs.length === 0 || !teams) return <div>empty</div>\r\n\r\n    const groupByMatchDay = groupByFunc(matchs, (x) =>\r\n      x.matchDateTime\r\n    )\r\n\r\n    // @ts-ignore\r\n    const groupedMatchs = Object.entries(groupByMatchDay)\r\n    sortByField(groupedMatchs, '0')\r\n\r\n    const selectedModelId = this.props.selectedModelId\r\n    const modelKey = getKey(selectedModelId)\r\n    const statsHeader = getShort(modelKey)\r\n    const statsDescription = getDescription(modelKey)\r\n    \r\n    return (\r\n      <div className=\"container-fluid schedule\">\r\n        {groupedMatchs.map((gm, i) => (\r\n          <MatchsPerDay\r\n            teams={teams}\r\n            seasonInfo={seasonInfo}\r\n            date={gm[0]}\r\n            matchs={gm[1]}\r\n            key={gm[0]}\r\n            statsTitle={i === 0 ? statsHeader : ''}\r\n            statsDescription={statsDescription}\r\n            modelKey={modelKey}\r\n            showPercentage={showPercentage}\r\n            probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n            toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Matchs\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Table extends React.Component {\r\n  logoSize = 20\r\n\r\n  render() {\r\n    const seasonInfo = this.props.seasonInfo\r\n    const teams = this.props.teams\r\n    //const selectedModelId = this.props.selectedModelId\r\n \r\n    const rawData = seasonInfo.map((x) => ({\r\n      ...x,\r\n      iconUrl: teams[x.team].iconUrl,\r\n      shortName: teams[x.team].shortName,\r\n    }))\r\n\r\n    const table = sortByField(rawData, \"tp\").reverse()\r\n    return (\r\n      <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Team</th>\r\n      <th scope=\"col\">P</th>\r\n      <th scope=\"col\">TG</th>\r\n      <th scope=\"col\">TA</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {table.map((team, index) => (<tr>\r\n      <td>          \r\n        <img\r\n            src={team.iconUrl}\r\n            alt={team.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n        />\r\n      </td>\r\n      <td>{team.tp}</td>\r\n      <td>{team.tgf}</td>\r\n      <td>{team.tga}</td>\r\n    </tr>))}\r\n  </tbody>\r\n</table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass ListNavigator extends Component {\r\n  onSelect(event) {\r\n    let node = event.target\r\n    while (!node.id) {\r\n      node = node.parentElement\r\n    }\r\n    this.props.onSelect(node.id)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.data) return <div />\r\n    const buttonStyles = this.props.buttonStyles ? this.props.buttonStyles : ''\r\n    const bgStyles = this.props.bgStyles ? this.props.bgStyles : ''\r\n\r\n    const data = this.props.data\r\n    const currentIndex = data.findIndex((x) => x.id === this.props.selected)\r\n    const selectedItem = data[currentIndex]\r\n    const nextIndex = currentIndex + 1\r\n    const prevIndex = currentIndex - 1\r\n    const nextId = nextIndex < data.length ? data[nextIndex].id : undefined\r\n    const prevId = prevIndex >= 0 ? data[prevIndex].id : undefined\r\n\r\n    return (\r\n      <div\r\n        className={`btn-group ${bgStyles}`}\r\n        role=\"group\"\r\n        aria-label=\"Button group with nested dropdown\"\r\n      >\r\n        <Button\r\n\r\n          id={prevId}\r\n          className={`btn btn-secondary ${buttonStyles}`}\r\n          disabled={prevId === undefined}\r\n          onClick={this.onSelect.bind(this)}\r\n        >\r\n          <FontAwesomeIcon icon=\"caret-left\" />\r\n        </Button>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <Button\r\n            id=\"btnGroupDrop1\"\r\n            className={`btn btn-secondary dropdown-toggle ${buttonStyles}`}\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {selectedItem ? selectedItem.name : this.props.selected}\r\n          </Button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {this.props.data.map((x) => (\r\n              <Button\r\n                className=\"dropdown-item\"\r\n                id={x.id}\r\n                key={x.id}\r\n                onClick={this.onSelect.bind(this)}\r\n              >\r\n                {x.name}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n          <Button\r\n            id={nextId}\r\n            className={`btn btn-secondary ${buttonStyles}`}\r\n            onClick={this.onSelect.bind(this)}\r\n            disabled={nextId === undefined}\r\n          >\r\n            <FontAwesomeIcon icon=\"caret-right\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ListNavigator\r\n","/******************* Actions ******************/\r\n\r\nexport const RequestLeagues = 'RequestLeagues'\r\nexport const RequestYears = 'RequestYears'\r\nexport const RequestTeams = 'RequestTeams'\r\nexport const RequestMatchDays = 'RequestMatchDays'\r\nexport const RequestMatchs = 'RequestMatchs'\r\nexport const ReceiveLeagues = 'ReceiveLeagues'\r\nexport const ReceiveYears = 'ReceiveYears'\r\nexport const ReceiveTeams = 'ReceiveTeams'\r\n\r\nexport const ReceiveMatchDays = 'ReceiveMatchDays'\r\nexport const ReceiveMatchs = 'ReceiveMatchs'\r\n\r\nexport const SelectMatchDay = 'SelectMatchDay'\r\nexport const SelectLeague = 'SelectLeague'\r\nexport const SelectYear = 'SelectYear'\r\n\r\nexport const StartInitializing = 'StartInitializing'\r\nexport const EndInitializing = 'EndInitializing'\r\n\r\nexport const StartRefreshMatchs = 'StartRefreshMatchs'\r\nexport const EndRefreshMatchs = 'EndRefreshMatchs'\r\n\r\nexport const SwitchMenu = 'SwitchMenu'\r\n\r\n/******** Clear **********/\r\nexport const clearSeason = 'ClearSeason'\r\nexport const clearAll = 'ClearAll'\r\n\r\nexport const ShowPercentage = 'ShowPercentage'\r\nexport const SwitchModel = 'SwitchModel'\r\nexport const ToggleProbabilityDetails = 'ToggleProbabilityDetails'\r\n","const leagues = [\r\n  {\r\n    id: 'bl1',\r\n    name: '1.Bundesliga',\r\n    key: 3005,\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  {\r\n    id: 'bl2',\r\n    name: '2.Bundesliga',\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  { id: 'bl3', name: '3.Bundesliga', years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015] },\r\n  { id: 'fifa18', name: 'WM18', years: [2018] },\r\n]\r\n\r\nexport default leagues\r\n","import leagues from './leagues'\r\n\r\nfunction getLeagues() {\r\n  return leagues.map((x) => {\r\n    return { id: x.id, name: x.name }\r\n  })\r\n}\r\n\r\nfunction getYears(leagueId) {\r\n  const league = leagues.find((x) => x.id === leagueId)\r\n  if (!league) return []\r\n  return league.years.map((y) => {\r\n    return { id: y, name: y, leagueId }\r\n  })\r\n}\r\n// new urls: https://api.openligadb.de/getmatchdata/bl1/2020/1\r\nconst openligaBaseUrl = 'https://api.openligadb.de'\r\nfunction getTeams(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailableteams/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\nfunction getMatchDays(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailablegroups/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchs(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getmatchdata/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchsLastChangeDate(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getlastchangedate/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nexport {\r\n  getTeams,\r\n  getLeagues,\r\n  getYears,\r\n  getMatchs,\r\n  getMatchDays,\r\n  getMatchsLastChangeDate,\r\n}\r\n","/****************** Map open liga db data ******************/\r\nfunction mapMatch(olMatch, league, year) {\r\n  const id = olMatch.matchID\r\n  const matchDateTime = olMatch.matchDateTime\r\n  const teamHomeId = olMatch.team1.teamId\r\n  const teamAwayId = olMatch.team2.teamId\r\n  const isFinished = olMatch.matchIsFinished\r\n  const matchDayId = olMatch.group.groupOrderID\r\n  const leagueKey = olMatch.leagueId\r\n  const lastUpdate = olMatch.lastUpdateDateTime\r\n  const halfTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Halbzeit\" || x.resultName === \"Halbzeitergebnis\"\r\n  )\r\n  const fullTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Endergebnis\"\r\n  )\r\n  const halfTimeHome = halfTimeResult ? halfTimeResult.pointsTeam1 : '-'\r\n  const halfTimeAway = halfTimeResult ? halfTimeResult.pointsTeam2 : '-'\r\n  const fullTimeHome = fullTimeResult ? fullTimeResult.pointsTeam1 : '-'\r\n  const fullTimeAway = fullTimeResult ? fullTimeResult.pointsTeam2 : '-'\r\n  return {\r\n    id,\r\n    teamHomeId,\r\n    teamAwayId,\r\n    matchDayId,\r\n    league,\r\n    leagueKey,\r\n    year,\r\n    lastUpdate,\r\n    matchDateTime,\r\n    isFinished,\r\n    halfTimeHome,\r\n    halfTimeAway,\r\n    fullTimeHome,\r\n    fullTimeAway,\r\n  }\r\n}\r\n\r\nfunction mapTeam(olTeam) {\r\n  const id = olTeam.teamId\r\n  const shortName = olTeam.shortName\r\n  const iconUrl = olTeam.teamIconUrl\r\n  const name = olTeam.teamName\r\n  return {\r\n    id,\r\n    shortName,\r\n    iconUrl,\r\n    name,\r\n  }\r\n}\r\n\r\nfunction mapTeamFromMatch(olMatch) {\r\n  const team1 = mapTeam(olMatch.team1)\r\n  const team2 = mapTeam(olMatch.team2)\r\n  return [team1, team2]\r\n}\r\n\r\nfunction mapTeamFromMatchs(olMatchs) {\r\n  let teams = {}\r\n  for (let i = 0; i < olMatchs.length; i++) {\r\n    const twoTeams = mapTeamFromMatch(olMatchs[i])\r\n    const t1 = twoTeams[0]\r\n    teams[t1.id] = t1\r\n    const t2 = twoTeams[1]\r\n    teams[t2.id] = t2\r\n  }\r\n  return teams\r\n}\r\n\r\nfunction mapMatchDay(olGroup, league, year) {\r\n  const id = parseInt(olGroup.groupOrderID, 10)\r\n  const name = olGroup.groupName\r\n  const key = parseInt(olGroup.groupID, 10)\r\n  return {\r\n    id,\r\n    name,\r\n    key,\r\n    league,\r\n    year\r\n  }\r\n}\r\n\r\nexport {\r\n  mapMatch,\r\n  mapMatchDay,\r\n  mapTeam,\r\n  mapTeamFromMatchs\r\n}","import {\r\n  prop,\r\n  map\r\n} from 'ramda'\r\nimport {\r\n  getAllMatchs,\r\n  getAllYearsByLeague,\r\n  getAllMatchDays,\r\n  getTeamsByLeagueAndYear,\r\n} from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport function getSelectedMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n\r\n  // @ts-ignore\r\n  return !allMatchs ? [] : allMatchs.filter(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}\r\nexport function getSelectedYears(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  return getAllYearsByLeague(state)[selectedLeague.toString()]\r\n}\r\n\r\nexport function getSelectedMatchDays(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n\r\n  const allMatchDays = getAllMatchDays(state)\r\n\r\n  // @ts-ignore\r\n  return allMatchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport const existsMatchDay = (state, matchDayId) => {\r\n  const matchDays = getSelectedMatchDays(state)\r\n  return !!matchDays.find((x) => x.id === matchDayId)\r\n}\r\n\r\nexport const existLeagues = (state) => {\r\n  const allLeagues = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allLeagues && allLeagues.length > 0\r\n}\r\n\r\nexport const existYears = (state, selectedLeague) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n\r\n  const yearsOfLeague = getAllYearsByLeague(state)[selectedLeague.toString()]\r\n  return yearsOfLeague && yearsOfLeague.length > 0\r\n}\r\n\r\nexport const existTeams = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const teamsByLeagueAndYear = getTeamsByLeagueAndYear(state)\r\n  // @ts-ignore\r\n  const relevantTeams = teamsByLeagueAndYear.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantTeams && relevantTeams.length > 0\r\n}\r\n\r\nexport const existMatchDays = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const matchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  const relevantDay = matchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantDay && relevantDay.length > 0\r\n}\r\n\r\nexport const getLatestUpdate = (matchs) => {\r\n  if (!matchs || matchs.length === 0) return undefined\r\n  const lastUpdates = map(prop('lastUpdate'))(matchs)\r\n    .sort()\r\n    .reverse()\r\n  return lastUpdates[0]\r\n}","import * as actions from './actions'\r\nimport * as statsType from '../stats/statsType'\r\nimport * as service from '../services'\r\nimport * as mapper from '../services/mapOpenLigaDB'\r\nimport {\r\n  existsMatchDay,\r\n  existLeagues,\r\n  existYears,\r\n  existTeams,\r\n  existMatchDays,\r\n  getSelectedYears,\r\n  getSelectedMatchDays,\r\n  getSelectedMatchs,\r\n  getLatestUpdate,\r\n} from '../utils/filter'\r\nimport {\r\n  getSelectedMatchDay,\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  dictionarize\r\n} from '../utils/listUtils'\r\nimport {\r\n  getAllLeagues\r\n} from '../reducers/selectors/modelSelector'\r\n\r\n/******************* SELECT in UI ******************/\r\n\r\nfunction selectMatchDay(state, selectedMatchDay) {\r\n  if (!existsMatchDay(state, selectedMatchDay))\r\n    selectedMatchDay = getSelectedMatchDay(state)\r\n  return {\r\n    type: actions.SelectMatchDay,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction selectLeague(selectedLeague) {\r\n  return {\r\n    type: actions.SelectLeague,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction selectYear(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.SelectYear,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\n/***************** MATCHDAYS  *********************/\r\n\r\nfunction requestMatchDays(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestMatchDays,\r\n    isLoadingMatchDays: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveMatchDays(selectedLeague, selectedYear, json) {\r\n  return {\r\n    type: actions.ReceiveMatchDays,\r\n    isLoadingMatchDays: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    matchDays: json.map((x) =>\r\n      mapper.mapMatchDay(x, selectedLeague, selectedYear)\r\n    ),\r\n  }\r\n}\r\n\r\nfunction fetchMatchDays(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchDays(selectedLeague, selectedYear))\r\n    return service\r\n      .getMatchDays(selectedLeague, selectedYear)\r\n      .then((json) =>\r\n        dispatch(receiveMatchDays(selectedLeague, selectedYear, json))\r\n      )\r\n  }\r\n}\r\n\r\n/***************** MATCHS  *********************/\r\n\r\nfunction requestMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return {\r\n    type: actions.RequestMatchs,\r\n    isLoadingMatchs: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json) {\r\n  const teams = mapper.mapTeamFromMatchs(json)\r\n  return {\r\n    type: actions.ReceiveMatchs,\r\n    isLoadingMatchs: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n    matchs: json.map((x) => mapper.mapMatch(x, selectedLeague, selectedYear)),\r\n    teams,\r\n  }\r\n}\r\n\r\nfunction fetchMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n    return service\r\n      .getMatchs(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) =>\r\n        dispatch(\r\n          receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json)\r\n        )\r\n      )\r\n  }\r\n}\r\n\r\nfunction refreshMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  if (!selectedLeague || !selectedYear || !selectedYear) return\r\n\r\n  return function (dispatch) {\r\n    dispatch(startRefreshMatchs())\r\n    return service\r\n      .getMatchsLastChangeDate(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) => {\r\n        if (updateMatchsRequired(state, json)) {\r\n          fetchMatchs(selectedLeague, selectedYear, selectedMatchDay)(\r\n            dispatch\r\n          ).then((x) => dispatch(endRefreshMatchs()))\r\n        } else {\r\n          dispatch(endRefreshMatchs())\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nfunction updateMatchsRequired(state, date) {\r\n  console.log(state, date)  \r\n  const matchs = getSelectedMatchs(state)\r\n  const lastUpdate = getLatestUpdate(matchs)\r\n  return !lastUpdate || lastUpdate < date\r\n}\r\n\r\nfunction startRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: true,\r\n  }\r\n}\r\n\r\nfunction endRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: false,\r\n  }\r\n}\r\n\r\n/***************** TEAMS  *********************/\r\n\r\nfunction requestTeams(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestTeams,\r\n    isLoadingTeams: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveTeams(selectedLeague, selectedYear, json) {\r\n  const teamData = json.map((x) => mapper.mapTeam(x))\r\n  const teams = dictionarize(teamData)\r\n  const teamsByLeagueAndYear = teamData.map((x) => ({\r\n    teamId: x.id,\r\n    league: selectedLeague,\r\n    year: selectedYear,\r\n  }))\r\n\r\n  return {\r\n    type: actions.ReceiveTeams,\r\n    isLoadingTeams: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    teams,\r\n    teamsByLeagueAndYear,\r\n  }\r\n}\r\n\r\nfunction fetchTeams(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestTeams(selectedLeague, selectedYear))\r\n    const promise = service.getTeams(selectedLeague, selectedYear)\r\n    return (\r\n      promise\r\n      //.then(\r\n      // response => response.json()\r\n      //error => console.log('An error occurred.',   error)\r\n      //)\r\n      .then((json) =>\r\n        dispatch(receiveTeams(selectedLeague, selectedYear, json))\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\n/***************** LEAGUES  *********************/\r\n\r\nfunction requestLeagues() {\r\n  return {\r\n    type: actions.RequestLeagues,\r\n    isLoadingLeagues: true\r\n  }\r\n}\r\n\r\nfunction receiveLeagues(json) {\r\n  return {\r\n    type: actions.ReceiveLeagues,\r\n    isLoadingLeagues: false,\r\n    leagues: json.map((x) => x),\r\n  }\r\n}\r\n\r\nfunction fetchLeagues() {\r\n  return function (dispatch) {\r\n    dispatch(requestLeagues())\r\n    const leagues = service.getLeagues()\r\n    dispatch(receiveLeagues(leagues))\r\n  }\r\n}\r\n\r\n/***************** YEARS  *********************/\r\n\r\nfunction requestYears(selectedLeague) {\r\n  return {\r\n    type: actions.RequestYears,\r\n    isLoadingYears: true,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction receiveYears(selectedLeague, json) {\r\n  const years = json.map((x) => x)\r\n  let yearsByLeague = {}\r\n  yearsByLeague[selectedLeague] = years\r\n  return {\r\n    type: actions.ReceiveYears,\r\n    selectedLeague: selectedLeague,\r\n    isLoadingYears: false,\r\n    yearsByLeague,\r\n  }\r\n}\r\n\r\nfunction fetchYears(selectedLeague) {\r\n  if (selectedLeague === undefined)\r\n    throw new Error('selectedLeague is undefined')\r\n\r\n  return function (dispatch) {\r\n    dispatch(requestYears(selectedLeague))\r\n    const years = service.getYears(selectedLeague)\r\n    dispatch(receiveYears(selectedLeague, years))\r\n  }\r\n}\r\n\r\n/***************** INIT  *********************/\r\n\r\nfunction fetchInitial(store) {\r\n  return function (dispatch) {\r\n    dispatch(startInitializing())\r\n\r\n    let state = store.getState()\r\n    if (!existLeagues(state)) {\r\n      fetchLeagues()(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var league = getAllLeagues(state)[0]\r\n      dispatch(selectLeague(league.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedLeague = getSelectedLeague(state)\r\n    if (!existYears(state, selectedLeague)) {\r\n      fetchYears(selectedLeague)(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var year = getSelectedYears(state)[0]\r\n      dispatch(selectYear(selectedLeague, year.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedYear = getSelectedYear(state)\r\n    if (!existTeams(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchTeams(selectedLeague, selectedYear))\r\n    }\r\n\r\n    if (!existMatchDays(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchMatchDays(selectedLeague, selectedYear)).then(() => {\r\n        let state = store.getState()\r\n        const selectedMatchDay = getSelectedMatchDay(state)\r\n        dispatch(fetchMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n      })\r\n    } else {\r\n      const matchDay = getSelectedMatchDays(state)[0]\r\n      dispatch(selectMatchDay(state, matchDay.id))\r\n    }\r\n    dispatch(endInitializing())\r\n  }\r\n}\r\n\r\nconst startInitializing = () => ({\r\n  type: actions.StartInitializing,\r\n  isInitializing: true,\r\n})\r\nconst endInitializing = () => ({\r\n  type: actions.EndInitializing,\r\n  isInitializing: false,\r\n})\r\n\r\n/* ----------- Menu ----------- */\r\nconst switchMenu = (id) => ({\r\n  type: actions.SwitchMenu,\r\n  menuId: id,\r\n})\r\n\r\n/* ----------- Clear ----------- */\r\n\r\nconst clearAll = () => ({\r\n  type: actions.clearAll,\r\n})\r\n\r\nconst clearSeason = (league, year) => ({\r\n  type: actions.clearSeason,\r\n  payload: {\r\n    league,\r\n    year\r\n  },\r\n})\r\n\r\n\r\n/* ----------- Visualize ----------- */\r\n\r\nconst showPercentage = (flag) => ({\r\n  type: actions.ShowPercentage,\r\n  payload: flag\r\n})\r\n\r\nconst switchModel = (selectedModelId) => ({\r\n  type: actions.SwitchModel,\r\n  payload: statsType.getNextId(selectedModelId)\r\n})\r\n\r\nconst toggleProbabilityDetails = (matchId) => ({\r\n  type: actions.ToggleProbabilityDetails,\r\n  payload: matchId\r\n})\r\n\r\nexport {\r\n  clearAll,\r\n  clearSeason,\r\n  switchMenu,\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  refreshMatchs,\r\n  showPercentage,\r\n  switchModel,\r\n  toggleProbabilityDetails,\r\n}","import {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  getAllMatchDays,\r\n  getAllMatchs,\r\n} from '../reducers/selectors/modelSelector'\r\n\r\nexport function areSelectedMatchDaysPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const allMatchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  return allMatchDays.find(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport function areSelectedMatchsPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allMatchs.find(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}","import {\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  switchMenu,\r\n} from './ActionBuilder'\r\nimport {\r\n  areSelectedMatchDaysPresent,\r\n  areSelectedMatchsPresent,\r\n} from '../utils/storeHelpers'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\n/******************* ActionBuilder with store ******************/\r\nconst dispatchFetchTeams = function(store, league, year) {\r\n  return store.dispatch(fetchTeams(league, year))\r\n}\r\n\r\nconst dispatchFetchMatchs = function(store, league, year, matchDay) {\r\n  return store.dispatch(fetchMatchs(league, year, matchDay))\r\n}\r\n\r\nconst dispatchFetchMatchDays = function(store, league, year) {\r\n  return store.dispatch(fetchMatchDays(league, year))\r\n}\r\n\r\nconst dispatchFetchInitial = function(store) {\r\n  return store.dispatch(fetchInitial(store))\r\n}\r\n\r\nconst dispatchFetchLeagues = function(store) {\r\n  return store.dispatch(fetchLeagues())\r\n}\r\n\r\nconst dispatchFetchYears = function(store, league) {\r\n  return store.dispatch(fetchYears(league))\r\n}\r\n\r\nconst dispatchSelectMatchDay = function(store, matchDay) {\r\n  return store.dispatch(selectMatchDay(store.getState(), matchDay))\r\n}\r\n\r\nconst dispatchSelectLeague = function(store, league) {\r\n  return store.dispatch(selectLeague(league))\r\n}\r\n\r\nconst dispatchSelectYear = function(store, league, year) {\r\n  return store.dispatch(selectYear(league, year))\r\n}\r\n\r\nconst updateMatchDaysIfNecessary = (store) => {\r\n  let state = store.getState()\r\n  if (!areSelectedMatchDaysPresent(store)) {\r\n    state = store.getState()\r\n    dispatchFetchMatchDays(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state)\r\n    )\r\n  }\r\n  state = store.getState()\r\n  let selectedMatchDay = getSelectedMatchDay(state)\r\n  selectedMatchDay = selectedMatchDay ? selectedMatchDay : 1\r\n  dispatchSelectMatchDay(store, selectedMatchDay)\r\n\r\n  if (!areSelectedMatchsPresent(store)) {\r\n    const state = store.getState()\r\n    dispatchFetchMatchs(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state),\r\n      getSelectedMatchDay(state)\r\n    )\r\n  }\r\n}\r\n\r\nconst dispatchSwitchMenu = (store, id) => store.dispatch(switchMenu(id))\r\n\r\nexport {\r\n  dispatchSwitchMenu,\r\n  dispatchFetchInitial,\r\n  dispatchFetchLeagues,\r\n  dispatchFetchTeams,\r\n  dispatchFetchMatchDays,\r\n  dispatchFetchMatchs,\r\n  dispatchFetchYears,\r\n  dispatchSelectMatchDay,\r\n  dispatchSelectLeague,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport ListNavigator from './ListNavigator'\r\n\r\nimport {\r\n  dispatchFetchMatchs,\r\n  dispatchSelectMatchDay,\r\n} from '../actions/ActionBuilderWithStore'\r\n\r\nimport { areSelectedMatchsPresent } from '../utils/storeHelpers'\r\nimport { getSelectedMatchDays } from '../utils/filter'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nclass MatchdayNavigator extends Component {\r\n  onSelect(id) {\r\n    const store = this.props.store\r\n    dispatchSelectMatchDay(store, parseInt(id, 10))\r\n    this.updateMatchs()\r\n  }\r\n\r\n  updateMatchs() {\r\n    const store = this.props.store\r\n    if (!areSelectedMatchsPresent(store)) {\r\n      const state = store.getState()\r\n      dispatchFetchMatchs(\r\n        store,\r\n        getSelectedLeague(state),\r\n        getSelectedYear(state),\r\n        getSelectedMatchDay(state)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantMatchDays = getSelectedMatchDays(state)\r\n    const selectedMatchDay = getSelectedMatchDay(state)\r\n    return (\r\n      <ListNavigator\r\n        data={relevantMatchDays}\r\n        selected={selectedMatchDay}\r\n        onSelect={this.onSelect.bind(this)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchdayNavigator\r\n","import { connect } from 'react-redux'\r\nimport { RefreshButton } from '../components/RefreshButton'\r\nimport { refreshMatchs } from '../actions/ActionBuilder'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false,\r\n  isUpdating: state.ui.isRefreshingMatchs,\r\n  state,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClick: (state) => {\r\n      console.log('refresh')\r\n      dispatch(refreshMatchs(state))\r\n    },\r\n  }\r\n}\r\n\r\nexport const RefreshCurrentMatchDayButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RefreshButton)\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const RefreshButton = ({ onClick, disabled, isUpdating, state }) => {\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={() => onClick(state)}\r\n      disabled={disabled && !isUpdating}\r\n    >\r\n      <FontAwesomeIcon icon=\"sync\" spin={isUpdating} />\r\n    </Button>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { switchModel } from '../actions/ActionBuilder';\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"sliders-h\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(switchModel(ownProps.selectedModelId)) \r\n    }\r\n  }\r\n}\r\n\r\nexport const MatchDayOptionsButton = connect(mapStateToProps, mapDispatchToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  onClick: () => {\r\n    console.log('refresh')\r\n  },\r\n  disabled: true,\r\n})\r\n\r\nexport const MatchDayViewSettings = connect(mapStateToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport {\r\n  getIsInitializing,\r\n  getIsLoadingLeagues,\r\n  getIsLoadingYears,\r\n  getIsLoadingAllMatchDays,\r\n  getIsLoadingTeams,\r\n  getIsLoadingMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport default class LoadingPage extends React.Component {\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsInitializing(state)) {\r\n      return <h2>Intializing...</h2>\r\n    }\r\n    if (getIsLoadingLeagues(state)) {\r\n      return <h2>Loading Leagues...</h2>\r\n    }\r\n    if (getIsLoadingYears(state)) {\r\n      return <h2>Loading Years...</h2>\r\n    }\r\n    if (getIsLoadingAllMatchDays(state)) {\r\n      return <h2>Loading Matchdays...</h2>\r\n    }\r\n    if (getIsLoadingTeams(state)) {\r\n      return <h2>Loading Teams...</h2>\r\n    }\r\n    if (getIsLoadingMatchDay(state)) {\r\n      return <h2>Loading Matchs...</h2>\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const IconButton = ({ icon, disabled, handleClick }) => {\r\n  return (\r\n    <Button color='link' onClick={handleClick} disabled={disabled}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </Button>\r\n  )\r\n}\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearAll } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleClick: () => {\r\n    dispatch(clearAll())\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  icon: 'trash-alt',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearAllButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearAllButton\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearSeason } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  handleClick: () => {\r\n    dispatch(clearSeason(ownProps.league, ownProps.year))\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  icon: 'trash',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearSeasonButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearSeasonButton\r\n","import { groupByArray, sortByField } from './listUtils'\r\n\r\nconst getTeamCount = (state) => {\r\n  return Object.keys(state.model.teams).length\r\n}\r\n\r\nconst getSeasonsCount = (state) => {\r\n  return groupByArray(state.model.matchs, (x) => x.league).map((x) => ({\r\n    league: x.key,\r\n    name: state.model.leagues.find((y) => y.id === x.key).name,\r\n    seasons: sortByField(\r\n      groupByArray(x.values, (y) => y.year).map((z) => ({\r\n        year: z.key,\r\n        count: groupByArray(z.values, (z1) => z1.matchDayId).length,\r\n      })),\r\n      'year'\r\n    ),\r\n  }))\r\n}\r\n\r\nexport const getStorageStats = (state) => ({\r\n  teamCount: getTeamCount(state),\r\n  leagues: getSeasonsCount(state),\r\n})\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ClearAllButton from './ClearAllButton'\r\nimport ClearSeasonButton from './ClearSeasonButton'\r\nimport { getStorageStats } from '../../utils/stateStats'\r\n\r\nconst renderSeasonRow = (league, year, count) => {\r\n  return (\r\n    <div className=\"storage-row\" key={`${league}_${year}`}>\r\n      {year} ({count}) <ClearSeasonButton league={league} year={year} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StorageTemplate = ({ teamCount, leagues }) => {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Lokaler Speicher <ClearAllButton />\r\n      </h3>\r\n      <div className=\"storage-header\">Allgemeine Informationen</div>\r\n      <div className=\"storage-row\">Mannschaften ({teamCount})</div>\r\n      <div className=\"storage-header\">Ligen</div>\r\n      <div>{leagues.count}</div>\r\n      {leagues.map((l) => (\r\n        <div key={l.league}>\r\n          <div className=\"storage-sub-header\">{l.name}</div>\r\n          {l.seasons.map((s) => renderSeasonRow(l.league, s.year, s.count))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => getStorageStats(state)\r\n\r\nconst Storage = connect(mapStateToProps)(StorageTemplate)\r\n\r\nexport default Storage\r\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\n\nexport const PercentageButton = ({ onClick, disabled, state }) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"btn btn-secondary\"\n      data-toggle=\"button\"\n      aria-pressed={state.ui.showPercentage}\n      onClick={() => onClick(state)}\n      disabled={disabled}\n    >\n      <FontAwesomeIcon icon=\"percentage\" />\n    </Button>\n  )\n}\n\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport './App.css'\r\n\r\nimport Matchs from './Matchs'\r\nimport Table from './Table'\r\nimport MatchdayNavigator from '../components/MatchdayNavigator'\r\n\r\nimport { dispatchFetchInitial } from '../actions/ActionBuilderWithStore'\r\nimport { getSelectedMatchs } from '../utils/filter'\r\nimport { getIsLoading } from '../reducers/selectors/uiSelector'\r\nimport { getAllTeams } from '../reducers/selectors/modelSelector'\r\nimport { RefreshCurrentMatchDayButton } from './RefreshCurrentMatchDayButton'\r\nimport { MatchDayOptionsButton } from './MatchDayOptionsButton'\r\nimport { MatchDayViewSettings } from './MatchDayViewSettings'\r\n\r\nimport LoadingPage from './LoadingPage'\r\nimport Storage from './Storage'\r\nimport { getSeasonInfo } from '../stats/seasonInfo'\r\nimport { PercentageButton } from '../components/PercentageButton'\r\n\r\nimport * as actionBuilder from '../actions/ActionBuilder'\r\n\r\nclass App extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const store = this.props.store\r\n    dispatchFetchInitial(store)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsLoading(state)) return <LoadingPage />\r\n    if (state.ui.menuId === 'storage') return <Storage />\r\n\r\n    console.log('render normal')\r\n    const relevantMatchs = getSelectedMatchs(state)\r\n    const teams = getAllTeams(state)\r\n    const seasonInfo = getSeasonInfo(state)\r\n    const showPercentage = state.ui.showPercentage\r\n    const selectedModelId = state.ui.selectedModelId\r\n    const probabilityDetailsMatchId = state.ui.probabilityDetailsMatchId\r\n    return (\r\n      <div className=\"container.fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className=\"btn-toolbar\"\r\n            role=\"toolbar\"\r\n            aria-label=\"Toolbar with button groups\"\r\n          >\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayViewSettings />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayOptionsButton selectedModelId={state.ui.selectedModelId} />\r\n            </div>\r\n\r\n            <MatchdayNavigator store={store} />\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <PercentageButton\r\n                state={state}\r\n                onClick={(s) =>\r\n                  this.props.store.dispatch(\r\n                    actionBuilder.showPercentage(!s.ui.showPercentage)\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <RefreshCurrentMatchDayButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 no-pad-right\">\r\n                <Matchs\r\n                  matchs={relevantMatchs}\r\n                  teams={teams}\r\n                  seasonInfo={seasonInfo}\r\n                  showPercentage={showPercentage}\r\n                  selectedModelId={selectedModelId}\r\n                  probabilityDetailsMatchId={probabilityDetailsMatchId}\r\n              toggleProbabilityDetails={(matchId) => { \r\n                this.props.store.dispatch(\r\n                  actionBuilder.toggleProbabilityDetails(matchId)\r\n                )  }}\r\n            />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Table \r\n                  teams={teams}\r\n                  seasonInfo={seasonInfo}\r\n                  selectedModelId={selectedModelId}\r\n                  />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport {\r\n  dispatchSelectLeague,\r\n  dispatchFetchYears,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n  dispatchSwitchMenu,\r\n} from '../actions/ActionBuilderWithStore'\r\nimport ListNavigator from './ListNavigator'\r\nimport { getSelectedYears } from '../utils/filter'\r\nimport { getAllLeagues } from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass Navbar extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async leagueChange(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, 'matchs')\r\n    dispatchSelectLeague(store, event.target.id)\r\n    dispatchFetchYears(store, event.target.id)\r\n\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  async yearChange(id) {\r\n    const store = this.props.store\r\n    let state = store.getState()\r\n    const year = parseInt(id, 10)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    dispatchSelectYear(store, selectedLeague, year)\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  selectMenu(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, event.target.id)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantYears = getSelectedYears(state)\r\n    const leagues = getAllLeagues(state)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    const selectedYear = getSelectedYear(state)\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {selectedLeague}\r\n        </a>\r\n        <ListNavigator\r\n          buttonStyles={'btn-sm btn-light'}\r\n          bgStyles={'btn-light'}\r\n          selected={selectedYear}\r\n          data={relevantYears}\r\n          onSelect={this.yearChange.bind(this)}\r\n        />\r\n        <Button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <span className=\"navbar-text\">\r\n            <FontAwesomeIcon icon=\"futbol\" />\r\n            &nbsp;\r\n            <b>Fußball</b>\r\n          </span>\r\n          <ul className=\"navbar-nav mr-auto\" key=\"Football\">\r\n            {leagues.map((l) => (\r\n              <li\r\n                className={`nav-item ${\r\n                  l.id === selectedLeague ? 'active' : ''\r\n                }`}\r\n                key={l.id}\r\n              >\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id={l.id}\r\n                  onClick={this.leagueChange.bind(this)}\r\n                >\r\n                  {l.name}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <span className=\"navbar-text\">\r\n            <b>Einstellungen</b>\r\n            <ul className=\"navbar-nav mr-auto\" key=\"Settings\">\r\n              <li className={`nav-item`} key=\"storage\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id=\"storage\"\r\n                  onClick={this.selectMenu.bind(this)}\r\n                >\r\n                  Speicher\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nexport default Navbar\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <p className=\"text-center font-italic\">\r\n          <span className=\"badge badge-dark\">yaspp</span>\r\n          &nbsp; yet another sports page\r\n        </p>\r\n        <Navbar store={this.props.store} />\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Footer.css'\r\nimport { getSelectedMatchs, getLatestUpdate } from '../utils/filter'\r\nimport { formatUpdateDate } from '../utils/dateFormat'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lastUpdate: getLatestUpdate(getSelectedMatchs(state)),\r\n})\r\n\r\nconst FooterTemplate = ({ lastUpdate }) => (\r\n  <footer>\r\n    <hr />\r\n    <div className=\"row\">\r\n      <div className=\"col self-align-start\">\r\n        <small>\r\n          <i>aktualisiert</i> {formatUpdateDate(lastUpdate)}\r\n        </small>\r\n      </div>\r\n      <div className=\"col self-align-end text-right\">\r\n        <small>\r\n          <i>\r\n            powered by <a href=\"https://www.openligadb.de\">Openliga DB</a>\r\n          </i>\r\n        </small>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nconst Footer = connect(mapStateToProps)(FooterTemplate)\r\nexport default Footer\r\n","import moment from 'moment'\r\n\r\nexport function formatUpdateDate(lastUpdate) {\r\n  const lastUpdateDate = moment(lastUpdate)\r\n  const now = moment()\r\n  var dt = moment.duration(lastUpdateDate.diff(now))\r\n\r\n  return dt.asYears() > -1\r\n    ? dt.humanize(true)\r\n    : lastUpdateDate.format('DD.MM.YY HH:mm')\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport App from './parts/App'\r\nimport Header from './parts/Header'\r\nimport Footer from './parts/Footer'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport * as icons from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(icons.faSync)\r\nlibrary.add(icons.faSlidersH)\r\nlibrary.add(icons.faTrashAlt)\r\nlibrary.add(icons.faTrash)\r\nlibrary.add(icons.faCaretLeft)\r\nlibrary.add(icons.faCaretRight)\r\nlibrary.add(icons.faFutbol)\r\nlibrary.add(icons.faAngleDoubleDown)\r\nlibrary.add(icons.faInfo)\r\nlibrary.add(icons.faInfoCircle)\r\nlibrary.add(icons.faPercentage)\r\nlibrary.add(icons.faEllipsisV)\r\nlibrary.add(icons.faEllipsisH)\r\nlibrary.add(icons.faBars)\r\nlibrary.add(icons.faColumns)\r\nlibrary.add(icons.faTable)\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    const store = this.props.store\r\n    return (\r\n      <div>\r\n        <Header store={store} />\r\n        <App store={store} />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Root\r\n","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nconst initialState = {\r\n  menuId: '',\r\n  selectedLeague: '',\r\n  selectedYear: '',\r\n  selectedMatchDay: 0,\r\n\r\n  isInitializing: false,\r\n  isLoadingLeagues: false,\r\n  isLoadingYears: false,\r\n  isLoadingTeams: false,\r\n  isLoadingAllMatchDays: false,\r\n  isLoadingMatchDay: false,\r\n  isRefreshingMatchs: false,\r\n\r\n  showPercentage: false,\r\n  selectedModelId: 0,\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  switch (action.type) {\r\n    case actions.SelectMatchDay:\r\n      {\r\n        return {\r\n          ...state,\r\n          selectedMatchDay: action.selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.SelectLeague:\r\n      {\r\n        const selectedLeague = action.selectedLeague\r\n        return {\r\n          ...state,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.SelectYear:\r\n      {\r\n        const selectedYear = action.selectedYear\r\n        return {\r\n          ...state,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.RequestLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeague\r\n        return { ...state,\r\n          isLoadingLeagues\r\n        }\r\n      }\r\n    case actions.RequestYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        return { ...state,\r\n          isLoadingYears\r\n        }\r\n      }\r\n    case actions.RequestTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.RequestMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        return { ...state,\r\n          isLoadingMatchDays\r\n        }\r\n      }\r\n    case actions.RequestMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return { ...state,\r\n          isLoadingMatchs\r\n        }\r\n      }\r\n    case actions.ReceiveLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeagues\r\n        const selectedLeague = action.leagues[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingLeagues,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.ReceiveYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        const years = action.yearsByLeague ?\r\n          action.yearsByLeague[action.selectedLeague] :\r\n          undefined\r\n        const selectedYear = years && years.length > 0 ? years[0].id : undefined\r\n        return {\r\n          ...state,\r\n          isLoadingYears,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.ReceiveTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.ReceiveMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        const selectedMatchDay = action.matchDays[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingMatchDays,\r\n          selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.ReceiveMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return {\r\n          ...state,\r\n          isLoadingMatchs,\r\n        }\r\n      }\r\n    case actions.StartInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.EndInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.StartRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.EndRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.SwitchMenu:\r\n      {\r\n        return { ...state,\r\n          menuId: action.menuId\r\n        }\r\n      }\r\n    case actions.ShowPercentage:\r\n      {\r\n        return { ...state,\r\n          showPercentage: action.payload\r\n        }\r\n      }\r\n    case actions.SwitchModel:\r\n      {\r\n        return { ...state,\r\n          selectedModelId: action.payload\r\n        }\r\n      }\r\n    case actions.ToggleProbabilityDetails:\r\n      {\r\n        return { ...state,\r\n          probabilityDetailsMatchId: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nexport const initialState = {\r\n  leagues: [],\r\n  yearsByLeague: {},\r\n  teams: {},\r\n  matchDays: [],\r\n  matchs: [],\r\n  teamsByLeagueAndYear: [],\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const modelReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  console.log(action)\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case actions.ReceiveLeagues: {\r\n      const leagues = [...action.leagues]\r\n      return {\r\n        ...state,\r\n        leagues,\r\n      }\r\n    }\r\n    case actions.ReceiveYears: {\r\n      const yearsByLeague = { ...state.yearsByLeague, ...action.yearsByLeague }\r\n      return {\r\n        ...state,\r\n        yearsByLeague,\r\n      }\r\n    }\r\n    case actions.ReceiveTeams: {\r\n      const teams = {\r\n        ...state.teams,\r\n        ...action.teams,\r\n      }\r\n      const teamsByLeagueAndYear = [\r\n        ...state.teamsByLeagueAndYear,\r\n        ...action.teamsByLeagueAndYear,\r\n      ]\r\n      return { ...state, teams, teamsByLeagueAndYear }\r\n    }\r\n    case actions.ReceiveMatchDays: {\r\n      const matchDays = [...state.matchDays, ...action.matchDays]\r\n\r\n      return {\r\n        ...state,\r\n        matchDays,\r\n      }\r\n    }\r\n    case actions.ReceiveMatchs: {\r\n      const teams = { ...state.teams, ...action.teams }\r\n\r\n      const matchDict = state.matchs.reduce((res,x) => {\r\n        res[x.id]=x\r\n        return res\r\n      }, {})\r\n      \r\n      for (let i=0;i<action.matchs.length;++i) {\r\n        const match = action.matchs[i]\r\n        matchDict[match.id]=match\r\n      }\r\n      const matchs = Object.values(matchDict)\r\n\r\n      return {\r\n        ...state,\r\n        matchs,\r\n        teams,\r\n      }\r\n    }\r\n    case actions.clearAll: {\r\n      return initialState\r\n    }\r\n    case actions.clearSeason: {\r\n      const { league, year } = action.payload\r\n      return {\r\n        ...state,\r\n        matchDays: state.matchDays.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        matchs: state.matchs.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        teamsByLeagueAndYear: state.teamsByLeagueAndYear.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { modelReducer } from './modelReducer'\r\n\r\nexport const reducer = combineReducers({ ui: uiReducer, model: modelReducer })\r\n","// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nimport { reducer } from './reducers'\r\nimport { saveState, loadState } from './utils/localStorage'\r\nimport { throttle } from 'lodash'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/de'\r\n\r\n/******************* Set globals ******************/\r\nmoment.locale(\"de\")\r\n\r\n/******************* Create Store ******************/\r\nconst thunk = ReduxThunk\r\nconst persistedState = loadState()\r\nconst store = createStore(reducer, persistedState, applyMiddleware(thunk))\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const model = store.getState().model\r\n    saveState({ model })\r\n  }, 1000)\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Root store={store} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","const SERIALIZED_STATE_KEY = 'yaspp_state'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(SERIALIZED_STATE_KEY)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(SERIALIZED_STATE_KEY, serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}"],"sourceRoot":""}