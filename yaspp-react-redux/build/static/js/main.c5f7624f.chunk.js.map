{"version":3,"sources":["reducers/selectors/uiSelector.js","reducers/selectors/modelSelector.js","utils/listUtils.js","stats/statsType.js","stats/seasonInfo.js","maths/probabilities.js","parts/MatchDetailsHeatmap.jsx","parts/MatchDetailsTop3.jsx","parts/MatchDetailsKicktippTop3.jsx","parts/MatchDetailsPlusMinus.jsx","parts/MatchDetailsStats.jsx","parts/MatchDetails.jsx","parts/MatchDetails2.jsx","parts/Match.jsx","parts/MatchsPerDay.jsx","parts/Matchs.jsx","parts/Table.jsx","components/ListNavigator.jsx","actions/actions.js","services/leagues.js","services/index.js","services/mapOpenLigaDB.js","utils/filter.js","actions/ActionBuilder.js","utils/storeHelpers.js","actions/ActionBuilderWithStore.js","components/MatchdayNavigator.jsx","parts/RefreshCurrentMatchDayButton.jsx","components/RefreshButton.jsx","parts/MatchDayOptionsButton.jsx","parts/MatchDayViewSettings.jsx","parts/LoadingPage.jsx","components/IconButton.jsx","parts/Storage/ClearAllButton.jsx","parts/Storage/ClearSeasonButton.jsx","utils/stateStats.js","parts/Storage/index.jsx","components/PercentageButton.jsx","parts/App.jsx","components/Navbar.jsx","parts/Header.jsx","parts/Footer.jsx","utils/dateFormat.js","Root.jsx","reducers/uiReducer.js","reducers/modelReducer.js","reducers/index.js","index.js","utils/localStorage.js"],"names":["getUi","prop","getSelectedLeague","pipe","getSelectedYear","getSelectedMatchDay","getIsInitializing","getIsLoadingLeagues","getIsLoadingYears","getIsLoadingTeams","getIsLoadingAllMatchDays","getIsLoadingMatchDay","getIsLoading","getModel","getAllLeagues","getAllTeams","getTeamsByLeagueAndYear","getAllMatchDays","getAllMatchs","getAllYearsByLeague","groupByArray","xs","key","reduce","rv","x","v","Function","el","find","r","values","push","dictionarize","array","result","y","id","sortByField","sort","compare","a","b","sum","res","definitions","short","description","getPoints","gf","ga","sumFields","teamInfo","key1","key2","undefined","aggregateSeasonInfo","matchs","home","map","team","hgf","fullTimeHome","hga","fullTimeAway","hp","match","hm","length","away","agf","aga","ap","am","fullWithTotal","concat","_toConsumableArray","_objectSpread","tgf","tga","tp","tm","totalGA","aggregate","avgGA","hdf","adf","tdf","getHG_AG_AVG","infoHome","infoAway","getTG_TG_AVG","getStats","statsType","goals","getHGDF_AGDF_AVG","getTGDF_TGDF_AVG","formatNumber","n","digits","toFixed","poissonProbability","lambda","k","Math","pow","exp","i","faculty","calcLossProbs","probs","probSum","j","calcWinProbs","calcTieProbs","calcResultProbs","hg","ag","arguments","minProb","max","row","formatPercentage","formatRate","min","MatchDetailsHeatmap","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","_inherits","_createClass","value","props","stats","numberOfGoals","React","createElement","className","style","backgroundColor","Component","MatchDetailsTop3","probsList","forEach","prob","sortedProbs","_","sortBy","MatchDetailsKicktippTop3","expectedPoints","console","log","expectedGoalsForResult","expectedValue","observedHg","observedAg","tippedHg","tippedAg","pointForTip","calcExpectedPointsForResult","calcExpectedPointsForAllResults","expectedPointsList","sortedExpectedPoints","MatchDetailsPlusMinus","plusMinusList","diff","plusMinus","Object","keys","parseInt","maxResult","maxProb","Fragment","filter","MatchDetailsStats","_getPrototypeOf2","_this","_len","args","Array","_key","call","logoSize","teamId","teams","seasonInfo","modelKey","isHomeTeam","info","total","includes","src","iconUrl","alt","name","height","width","details","teamHomeId","teamAwayId","items","altText","caption","MatchDetails2","teamHome","teamAway","_useState","useState","_useState2","_slicedToArray","activeIndex","setActiveIndex","_useState3","_useState4","animating","setAnimating","next","nextIndex","previous","slides","CarouselItem","tag","onExiting","onExited","CarouselCaption","captionText","Card","CardBody","CardTitle","Carousel","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","formatProbOrRate","showPercentage","Match","_this2","probabilityDetailsMatchId","isProbabilityDetailsShown","calcStats","formatedStats","formatStats","win","tie","loss","calcWinLossTieProbs","formatProbs","data-toggle","title","moment","lastUpdate","format","shortName","halfTimeHome","halfTimeAway","isFinished","Button","size","color","onClick","toggleProbabilityDetails","FontAwesomeIcon","icon","Collapse","isOpen","MatchsPerDay","statsTitle","statsDescription","scope","date","m","Matchs","func","groupByMatchDay","matchDateTime","groupedMatchs","entries","selectedModelId","statsHeader","item","getShort","getDescription","gm","Table","relevantTeams","flatMap","rawData","table","reverse","class","index","ListNavigator","_Component","event","node","target","parentElement","onSelect","data","buttonStyles","bgStyles","currentIndex","findIndex","selected","selectedItem","prevIndex","nextId","prevId","role","aria-label","disabled","bind","aria-haspopup","aria-expanded","aria-labelledby","RequestLeagues","RequestYears","RequestTeams","RequestMatchDays","RequestMatchs","ReceiveLeagues","ReceiveYears","ReceiveTeams","ReceiveMatchDays","ReceiveMatchs","SelectMatchDay","SelectLeague","SelectYear","StartRefreshMatchs","leagues","years","openligaBaseUrl","mapTeam","olTeam","teamIconUrl","teamName","getSelectedMatchs","state","selectedLeague","selectedYear","selectedMatchDay","allMatchs","league","year","matchDayId","getSelectedYears","toString","getSelectedMatchDays","existsMatchDay","existLeagues","allLeagues","existYears","Error","yearsOfLeague","existTeams","existMatchDays","relevantDay","getLatestUpdate","selectMatchDay","type","actions","selectLeague","selectYear","receiveMatchDays","json","isLoadingMatchDays","matchDays","olGroup","groupOrderID","groupName","groupID","fetchMatchDays","dispatch","requestMatchDays","url","fetch","then","service","fetchMatchs","isLoadingMatchs","requestMatchs","matchday","olMatchs","olMatch","twoTeams","team1","team2","t1","t2","mapper","matchID","matchIsFinished","group","leagueKey","leagueId","lastUpdateDateTime","halfTimeResult","matchResults","resultName","fullTimeResult","pointsTeam1","pointsTeam2","receiveMatchs","refreshMatchs","isRefreshingMatchs","updateMatchsRequired","endRefreshMatchs","fetchTeams","isLoadingTeams","requestTeams","teamData","teamsByLeagueAndYear","receiveTeams","fetchLeagues","isLoadingLeagues","fetchYears","isLoadingYears","requestYears","yearsByLeague","receiveYears","startInitializing","isInitializing","endInitializing","areSelectedMatchsPresent","store","getState","dispatchFetchMatchs","matchDay","dispatchFetchInitial","fetchInitial","dispatchFetchYears","dispatchSelectMatchDay","dispatchSelectLeague","dispatchSelectYear","updateMatchDaysIfNecessary","areSelectedMatchDaysPresent","dispatchFetchMatchDays","dispatchSwitchMenu","menuId","switchMenu","MatchdayNavigator","updateMatchs","relevantMatchDays","RefreshCurrentMatchDayButton","connect","isUpdating","ui","_ref","spin","MatchDayOptionsButton","ownProps","payload","currentId","switchModel","MatchDayViewSettings","LoadingPage","IconButton","handleClick","ClearAllButton","ClearSeasonButton","getTeamCount","model","getSeasonsCount","seasons","z","count","z1","Storage","teamCount","getStorageStats","l","s","PercentageButton","aria-pressed","_regeneratorRuntime","e","t","prototype","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","f","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_componentDidMount","forceUpdate","unsubscribe","subscribe","update","_asyncToGenerator","_callee","_context","relevantMatchs","previousMatchs","getSeasonInfo","matchId","actionBuilder","Navbar","_leagueChange","_yearChange","_x","_x2","_callee2","_context2","relevantYears","href","yearChange","data-target","aria-controls","leagueChange","selectMenu","Header","Footer","lastUpdateDate","now","dt","duration","asYears","humanize","formatUpdateDate","library","add","icons","Root","initialState","isLoadingAllMatchDays","isLoadingMatchDay","reducer","combineReducers","action","isLoadingLeague","matchDict","_action$payload","locale","thunk","ReduxThunk","persistedState","serializedState","localStorage","getItem","JSON","parse","error","loadState","createStore","applyMiddleware","throttle","stringify","setItem","saveState","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c5f7624f.chunk.js","sourcesContent":["import { prop, pipe } from 'ramda'\r\n\r\nexport const getUi = prop('ui')\r\n\r\nexport const getSelectedLeague = pipe(\r\n  getUi,\r\n  prop('selectedLeague')\r\n)\r\n\r\nexport const getSelectedYear = pipe(\r\n  getUi,\r\n  prop('selectedYear')\r\n)\r\n\r\nexport const getSelectedMatchDay = pipe(\r\n  getUi,\r\n  prop('selectedMatchDay')\r\n)\r\n\r\nexport const getIsInitializing = pipe(\r\n  getUi,\r\n  prop('isInitializing')\r\n)\r\n\r\nexport const getIsLoadingLeagues = pipe(\r\n  getUi,\r\n  prop('isLoadingLeagues')\r\n)\r\n\r\nexport const getIsLoadingYears = pipe(\r\n  getUi,\r\n  prop('isLoadingYears')\r\n)\r\n\r\nexport const getIsLoadingTeams = pipe(\r\n  getUi,\r\n  prop('isLoadingTeams')\r\n)\r\n\r\nexport const getIsLoadingAllMatchDays = pipe(\r\n  getUi,\r\n  prop('isLoadingAllMatchDays')\r\n)\r\n\r\nexport const getIsLoadingMatchDay = pipe(\r\n  getUi,\r\n  prop('isLoadingMatchDay')\r\n)\r\n\r\nexport const getIsLoading =\r\n  getIsInitializing ||\r\n  getIsLoadingLeagues ||\r\n  getIsLoadingYears ||\r\n  getIsLoadingTeams ||\r\n  getIsLoadingAllMatchDays ||\r\n  getIsLoadingMatchDay\r\n","import { prop, pipe } from 'ramda'\r\n\r\nexport const getModel = prop('model')\r\n\r\nexport const getAllLeagues = pipe(\r\n  getModel,\r\n  prop('leagues')\r\n)\r\n\r\nexport const getAllTeams = pipe(\r\n  getModel,\r\n  prop('teams')\r\n)\r\n\r\nexport const getTeamsByLeagueAndYear = pipe(\r\n  getModel,\r\n  prop('teamsByLeagueAndYear')\r\n)\r\n\r\nexport const getAllMatchDays = pipe(\r\n  getModel,\r\n  prop('matchDays')\r\n)\r\n\r\nexport const getAllMatchs = pipe(\r\n  getModel,\r\n  prop('matchs')\r\n)\r\n\r\nexport const getAllYearsByLeague = pipe(\r\n  getModel,\r\n  prop('yearsByLeague')\r\n)\r\n","export const groupByField = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByFunc = (xs, func) => {\r\n  return xs.reduce((rv, x) => {\r\n    const key = func(x)\r\n    ;(rv[key] = rv[key] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByArray = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    let v = key instanceof Function ? key(x) : x[key]\r\n    let el = rv.find((r) => r && r.key === v)\r\n\r\n    if (el) {\r\n      el.values.push(x)\r\n    } else {\r\n      rv.push({ key: v, values: [x] })\r\n    }\r\n\r\n    return rv\r\n  }, [])\r\n}\r\n\r\nexport const dictionarize = (array) => {\r\n  return array.reduce((result, y) => {\r\n    result[y.id] = y\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport const sortByField = (xs, key) => xs.sort(compare(key))\r\n\r\nexport const compare = (key) => (a, b) => {\r\n  if (a[key] < b[key]) return -1\r\n  if (a[key] > b[key]) return 1\r\n  return 0\r\n}\r\n\r\nexport const sum = (xs) => xs.reduce((res, x) => res + x, 0)\r\n","export const TotalGoalsVsTotalGoals = \"tg_vs_tg\"\nexport const TotalGoalsVsTotalGoalsWithDefenseFactor = \"tgdf_vs_tgdf\"\nexport const HomeGoalsVsAwayGoals = \"hg_vs_ag\"\nexport const HomeGoalsVsAwayGoalsWithDefenseFactor = \"hgdf_vs_agdf\"\n//export const TotalPointsVsTotalPoints = \"tp_vs_tp\"\n\nexport const getKeys = () => {     \n    return [\n        TotalGoalsVsTotalGoals,\n        TotalGoalsVsTotalGoalsWithDefenseFactor,\n        HomeGoalsVsAwayGoals,\n        HomeGoalsVsAwayGoalsWithDefenseFactor\n    ]\n}\n\nconst definitions = [\n    {\n        key: TotalGoalsVsTotalGoals,\n        short: \"t-t\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt.\"\n    },\n    {\n        key: TotalGoalsVsTotalGoalsWithDefenseFactor,\n        short: \"t-t*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    },    {\n        key: HomeGoalsVsAwayGoals,\n        short: \"h-a\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore.\"\n    },\n    {\n        key: HomeGoalsVsAwayGoalsWithDefenseFactor,\n        short: \"h-a*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    }\n]\n\nconst find = (key) => definitions.find(x=>x.key===key)\n\nexport const getDescription = (key) => {\n    const item = find(key)\n    return item ? item.description : \"\"\n}\n\nexport const getShort = (key) => {\n    const item = find(key)\n    return item ? item.short : \"\"\n}\n\nexport const getNextId = (currentId) => ++currentId % definitions.length\n\nexport const getKey = (currentId) => definitions[currentId].key","import {\n  getSelectedLeague,\n  getSelectedYear,\n  getSelectedMatchDay,\n} from '../reducers/selectors/uiSelector'\nimport {\n  getAllMatchs\n} from '../reducers/selectors/modelSelector'\nimport {\n  groupByArray,\n  sum\n} from '../utils/listUtils'\n\nimport * as stats from './statsType';\n\nconst getPoints = (gf, ga) => {\n  if (gf > ga) return 3\n  if (gf === ga) return 1\n  return 0\n}\n\nconst getHomePoints = (match) =>\n  getPoints(match.fullTimeHome, match.fullTimeAway)\nconst getAwayPoints = (match) =>\n  getPoints(match.fullTimeAway, match.fullTimeHome)\n\n\n  const sumFields = (teamInfo, key1, key2) => {\n    return !teamInfo ?\n      undefined :\n      teamInfo[key1] && teamInfo[key2] ?\n      teamInfo[key1] + teamInfo[key2] :\n      teamInfo[key1] ?\n      teamInfo[key1] :\n      teamInfo[key2]\n  }\n  \n  const tgf = (teamInfo) => {\n    return sumFields(teamInfo, 'hgf', 'agf')\n  }\n  \n  const tga = (teamInfo) => {\n    return sumFields(teamInfo, 'hga', 'aga')\n  }\n  \n  const tp = (teamInfo) => {\n    return sumFields(teamInfo, 'hp', 'ap')\n  }\n  \n  const tm = (teamInfo) => {\n    return sumFields(teamInfo, 'hm', 'am')\n  }\n\n\nexport const getSeasonInfo = (state) => {\n  const league = getSelectedLeague(state)\n  const year = getSelectedYear(state)\n  const matchDay = getSelectedMatchDay(state)\n  const allMatchs = getAllMatchs(state)\n\n  const previousMatchs = !allMatchs ? [] :\n    // @ts-ignore\n    allMatchs.filter(\n      (m) => m.year === year && m.league === league && m.isFinished &&\n      m.matchDayId < matchDay\n    )\n    \n    return aggregateSeasonInfo(previousMatchs)\n  }\n\nexport const aggregateSeasonInfo = (matchs) => {\n  const home = groupByArray(matchs, 'teamHomeId').map((x) => ({\n    team: x.key,\n    hgf: sum(x.values.map((y) => y.fullTimeHome)),\n    hga: sum(x.values.map((y) => y.fullTimeAway)),\n    hp: sum(x.values.map((y) => getHomePoints(y))),\n    hm: x.values.length,\n  }))\n  const away = groupByArray(matchs, 'teamAwayId').map((x) => ({\n    team: x.key,\n    agf: sum(x.values.map((y) => y.fullTimeAway)),\n    aga: sum(x.values.map((y) => y.fullTimeHome)),\n    ap: sum(x.values.map((y) => getAwayPoints(y))),\n    am: x.values.length,\n  }))\n  \n  const fullByTeam = groupByArray([...home, ...away], 'team')\n  const full = fullByTeam.map((x) =>\n    x.values.reduce((res, x) => ({ ...res,\n      ...x\n    }), {hgf:0, hga:0, hp:0, hm:0, agf:0, aga:0, ap:0, am:0})\n  )\n\n  const fullWithTotal = full.map(x=>{\n    var res = {...x}\n    res.tgf = tgf(x)\n    res.tga = tga(x)\n    res.tp = tp(x)\n    res.tm = tm(x)\n    return res    \n  })\n\n  const totalGA = fullWithTotal.reduce((res,x)=>{\n    var aggregate = { ...res };\n    aggregate.hga += x.hga;\n    aggregate.hm += x.hm;\n    aggregate.aga += x.aga;\n    aggregate.am += x.am;\n    aggregate.tga += x.tga;\n    aggregate.tm += x.tm;\n    return aggregate;\n  }, {hga:0, hm:0, aga:0, am:0, tga:0, tm:0})\n\n  const avgGA = {\n    hga: totalGA.hm > 0 ? totalGA.hga / totalGA.hm : undefined,\n    aga: totalGA.am > 0 ? totalGA.aga / totalGA.am : undefined,\n    tga: totalGA.tm > 0 ? totalGA.tga / totalGA.tm : undefined\n  }\n\n  const fullWithDefenseFactor = fullWithTotal.map(x => ({...x, \n    hdf: avgGA.hga ? (x.hga/x.hm) / avgGA.hga : 1.0,\n    adf: avgGA.aga ? (x.aga/x.am) / avgGA.aga : 1.0,\n    tdf: avgGA.tga ? (x.tga/x.tm) / avgGA.tga : 1.0\n    })\n  )\n\n  return fullWithDefenseFactor\n}\n\n\n\nconst getHG_AG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.hm ? infoHome.hgf / infoHome.hm : undefined\n  const goalsAway =\n    infoAway && infoAway.am ? infoAway.agf / infoAway.am : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getHGDF_AGDF_AVG = (infoHome, infoAway) => {\n  const goals = getHG_AG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.adf ? goals.home * infoAway.adf :undefined,\n    away: goals.away && infoHome.hdf ? goals.away * infoHome.hdf: undefined\n  }\n}\n\nconst getTG_TG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.tm ? infoHome.tgf / infoHome.tm : undefined\n  const goalsAway =\n    infoAway && infoAway.tm ? infoAway.tgf / infoAway.tm : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getTGDF_TGDF_AVG = (infoHome, infoAway) => {\n  const goals = getTG_TG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.tdf ? goals.home * infoAway.tdf :undefined,\n    away: goals.away && infoHome.tdf ? goals.away * infoHome.tdf :undefined,\n  }\n}\n\nconst getStats = (infoHome, infoAway, statsType) => {\n  switch (statsType) {\n    case stats.HomeGoalsVsAwayGoalsWithDefenseFactor:\n      return getHGDF_AGDF_AVG(infoHome, infoAway)\n    case stats.HomeGoalsVsAwayGoals:\n      return getHG_AG_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoalsWithDefenseFactor:\n      return getTGDF_TGDF_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoals:\n    default:\n      return getTG_TG_AVG(infoHome, infoAway)\n  }\n}\n\nexport const calcStats = (seasonInfo, teamHomeId, teamAwayId, stats) => {\n  const infoHome = seasonInfo.find((x) => x.team === teamHomeId)\n  const infoAway = seasonInfo.find((x) => x.team === teamAwayId)\n  return getStats(infoHome, infoAway, stats)\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '0.0')\nexport const formatStats = (stats, digits = 2) => {\n  return `${formatNumber(stats.home, digits)}:${formatNumber(\n    stats.away,\n    digits\n  )}`\n}","const faculty = (k) => {\n  let r = 1.0\n  for (let i = 1; i <= k; ++i) {\n    r *= i\n  }\n  return r\n}\n\nconst poissonProbability = (lambda, k) => {\n  return (Math.pow(lambda, k) * Math.exp(-lambda)) / faculty(k)\n}\n\nexport const calcLossProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    for (let j = i + 1; j < n; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcWinProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 1; i < n; ++i) {\n    for (let j = 0; j < i; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcTieProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    probSum += probs[i][i]\n  }\n  return probSum\n}\n\nexport const calcWinLossTieProbs = (hg, ag) => {\n  const probs = calcResultProbs(hg, ag)\n  return {\n    win: calcWinProbs(probs),\n    tie: calcTieProbs(probs),\n    loss: calcLossProbs(probs),\n  }\n}\n\nexport const calcResultProbs = (hg, ag, n = 20, minProb = 0.01) => {\n  const hgf = Math.max(minProb, hg || 0.0)\n  const agf = Math.max(minProb, ag || 0.0)\n\n  let result = []\n  for (let i = 0; i <= n; ++i) {\n    let row = []\n    for (let j = 0; j <= n; ++j) {\n      row.push(poissonProbability(hgf, i) * poissonProbability(agf, j))\n    }\n    result.push(row)\n  }\n  return result\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '-')\n\nexport const formatPercentage = (n, digits = 0) =>\n  n ? (n * 100.0).toFixed(digits) + '%' : '-'\n\nexport const formatProbs = (probs, n = 2) => {\n  return `${formatPercentage(probs.win, n)}/${formatPercentage(\n    probs.tie,\n    n\n  )}/${formatPercentage(probs.loss, n)}`\n}\n\nexport const formatRate = (n, digits = 1) =>\n  n ? Math.min(99.9, 1.0 / n).toFixed(digits) : '-'\n\nexport const getProbDescription = (hg, ag) => {\n  const results = calcResultProbs(hg, ag)\n  let content = ''\n  for (let i = 0; i <= 5; ++i) {\n    for (let j = 0; j <= 5; ++j) {\n      if (i + j > 6) continue\n      content += `<b>${i}:${j}</b> ${formatPercentage(results[i][j])}<br/>`\n    }\n  }\n  return `<div>${content}</div>`\n}\n","import React from 'react'\nimport './MatchDetailsHeatmap.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Card,CardBody, CardTitle } from 'reactstrap'\nimport _ from 'lodash'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\nexport class MatchDetailsHeatmap extends React.Component {\n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 7, 0.01)\n    const numberOfGoals = [0,1,2,3,4,5,6]\n\n    const formatProb = (prob) => { return (prob*100).toFixed(0)};\n    return (\n    <div className='row'>\n    <div className='col-1'></div>\n    <div className='col-10'>\n    <div className='d-flex flex-column p-0'>\n        <div className='d-flex flex-nowrap align-items-stretch'>\n          <div className='p-2 text-center score-card'><small><b>[%]</b></small></div>\n          {numberOfGoals.map((i) => (<div className='p-2 text-center score-card'><small><b>{i}</b></small></div>))}\n        </div>\n        {numberOfGoals.map((i) => (\n            <div className='d-flex flex-nowrap align-items-stretch'>\n                <div className='p-2 text-center score-card'><small><b>{i}</b></small></div>\n                {numberOfGoals.map((j) => (\n                <div className={`p-2 text-center score-card ${i===j?\"diagonal\":\"non-diagonal\"}`} style={{backgroundColor: `hsl(360 100% ${100 - (probs[i][j]*70.0)}%)`}}>\n                    <small>{formatProb(probs[i][j])}</small>\n                </div>\n                ))}\n            </div>\n        ))}\n    </div>\n    </div>\n    </div>)\n  }\n}","import React from 'react'\nimport './MatchDetailsTop3.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Card,CardBody, CardTitle } from 'reactstrap'\nimport _ from 'lodash'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\nexport class MatchDetailsTop3 extends React.Component {\n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 7, 0.01)\n    const numberOfGoals = [0,1,2,3,4,5,6]\n    const probsList = []\n    numberOfGoals.forEach(x=>{\n      numberOfGoals.forEach(y=> {\n        probsList.push(({prob:probs[x][y], result:`${x}:${y}`}))\n      })\n    })\n    const sortedProbs = _.sortBy(probsList, x=>-x.prob); \n    return (<div className='row'>\n      <div className='col-2 p-0'>\n      <small><b>TOP 3</b></small>\n      </div>\n      {[0,1,2].map(x=> (\n      <div className='col-3 p-0'>\n      <small><b>{sortedProbs[x].result}</b> ({(sortedProbs[x].prob*100).toFixed(1)}%)</small>\n      </div>\n      ))}\n    </div>\n    ) \n  }\n}","import React from 'react'\nimport './MatchDetailsKicktippTop3.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Card,CardBody, CardTitle } from 'reactstrap'\nimport _ from 'lodash'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\n  function getPointsForTip(observedHg, observedAg, tippedHg, tippedAg) {\n    if (observedHg === tippedHg && observedAg === tippedAg) {\n      return 4\n    }\n    if (observedHg === observedAg && tippedHg === tippedAg) {\n      return 2\n    }\n    if (observedHg - observedAg === tippedHg - tippedAg) {\n      return 3\n    }\n    if (\n      (observedHg > observedAg && tippedHg > tippedAg) ||\n      (observedHg < observedAg && tippedHg < tippedAg)\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  \n  function calcExpectedPointsForResult(hg, ag, probs, numberOfGoals) {\n    let expectedValue = 0;\n    numberOfGoals.forEach(x=>{\n      numberOfGoals.forEach(y=> {\n        const pointForTip = getPointsForTip(x,y, hg, ag)\n        expectedValue += probs[x][y] * pointForTip\n      })\n    });\n    return expectedValue;\n  }\n  function calcExpectedPointsForAllResults(probs, numberOfGoals) {\n    console.log('probs', probs)\n    const count = numberOfGoals.length\n    const expectedGoalsForResult = [];\n    numberOfGoals.forEach(x=>{\n      expectedGoalsForResult[x]=[];\n      numberOfGoals.forEach(y=> {\n        expectedGoalsForResult[x][y]= calcExpectedPointsForResult(x,y, probs, numberOfGoals)\n      })\n    });\n    return expectedGoalsForResult;\n  }\n\n\nexport class MatchDetailsKicktippTop3 extends React.Component {\n\n\n\n\n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 7, 0.01)\n    const numberOfGoals = [0,1,2,3,4,5,6]\n    const expectedPoints = calcExpectedPointsForAllResults(probs, numberOfGoals)\n\n    const expectedPointsList = []\n    numberOfGoals.forEach(x=>{\n      numberOfGoals.forEach(y=> {\n        expectedPointsList.push(({expectedPoints: expectedPoints[x][y], result:`${x}:${y}`}))\n      })\n    })\n    const sortedExpectedPoints = _.sortBy(expectedPointsList, x=>-x.expectedPoints); \n    return (<div className='row'>\n      <div className='col-2 p-0'>\n      <small><b>TIPP3</b></small>\n      </div>\n      {[0,1,2].map(x=> (\n      <div className='col-3 p-0'>\n      <small><b>{sortedExpectedPoints[x].result}</b> ({sortedExpectedPoints[x].expectedPoints.toFixed(2)})</small>\n      </div>\n      ))}\n    </div>\n    ) \n  }\n}","import React from 'react'\nimport './MatchDetailsPlusMinus.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button, Card,CardBody, CardTitle } from 'reactstrap'\nimport _ from 'lodash'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\nexport class MatchDetailsPlusMinus extends React.Component {\n\n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 7, 0.01)\n    const numberOfGoals = [0,1,2,3,4,5,6]\n\n    const plusMinusList = {}\n    const max = {}\n    numberOfGoals.forEach(x=>{\n      numberOfGoals.forEach(y=> {\n        const diff = x-y\n        if (plusMinusList[diff] === undefined) {\n          plusMinusList[diff] = []\n        }\n        plusMinusList[diff].push(probs[x][y])\n        if (max[diff] === undefined) {\n          max[diff] = {prob:probs[x][y], result:`${x}:${y}`}\n        } else if (probs[x][y] > max[diff].prob) {\n          max[diff] = {prob:probs[x][y], result:`${x}:${y}`}\n        }\n      })\n    })\n    const range = Object.keys(plusMinusList).map(x=>parseInt(x)).sort((a,b)=>a-b)\n    const plusMinus = range.map(x=> ({diff:x, prob:_.sum(plusMinusList[x]), maxResult:max[x].result, maxProb:max[x].prob}))\n    \n    return (<>\n      <div className='row'>\n        <div className='col-2 text-center'><small><b>+/-</b></small></div>\n        <div className='col-5 text-right'><small><b>Wahrscheinlichkeit</b></small></div>\n        <div className='col-5 text-right'><small><b>Top-Ergebnis</b></small></div>\n      </div>\n      {plusMinus.filter(x=>x.prob>0.01).map(x=> (<div className='row' style={{backgroundColor: `hsl(360 100% ${100 - (x.prob*70.0)}%)`}}>\n        <div className='col-2 text-center'><small>{x.diff}</small></div>\n        <div className='col-5 text-right'><small>{(x.prob*100).toFixed(1)}%</small></div>\n        <div className='col-2 text-right'><small>{x.maxResult}</small></div>\n        <div className='col-2 text-right p-0'><small>({(x.maxProb*100).toFixed(1)}%)</small></div>\n      </div>))}\n    </>)\n \n  }\n}","import React from 'react'\nimport './MatchDetailsStats.css'\n\nexport class MatchDetailsStats extends React.Component {\n    logoSize = 20\n\n  details(teamId, teams, seasonInfo, modelKey, isHomeTeam) {\n    const team = teams[teamId]\n    const info = seasonInfo.find(x=>x.team===teamId)\n    console.log(modelKey)\n    const total = [\"tg_vs_tg\", \"tgdf_vs_tgdf\"].includes(modelKey)\n    const home = [\"hg_vs_ag\", \"hgdf_vs_agdf\"].includes(modelKey) && isHomeTeam\n    const away = [\"hg_vs_ag\", \"hgdf_vs_agdf\"].includes(modelKey) && !isHomeTeam\n\n    return <div className='row'>\n        <div className='col-2'>\n            <img src={team.iconUrl} alt={team.name} \n                        height={this.logoSize}\n                        width={this.logoSize}/>\n        </div>\n        {!info && (<div className='col-10'><i>no data</i></div>)}\n        {info && (<>\n            <div className='col-1 p-0'>\n                <small>{info.tp}</small>\n            </div>\n            <div className=\"col-2 p-0\">\n                <small className={`${total ? 'bold' : ''}`}>{info.tgf}:{info.tga}</small>\n            </div>\n            <div className='col-1 p-0'>\n                <small>{info.hp}</small>\n            </div>\n            <div className='col-2 p-0'>\n                <small className={`${home ? 'bold' : ''}`}>{info.hgf}:{info.hga}</small>\n            </div>\n            <div className='col-1 p-0'>\n                <small>{info.ap}</small>\n            </div>\n            <div className='col-2 p-0'>\n                <small className={`${away ? 'bold' : ''}`}>{info.agf}:{info.aga}</small>\n            </div>\n        </>)} \n    </div>\n  }\n\n  render() {\n    const teams = this.props.teams;\n    const match = this.props.match;\n    const seasonInfo = this.props.seasonInfo;\n    const modelKey = this.props.modelKey;\n    if (!teams || !match || !seasonInfo) return <div>empty</div>\n    return <div className='container'>\n        <div className='row'>\n            <div className='col-2 p-0'><small>Team</small></div>\n            <div className='col-3 p-0'><small>Gesamt</small></div>\n            <div className='col-3 p-0'><small>Heim</small></div>\n            <div className='col-3 p-0'><small>Auswärts</small></div>\n        </div>\n        {this.details(match.teamHomeId, teams, seasonInfo, modelKey, true)}\n        {this.details(match.teamAwayId, teams, seasonInfo, modelKey, false)}\n    </div>\n  }\n}\n","import React from 'react'\nimport './MatchDetails.css'\nimport { Button, Card,CardBody, CardTitle } from 'reactstrap'\nimport { MatchDetailsHeatmap } from './MatchDetailsHeatmap'\nimport { MatchDetailsTop3 } from './MatchDetailsTop3'\nimport { MatchDetailsKicktippTop3 } from './MatchDetailsKicktippTop3'\nimport { MatchDetailsPlusMinus } from './MatchDetailsPlusMinus'\nimport { MatchDetailsStats } from './MatchDetailsStats'\n\nexport class MatchDetails extends React.Component {\n    logoSize = 30\n\n  render() {\n    const teams = this.props.teams;\n    const match = this.props.match;\n    const seasonInfo = this.props.seasonInfo;\n    const stats = this.props.stats;\n    const modelKey = this.props.modelKey;\n    if (!teams || !match || !seasonInfo) return <div>empty</div>\n\n    const teamHome = teams[match.teamHomeId]\n    const teamAway = teams[match.teamAwayId]\n    return <Card>\n<CardBody>\n<CardTitle tag=\"h5\">\nMatch Details\n<img src={teamHome.iconUrl} alt={teamHome.name} \n                        height={this.logoSize}\n                        width={this.logoSize}/>\n<img src={teamAway.iconUrl} alt={teamAway.name} \n                        height={this.logoSize}\n                        width={this.logoSize}/>\n</CardTitle>\n    <MatchDetailsStats teams={teams} match={match} seasonInfo={seasonInfo} modelKey={modelKey} /> \n    <MatchDetailsTop3 stats={stats} />\n    <MatchDetailsKicktippTop3 stats={stats} />\n    <MatchDetailsPlusMinus stats={stats} />\n    <MatchDetailsHeatmap stats={stats} />\n\n\n</CardBody>\n</Card>  \n  }\n}\n","import React, { useState } from 'react';\nimport {\n    Card,CardBody, CardTitle,\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption,\n} from 'reactstrap';\nimport { MatchDetailsHeatmap } from './MatchDetailsHeatmap'\nimport { MatchDetailsTop3 } from './MatchDetailsTop3'\nimport { MatchDetailsKicktippTop3 } from './MatchDetailsKicktippTop3'\nimport { MatchDetailsPlusMinus } from './MatchDetailsPlusMinus'\nimport { MatchDetailsStats } from './MatchDetailsStats'\n\nconst items = [\n  {\n    id: 1,\n    altText: 'Slide 1',\n    caption: 'Slide 1',\n  },\n  {\n    id: 2,\n    altText: 'Slide 2',\n    caption: 'Slide 2',\n  },\n  {\n    id: 3,\n    altText: 'Slide 3',\n    caption: 'Slide 3',\n  },\n];\n\nconst logoSize = 20;\n\nexport function MatchDetails2(props) {\n    const teams = props.teams;\n    const match = props.match;\n    const seasonInfo = props.seasonInfo;\n    const stats = props.stats;\n    const modelKey = props.modelKey;\n    if (!teams || !match || !seasonInfo) return <div>empty</div>\n\n    const teamHome = teams[match.teamHomeId]\n    const teamAway = teams[match.teamAwayId]\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  };\n\n\n\n  const slides= [\n      <CarouselItem\n        className=\"custom-tag\"\n        tag=\"div\"\n        key={\"1\"}\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n      >\n        <CarouselCaption \n        captionText=\"Stats\"></CarouselCaption>\n        <div className='row'><div className='col-1'></div>\n            <div className='col-10'>\n\n            <MatchDetailsStats className=\"mt-3\" teams={teams} match={match} seasonInfo={seasonInfo} modelKey={modelKey} /> \n            <MatchDetailsTop3 className=\"mt-3\" stats={stats} />\n            <MatchDetailsKicktippTop3 className=\"mt-3\" stats={stats} />\n            </div>\n        </div>\n      </CarouselItem>, \n      <CarouselItem\n        className=\"custom-tag\"\n        tag=\"div\"\n        key={\"2\"}\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n      >\n        <div className='row'><div className='col-1'></div>\n            <div className='col-10'>\n        <MatchDetailsPlusMinus stats={stats} />\n            </div>\n        </div>\n      </CarouselItem>,\n      <CarouselItem\n        className=\"custom-tag\"\n        tag=\"div\"\n        key={\"3\"}\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n      >\n        <MatchDetailsHeatmap stats={stats} />\n      </CarouselItem>\n      ];\n\n\n\n  return (\n    <Card>\n<CardBody>\n<CardTitle tag=\"h5\">\nMatch Details\n<img src={teamHome.iconUrl} alt={teamHome.name} \n                        height={logoSize}\n                        width={logoSize}/>\n<img src={teamAway.iconUrl} alt={teamAway.name} \n                        height={logoSize}\n                        width={logoSize}/>\n</CardTitle>        \n      <style>\n        {`.custom-tag {\n              width: 100%;\n              height: 400px;\n              background: #eeeeeecc;\n                          }`}\n      </style>\n      <Carousel activeIndex={activeIndex} next={next} previous={previous}>\n        <CarouselIndicators\n          items={items}\n          activeIndex={activeIndex}\n          onClickHandler={goToIndex}\n        />\n        {slides}\n        <CarouselControl\n            direction='prev'\n            directionText=' '\n          onClickHandler={previous}\n        />\n        <CarouselControl\n            direction='next'\n            directionText=' '\n          onClickHandler={next}\n        />\n      </Carousel>\n    </CardBody>\n    </Card>\n  );\n}\n\nexport default MatchDetails2;","import React from 'react'\r\nimport moment from 'moment'\r\nimport './Match.css'\r\nimport { formatStats, calcStats } from '../stats/seasonInfo'\r\nimport {\r\n  formatProbs,\r\n  formatRate,\r\n  calcWinLossTieProbs,\r\n  formatPercentage,\r\n  getProbDescription,\r\n} from '../maths/probabilities'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button, Collapse } from 'reactstrap'\r\nimport { MatchDetails } from './MatchDetails'\r\nimport { MatchDetails2 } from './MatchDetails2'\r\n\r\nconst formatProbOrRate = (showPercentage, value) =>\r\n  showPercentage ? formatPercentage(value) : formatRate(value)\r\n\r\nclass Match extends React.Component {\r\n  logoSize = 20\r\n  render() {\r\n\r\n\r\n    const match = this.props.match\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const modelKey = this.props.modelKey\r\n    const probabilityDetailsMatchId = this.props.probabilityDetailsMatchId;\r\n    const isProbabilityDetailsShown = match.id===probabilityDetailsMatchId;\r\n \r\n\r\n    const teamHome = teams[match.teamHomeId]\r\n    const teamAway = teams[match.teamAwayId]\r\n\r\n    const stats = calcStats(\r\n      seasonInfo,\r\n      match.teamHomeId,\r\n      match.teamAwayId,\r\n      modelKey\r\n    )\r\n    const digits = 1\r\n    const formatedStats = formatStats(stats, digits)\r\n    const probs = calcWinLossTieProbs(stats.home, stats.away)\r\n    const formatedProbs = formatProbs(probs)\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      <>\r\n      <div\r\n        className=\"row\"\r\n        key={match.id}\r\n        data-toggle=\"tooltip\"\r\n        title={\r\n          'aktualisiert: ' +\r\n          moment(match.lastUpdate).format('DD.MM.YY HH:mm:ss')\r\n        }\r\n      >\r\n        <div className=\"col-2 pr-0\">\r\n          <img\r\n            src={teamHome.iconUrl}\r\n            alt={teamHome.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n          <img\r\n            src={teamAway.iconUrl}\r\n            alt={teamAway.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n        </div>\r\n        <div className=\"col-1 pr-0\">\r\n          <small>\r\n            ({match.halfTimeHome}:{match.halfTimeAway})\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 pr-0\">\r\n          <small className={match.isFinished ? 'final ' : ''}>\r\n            {match.fullTimeHome}:{match.fullTimeAway}\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <Button size='sm' color=\"link\" onClick={()=>this.props.toggleProbabilityDetails(isProbabilityDetailsShown ? null: match.id)}>\r\n            <FontAwesomeIcon icon=\"angle-double-down\" color=\"gray\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-2 text-center pr-0\">\r\n          <small>\r\n            <i>{formatedStats}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.win)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.tie)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.loss)}</i>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Collapse className='col-12' isOpen={isProbabilityDetailsShown}>\r\n        <MatchDetails2 className=\"p-1\" match={match} teams={teams} seasonInfo={seasonInfo} modelKey={modelKey} stats={stats}/>\r\n          {/* <MatchDetails match={match} teams={teams} seasonInfo={seasonInfo} modelKey={modelKey} stats={stats}/> */}\r\n        </Collapse>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Match\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport Match from './Match'\r\nimport './MatchsPerDay.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass MatchsPerDay extends React.Component {\r\n  render() {\r\n    const statsTitle = this.props.statsTitle\r\n    const statsDescription = this.props.statsDescription\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      < >\r\n              <div className=\"row\" key=\"this.props.date\">\r\n                <div scope=\"col\" className=\"col-5 \">\r\n                  <small>\r\n                    {moment(this.props.date).format('ddd DD.MM HH:mm')}\r\n                  </small>\r\n                </div>\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-2 text-center\">\r\n                    <small>\r\n                      {statsTitle}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon icon=\"info-circle\" size=\"sm\" />\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>1</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>0</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>2</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\" />\r\n                )}\r\n              </div>\r\n              {this.props.matchs.map((m) => (\r\n                <Match\r\n                  match={m}\r\n                  teams={this.props.teams}\r\n                  seasonInfo={this.props.seasonInfo}\r\n                  key={m.id}\r\n                  showPercentage={showPercentage}\r\n                  modelKey={this.props.modelKey}\r\n                  probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n                  toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n                />\r\n              ))}\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchsPerDay\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Matchs extends React.Component {\r\n  render() {\r\n    const matchs = this.props.matchs\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const showPercentage = this.props.showPercentage\r\n    if (!matchs || matchs.length === 0 || !teams) return <div>empty</div>\r\n\r\n    const groupByMatchDay = groupByFunc(matchs, (x) =>\r\n      x.matchDateTime\r\n    )\r\n\r\n    // @ts-ignore\r\n    const groupedMatchs = Object.entries(groupByMatchDay)\r\n    sortByField(groupedMatchs, '0')\r\n\r\n    const selectedModelId = this.props.selectedModelId\r\n    const modelKey = getKey(selectedModelId)\r\n    const statsHeader = getShort(modelKey)\r\n    const statsDescription = getDescription(modelKey)\r\n    \r\n    return (\r\n      <div className=\"container-fluid schedule\">\r\n        {groupedMatchs.map((gm, i) => (\r\n          <MatchsPerDay\r\n            teams={teams}\r\n            seasonInfo={seasonInfo}\r\n            date={gm[0]}\r\n            matchs={gm[1]}\r\n            key={gm[0]}\r\n            statsTitle={i === 0 ? statsHeader : ''}\r\n            statsDescription={statsDescription}\r\n            modelKey={modelKey}\r\n            showPercentage={showPercentage}\r\n            probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n            toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Matchs\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Table extends React.Component {\r\n  logoSize = 20\r\n\r\n  render() {\r\n    const seasonInfo = this.props.seasonInfo\r\n    const teams = this.props.teams\r\n    const matchs = this.props.matchs\r\n    //const selectedModelId = this.props.selectedModelId\r\n\r\n    const relevantTeams = matchs.flatMap(x=>[x.teamHomeId, x.teamAwayId]);\r\n    const data = seasonInfo && seasonInfo.length ? seasonInfo : relevantTeams\r\n    .map(x => ({\r\n      team: x,\r\n      tp: 0,\r\n      tgf: 0,\r\n      tga: 0\r\n    }))\r\n\r\n    const rawData = data.map((x) => ({\r\n      ...x,\r\n      iconUrl: teams[x.team].iconUrl,\r\n      shortName: teams[x.team].shortName,\r\n    }))\r\n    \r\n    const table = sortByField(rawData, \"tp\").reverse()\r\n    return (\r\n      <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Team</th>\r\n      <th scope=\"col\">P</th>\r\n      <th scope=\"col\">TG</th>\r\n      <th scope=\"col\">TA</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {table.map((team, index) => (<tr>\r\n      <td>          \r\n        <img\r\n            src={team.iconUrl}\r\n            alt={team.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n        />\r\n      </td>\r\n      <td>{team.tp}</td>\r\n      <td>{team.tgf}</td>\r\n      <td>{team.tga}</td>\r\n    </tr>))}\r\n  </tbody>\r\n</table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass ListNavigator extends Component {\r\n  onSelect(event) {\r\n    let node = event.target\r\n    while (!node.id) {\r\n      node = node.parentElement\r\n    }\r\n    this.props.onSelect(node.id)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.data) return <div />\r\n    const buttonStyles = this.props.buttonStyles ? this.props.buttonStyles : ''\r\n    const bgStyles = this.props.bgStyles ? this.props.bgStyles : ''\r\n\r\n    const data = this.props.data\r\n    const currentIndex = data.findIndex((x) => x.id === this.props.selected)\r\n    const selectedItem = data[currentIndex]\r\n    const nextIndex = currentIndex + 1\r\n    const prevIndex = currentIndex - 1\r\n    const nextId = nextIndex < data.length ? data[nextIndex].id : undefined\r\n    const prevId = prevIndex >= 0 ? data[prevIndex].id : undefined\r\n\r\n    return (\r\n      <div\r\n        className={`btn-group ${bgStyles}`}\r\n        role=\"group\"\r\n        aria-label=\"Button group with nested dropdown\"\r\n      >\r\n        <Button\r\n\r\n          id={prevId}\r\n          className={`btn btn-secondary ${buttonStyles}`}\r\n          disabled={prevId === undefined}\r\n          onClick={this.onSelect.bind(this)}\r\n        >\r\n          <FontAwesomeIcon icon=\"caret-left\" />\r\n        </Button>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <Button\r\n            id=\"btnGroupDrop1\"\r\n            className={`btn btn-secondary dropdown-toggle ${buttonStyles}`}\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {selectedItem ? selectedItem.name : this.props.selected}\r\n          </Button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {this.props.data.map((x) => (\r\n              <Button\r\n                className=\"dropdown-item\"\r\n                id={x.id}\r\n                key={x.id}\r\n                onClick={this.onSelect.bind(this)}\r\n              >\r\n                {x.name}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n          <Button\r\n            id={nextId}\r\n            className={`btn btn-secondary ${buttonStyles}`}\r\n            onClick={this.onSelect.bind(this)}\r\n            disabled={nextId === undefined}\r\n          >\r\n            <FontAwesomeIcon icon=\"caret-right\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ListNavigator\r\n","/******************* Actions ******************/\r\n\r\nexport const RequestLeagues = 'RequestLeagues'\r\nexport const RequestYears = 'RequestYears'\r\nexport const RequestTeams = 'RequestTeams'\r\nexport const RequestMatchDays = 'RequestMatchDays'\r\nexport const RequestMatchs = 'RequestMatchs'\r\nexport const ReceiveLeagues = 'ReceiveLeagues'\r\nexport const ReceiveYears = 'ReceiveYears'\r\nexport const ReceiveTeams = 'ReceiveTeams'\r\n\r\nexport const ReceiveMatchDays = 'ReceiveMatchDays'\r\nexport const ReceiveMatchs = 'ReceiveMatchs'\r\n\r\nexport const SelectMatchDay = 'SelectMatchDay'\r\nexport const SelectLeague = 'SelectLeague'\r\nexport const SelectYear = 'SelectYear'\r\n\r\nexport const StartInitializing = 'StartInitializing'\r\nexport const EndInitializing = 'EndInitializing'\r\n\r\nexport const StartRefreshMatchs = 'StartRefreshMatchs'\r\nexport const EndRefreshMatchs = 'EndRefreshMatchs'\r\n\r\nexport const SwitchMenu = 'SwitchMenu'\r\n\r\n/******** Clear **********/\r\nexport const clearSeason = 'ClearSeason'\r\nexport const clearAll = 'ClearAll'\r\n\r\nexport const ShowPercentage = 'ShowPercentage'\r\nexport const SwitchModel = 'SwitchModel'\r\nexport const ToggleProbabilityDetails = 'ToggleProbabilityDetails'\r\n","const leagues = [\r\n  {\r\n    id: 'bl1',\r\n    name: '1.Bundesliga',\r\n    key: 3005,\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  {\r\n    id: 'bl2',\r\n    name: '2.Bundesliga',\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  { id: 'bl3', name: '3.Bundesliga', years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015] },\r\n  { id: 'fifa18', name: 'WM18', years: [2018] },\r\n]\r\n\r\nexport default leagues\r\n","import leagues from './leagues'\r\n\r\nfunction getLeagues() {\r\n  return leagues.map((x) => {\r\n    return { id: x.id, name: x.name }\r\n  })\r\n}\r\n\r\nfunction getYears(leagueId) {\r\n  const league = leagues.find((x) => x.id === leagueId)\r\n  if (!league) return []\r\n  return league.years.map((y) => {\r\n    return { id: y, name: y, leagueId }\r\n  })\r\n}\r\n// new urls: https://api.openligadb.de/getmatchdata/bl1/2020/1\r\nconst openligaBaseUrl = 'https://api.openligadb.de'\r\nfunction getTeams(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailableteams/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\nfunction getMatchDays(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailablegroups/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchs(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getmatchdata/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchsLastChangeDate(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getlastchangedate/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nexport {\r\n  getTeams,\r\n  getLeagues,\r\n  getYears,\r\n  getMatchs,\r\n  getMatchDays,\r\n  getMatchsLastChangeDate,\r\n}\r\n","/****************** Map open liga db data ******************/\r\nfunction mapMatch(olMatch, league, year) {\r\n  const id = olMatch.matchID\r\n  const matchDateTime = olMatch.matchDateTime\r\n  const teamHomeId = olMatch.team1.teamId\r\n  const teamAwayId = olMatch.team2.teamId\r\n  const isFinished = olMatch.matchIsFinished\r\n  const matchDayId = olMatch.group.groupOrderID\r\n  const leagueKey = olMatch.leagueId\r\n  const lastUpdate = olMatch.lastUpdateDateTime\r\n  const halfTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Halbzeit\" || x.resultName === \"Halbzeitergebnis\"\r\n  )\r\n  const fullTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Endergebnis\"\r\n  )\r\n  const halfTimeHome = halfTimeResult ? halfTimeResult.pointsTeam1 : '-'\r\n  const halfTimeAway = halfTimeResult ? halfTimeResult.pointsTeam2 : '-'\r\n  const fullTimeHome = fullTimeResult ? fullTimeResult.pointsTeam1 : '-'\r\n  const fullTimeAway = fullTimeResult ? fullTimeResult.pointsTeam2 : '-'\r\n  return {\r\n    id,\r\n    teamHomeId,\r\n    teamAwayId,\r\n    matchDayId,\r\n    league,\r\n    leagueKey,\r\n    year,\r\n    lastUpdate,\r\n    matchDateTime,\r\n    isFinished,\r\n    halfTimeHome,\r\n    halfTimeAway,\r\n    fullTimeHome,\r\n    fullTimeAway,\r\n  }\r\n}\r\n\r\nfunction mapTeam(olTeam) {\r\n  const id = olTeam.teamId\r\n  const shortName = olTeam.shortName\r\n  const iconUrl = olTeam.teamIconUrl\r\n  const name = olTeam.teamName\r\n  return {\r\n    id,\r\n    shortName,\r\n    iconUrl,\r\n    name,\r\n  }\r\n}\r\n\r\nfunction mapTeamFromMatch(olMatch) {\r\n  const team1 = mapTeam(olMatch.team1)\r\n  const team2 = mapTeam(olMatch.team2)\r\n  return [team1, team2]\r\n}\r\n\r\nfunction mapTeamFromMatchs(olMatchs) {\r\n  let teams = {}\r\n  for (let i = 0; i < olMatchs.length; i++) {\r\n    const twoTeams = mapTeamFromMatch(olMatchs[i])\r\n    const t1 = twoTeams[0]\r\n    teams[t1.id] = t1\r\n    const t2 = twoTeams[1]\r\n    teams[t2.id] = t2\r\n  }\r\n  return teams\r\n}\r\n\r\nfunction mapMatchDay(olGroup, league, year) {\r\n  const id = parseInt(olGroup.groupOrderID, 10)\r\n  const name = olGroup.groupName\r\n  const key = parseInt(olGroup.groupID, 10)\r\n  return {\r\n    id,\r\n    name,\r\n    key,\r\n    league,\r\n    year\r\n  }\r\n}\r\n\r\nexport {\r\n  mapMatch,\r\n  mapMatchDay,\r\n  mapTeam,\r\n  mapTeamFromMatchs\r\n}","import {\r\n  prop,\r\n  map\r\n} from 'ramda'\r\nimport {\r\n  getAllMatchs,\r\n  getAllYearsByLeague,\r\n  getAllMatchDays,\r\n  getTeamsByLeagueAndYear,\r\n} from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport function getSelectedMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n\r\n  // @ts-ignore\r\n  return !allMatchs ? [] : allMatchs.filter(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}\r\nexport function getSelectedYears(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  return getAllYearsByLeague(state)[selectedLeague.toString()]\r\n}\r\n\r\nexport function getSelectedMatchDays(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n\r\n  const allMatchDays = getAllMatchDays(state)\r\n\r\n  // @ts-ignore\r\n  return allMatchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport const existsMatchDay = (state, matchDayId) => {\r\n  const matchDays = getSelectedMatchDays(state)\r\n  return !!matchDays.find((x) => x.id === matchDayId)\r\n}\r\n\r\nexport const existLeagues = (state) => {\r\n  const allLeagues = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allLeagues && allLeagues.length > 0\r\n}\r\n\r\nexport const existYears = (state, selectedLeague) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n\r\n  const yearsOfLeague = getAllYearsByLeague(state)[selectedLeague.toString()]\r\n  return yearsOfLeague && yearsOfLeague.length > 0\r\n}\r\n\r\nexport const existTeams = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const teamsByLeagueAndYear = getTeamsByLeagueAndYear(state)\r\n  // @ts-ignore\r\n  const relevantTeams = teamsByLeagueAndYear.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantTeams && relevantTeams.length > 0\r\n}\r\n\r\nexport const existMatchDays = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const matchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  const relevantDay = matchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantDay && relevantDay.length > 0\r\n}\r\n\r\nexport const getLatestUpdate = (matchs) => {\r\n  if (!matchs || matchs.length === 0) return undefined\r\n  const lastUpdates = map(prop('lastUpdate'))(matchs)\r\n    .sort()\r\n    .reverse()\r\n  return lastUpdates[0]\r\n}","import * as actions from './actions'\r\nimport * as statsType from '../stats/statsType'\r\nimport * as service from '../services'\r\nimport * as mapper from '../services/mapOpenLigaDB'\r\nimport {\r\n  existsMatchDay,\r\n  existLeagues,\r\n  existYears,\r\n  existTeams,\r\n  existMatchDays,\r\n  getSelectedYears,\r\n  getSelectedMatchDays,\r\n  getSelectedMatchs,\r\n  getLatestUpdate,\r\n} from '../utils/filter'\r\nimport {\r\n  getSelectedMatchDay,\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  dictionarize\r\n} from '../utils/listUtils'\r\nimport {\r\n  getAllLeagues\r\n} from '../reducers/selectors/modelSelector'\r\n\r\n/******************* SELECT in UI ******************/\r\n\r\nfunction selectMatchDay(state, selectedMatchDay) {\r\n  if (!existsMatchDay(state, selectedMatchDay))\r\n    selectedMatchDay = getSelectedMatchDay(state)\r\n  return {\r\n    type: actions.SelectMatchDay,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction selectLeague(selectedLeague) {\r\n  return {\r\n    type: actions.SelectLeague,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction selectYear(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.SelectYear,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\n/***************** MATCHDAYS  *********************/\r\n\r\nfunction requestMatchDays(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestMatchDays,\r\n    isLoadingMatchDays: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveMatchDays(selectedLeague, selectedYear, json) {\r\n  return {\r\n    type: actions.ReceiveMatchDays,\r\n    isLoadingMatchDays: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    matchDays: json.map((x) =>\r\n      mapper.mapMatchDay(x, selectedLeague, selectedYear)\r\n    ),\r\n  }\r\n}\r\n\r\nfunction fetchMatchDays(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchDays(selectedLeague, selectedYear))\r\n    return service\r\n      .getMatchDays(selectedLeague, selectedYear)\r\n      .then((json) =>\r\n        dispatch(receiveMatchDays(selectedLeague, selectedYear, json))\r\n      )\r\n  }\r\n}\r\n\r\n/***************** MATCHS  *********************/\r\n\r\nfunction requestMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return {\r\n    type: actions.RequestMatchs,\r\n    isLoadingMatchs: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json) {\r\n  const teams = mapper.mapTeamFromMatchs(json)\r\n  return {\r\n    type: actions.ReceiveMatchs,\r\n    isLoadingMatchs: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n    matchs: json.map((x) => mapper.mapMatch(x, selectedLeague, selectedYear)),\r\n    teams,\r\n  }\r\n}\r\n\r\nfunction fetchMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n    return service\r\n      .getMatchs(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) =>\r\n        dispatch(\r\n          receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json)\r\n        )\r\n      )\r\n  }\r\n}\r\n\r\nfunction refreshMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  if (!selectedLeague || !selectedYear || !selectedYear) return\r\n\r\n  return function (dispatch) {\r\n    dispatch(startRefreshMatchs())\r\n    return service\r\n      .getMatchsLastChangeDate(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) => {\r\n        if (updateMatchsRequired(state, json)) {\r\n          fetchMatchs(selectedLeague, selectedYear, selectedMatchDay)(\r\n            dispatch\r\n          ).then((x) => dispatch(endRefreshMatchs()))\r\n        } else {\r\n          dispatch(endRefreshMatchs())\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nfunction updateMatchsRequired(state, date) {\r\n  console.log(state, date)  \r\n  const matchs = getSelectedMatchs(state)\r\n  const lastUpdate = getLatestUpdate(matchs)\r\n  return !lastUpdate || lastUpdate < date\r\n}\r\n\r\nfunction startRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: true,\r\n  }\r\n}\r\n\r\nfunction endRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: false,\r\n  }\r\n}\r\n\r\n/***************** TEAMS  *********************/\r\n\r\nfunction requestTeams(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestTeams,\r\n    isLoadingTeams: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveTeams(selectedLeague, selectedYear, json) {\r\n  const teamData = json.map((x) => mapper.mapTeam(x))\r\n  const teams = dictionarize(teamData)\r\n  const teamsByLeagueAndYear = teamData.map((x) => ({\r\n    teamId: x.id,\r\n    league: selectedLeague,\r\n    year: selectedYear,\r\n  }))\r\n\r\n  return {\r\n    type: actions.ReceiveTeams,\r\n    isLoadingTeams: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    teams,\r\n    teamsByLeagueAndYear,\r\n  }\r\n}\r\n\r\nfunction fetchTeams(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestTeams(selectedLeague, selectedYear))\r\n    const promise = service.getTeams(selectedLeague, selectedYear)\r\n    return (\r\n      promise\r\n      //.then(\r\n      // response => response.json()\r\n      //error => console.log('An error occurred.',   error)\r\n      //)\r\n      .then((json) =>\r\n        dispatch(receiveTeams(selectedLeague, selectedYear, json))\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\n/***************** LEAGUES  *********************/\r\n\r\nfunction requestLeagues() {\r\n  return {\r\n    type: actions.RequestLeagues,\r\n    isLoadingLeagues: true\r\n  }\r\n}\r\n\r\nfunction receiveLeagues(json) {\r\n  return {\r\n    type: actions.ReceiveLeagues,\r\n    isLoadingLeagues: false,\r\n    leagues: json.map((x) => x),\r\n  }\r\n}\r\n\r\nfunction fetchLeagues() {\r\n  return function (dispatch) {\r\n    dispatch(requestLeagues())\r\n    const leagues = service.getLeagues()\r\n    dispatch(receiveLeagues(leagues))\r\n  }\r\n}\r\n\r\n/***************** YEARS  *********************/\r\n\r\nfunction requestYears(selectedLeague) {\r\n  return {\r\n    type: actions.RequestYears,\r\n    isLoadingYears: true,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction receiveYears(selectedLeague, json) {\r\n  const years = json.map((x) => x)\r\n  let yearsByLeague = {}\r\n  yearsByLeague[selectedLeague] = years\r\n  return {\r\n    type: actions.ReceiveYears,\r\n    selectedLeague: selectedLeague,\r\n    isLoadingYears: false,\r\n    yearsByLeague,\r\n  }\r\n}\r\n\r\nfunction fetchYears(selectedLeague) {\r\n  if (selectedLeague === undefined)\r\n    throw new Error('selectedLeague is undefined')\r\n\r\n  return function (dispatch) {\r\n    dispatch(requestYears(selectedLeague))\r\n    const years = service.getYears(selectedLeague)\r\n    dispatch(receiveYears(selectedLeague, years))\r\n  }\r\n}\r\n\r\n/***************** INIT  *********************/\r\n\r\nfunction fetchInitial(store) {\r\n  return function (dispatch) {\r\n    dispatch(startInitializing())\r\n\r\n    let state = store.getState()\r\n    if (!existLeagues(state)) {\r\n      fetchLeagues()(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var league = getAllLeagues(state)[0]\r\n      dispatch(selectLeague(league.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedLeague = getSelectedLeague(state)\r\n    if (!existYears(state, selectedLeague)) {\r\n      fetchYears(selectedLeague)(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var year = getSelectedYears(state)[0]\r\n      dispatch(selectYear(selectedLeague, year.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedYear = getSelectedYear(state)\r\n    if (!existTeams(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchTeams(selectedLeague, selectedYear))\r\n    }\r\n\r\n    if (!existMatchDays(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchMatchDays(selectedLeague, selectedYear)).then(() => {\r\n        let state = store.getState()\r\n        const selectedMatchDay = getSelectedMatchDay(state)\r\n        dispatch(fetchMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n      })\r\n    } else {\r\n      const matchDay = getSelectedMatchDays(state)[0]\r\n      dispatch(selectMatchDay(state, matchDay.id))\r\n    }\r\n    dispatch(endInitializing())\r\n  }\r\n}\r\n\r\nconst startInitializing = () => ({\r\n  type: actions.StartInitializing,\r\n  isInitializing: true,\r\n})\r\nconst endInitializing = () => ({\r\n  type: actions.EndInitializing,\r\n  isInitializing: false,\r\n})\r\n\r\n/* ----------- Menu ----------- */\r\nconst switchMenu = (id) => ({\r\n  type: actions.SwitchMenu,\r\n  menuId: id,\r\n})\r\n\r\n/* ----------- Clear ----------- */\r\n\r\nconst clearAll = () => ({\r\n  type: actions.clearAll,\r\n})\r\n\r\nconst clearSeason = (league, year) => ({\r\n  type: actions.clearSeason,\r\n  payload: {\r\n    league,\r\n    year\r\n  },\r\n})\r\n\r\n\r\n/* ----------- Visualize ----------- */\r\n\r\nconst showPercentage = (flag) => ({\r\n  type: actions.ShowPercentage,\r\n  payload: flag\r\n})\r\n\r\nconst switchModel = (selectedModelId) => ({\r\n  type: actions.SwitchModel,\r\n  payload: statsType.getNextId(selectedModelId)\r\n})\r\n\r\nconst toggleProbabilityDetails = (matchId) => ({\r\n  type: actions.ToggleProbabilityDetails,\r\n  payload: matchId\r\n})\r\n\r\nexport {\r\n  clearAll,\r\n  clearSeason,\r\n  switchMenu,\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  refreshMatchs,\r\n  showPercentage,\r\n  switchModel,\r\n  toggleProbabilityDetails,\r\n}","import {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  getAllMatchDays,\r\n  getAllMatchs,\r\n} from '../reducers/selectors/modelSelector'\r\n\r\nexport function areSelectedMatchDaysPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const allMatchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  return allMatchDays.find(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport function areSelectedMatchsPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allMatchs.find(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}","import {\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  switchMenu,\r\n} from './ActionBuilder'\r\nimport {\r\n  areSelectedMatchDaysPresent,\r\n  areSelectedMatchsPresent,\r\n} from '../utils/storeHelpers'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\n/******************* ActionBuilder with store ******************/\r\nconst dispatchFetchTeams = function(store, league, year) {\r\n  return store.dispatch(fetchTeams(league, year))\r\n}\r\n\r\nconst dispatchFetchMatchs = function(store, league, year, matchDay) {\r\n  return store.dispatch(fetchMatchs(league, year, matchDay))\r\n}\r\n\r\nconst dispatchFetchMatchDays = function(store, league, year) {\r\n  return store.dispatch(fetchMatchDays(league, year))\r\n}\r\n\r\nconst dispatchFetchInitial = function(store) {\r\n  return store.dispatch(fetchInitial(store))\r\n}\r\n\r\nconst dispatchFetchLeagues = function(store) {\r\n  return store.dispatch(fetchLeagues())\r\n}\r\n\r\nconst dispatchFetchYears = function(store, league) {\r\n  return store.dispatch(fetchYears(league))\r\n}\r\n\r\nconst dispatchSelectMatchDay = function(store, matchDay) {\r\n  return store.dispatch(selectMatchDay(store.getState(), matchDay))\r\n}\r\n\r\nconst dispatchSelectLeague = function(store, league) {\r\n  return store.dispatch(selectLeague(league))\r\n}\r\n\r\nconst dispatchSelectYear = function(store, league, year) {\r\n  return store.dispatch(selectYear(league, year))\r\n}\r\n\r\nconst updateMatchDaysIfNecessary = (store) => {\r\n  let state = store.getState()\r\n  if (!areSelectedMatchDaysPresent(store)) {\r\n    state = store.getState()\r\n    dispatchFetchMatchDays(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state)\r\n    )\r\n  }\r\n  state = store.getState()\r\n  let selectedMatchDay = getSelectedMatchDay(state)\r\n  selectedMatchDay = selectedMatchDay ? selectedMatchDay : 1\r\n  dispatchSelectMatchDay(store, selectedMatchDay)\r\n\r\n  if (!areSelectedMatchsPresent(store)) {\r\n    const state = store.getState()\r\n    dispatchFetchMatchs(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state),\r\n      getSelectedMatchDay(state)\r\n    )\r\n  }\r\n}\r\n\r\nconst dispatchSwitchMenu = (store, id) => store.dispatch(switchMenu(id))\r\n\r\nexport {\r\n  dispatchSwitchMenu,\r\n  dispatchFetchInitial,\r\n  dispatchFetchLeagues,\r\n  dispatchFetchTeams,\r\n  dispatchFetchMatchDays,\r\n  dispatchFetchMatchs,\r\n  dispatchFetchYears,\r\n  dispatchSelectMatchDay,\r\n  dispatchSelectLeague,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport ListNavigator from './ListNavigator'\r\n\r\nimport {\r\n  dispatchFetchMatchs,\r\n  dispatchSelectMatchDay,\r\n} from '../actions/ActionBuilderWithStore'\r\n\r\nimport { areSelectedMatchsPresent } from '../utils/storeHelpers'\r\nimport { getSelectedMatchDays } from '../utils/filter'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nclass MatchdayNavigator extends Component {\r\n  onSelect(id) {\r\n    const store = this.props.store\r\n    dispatchSelectMatchDay(store, parseInt(id, 10))\r\n    this.updateMatchs()\r\n  }\r\n\r\n  updateMatchs() {\r\n    const store = this.props.store\r\n    if (!areSelectedMatchsPresent(store)) {\r\n      const state = store.getState()\r\n      dispatchFetchMatchs(\r\n        store,\r\n        getSelectedLeague(state),\r\n        getSelectedYear(state),\r\n        getSelectedMatchDay(state)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantMatchDays = getSelectedMatchDays(state)\r\n    const selectedMatchDay = getSelectedMatchDay(state)\r\n    return (\r\n      <ListNavigator\r\n        data={relevantMatchDays}\r\n        selected={selectedMatchDay}\r\n        onSelect={this.onSelect.bind(this)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchdayNavigator\r\n","import { connect } from 'react-redux'\r\nimport { RefreshButton } from '../components/RefreshButton'\r\nimport { refreshMatchs } from '../actions/ActionBuilder'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false,\r\n  isUpdating: state.ui.isRefreshingMatchs,\r\n  state,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClick: (state) => {\r\n      console.log('refresh')\r\n      dispatch(refreshMatchs(state))\r\n    },\r\n  }\r\n}\r\n\r\nexport const RefreshCurrentMatchDayButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RefreshButton)\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const RefreshButton = ({ onClick, disabled, isUpdating, state }) => {\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={() => onClick(state)}\r\n      disabled={disabled && !isUpdating}\r\n    >\r\n      <FontAwesomeIcon icon=\"sync\" spin={isUpdating} />\r\n    </Button>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { switchModel } from '../actions/ActionBuilder';\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"sliders-h\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(switchModel(ownProps.selectedModelId)) \r\n    }\r\n  }\r\n}\r\n\r\nexport const MatchDayOptionsButton = connect(mapStateToProps, mapDispatchToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  onClick: () => {\r\n    console.log('refresh')\r\n  },\r\n  disabled: true,\r\n})\r\n\r\nexport const MatchDayViewSettings = connect(mapStateToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport {\r\n  getIsInitializing,\r\n  getIsLoadingLeagues,\r\n  getIsLoadingYears,\r\n  getIsLoadingAllMatchDays,\r\n  getIsLoadingTeams,\r\n  getIsLoadingMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport default class LoadingPage extends React.Component {\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsInitializing(state)) {\r\n      return <h2>Intializing...</h2>\r\n    }\r\n    if (getIsLoadingLeagues(state)) {\r\n      return <h2>Loading Leagues...</h2>\r\n    }\r\n    if (getIsLoadingYears(state)) {\r\n      return <h2>Loading Years...</h2>\r\n    }\r\n    if (getIsLoadingAllMatchDays(state)) {\r\n      return <h2>Loading Matchdays...</h2>\r\n    }\r\n    if (getIsLoadingTeams(state)) {\r\n      return <h2>Loading Teams...</h2>\r\n    }\r\n    if (getIsLoadingMatchDay(state)) {\r\n      return <h2>Loading Matchs...</h2>\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const IconButton = ({ icon, disabled, handleClick }) => {\r\n  return (\r\n    <Button color='link' onClick={handleClick} disabled={disabled}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </Button>\r\n  )\r\n}\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearAll } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleClick: () => {\r\n    dispatch(clearAll())\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  icon: 'trash-alt',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearAllButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearAllButton\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearSeason } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  handleClick: () => {\r\n    dispatch(clearSeason(ownProps.league, ownProps.year))\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  icon: 'trash',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearSeasonButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearSeasonButton\r\n","import { groupByArray, sortByField } from './listUtils'\r\n\r\nconst getTeamCount = (state) => {\r\n  return Object.keys(state.model.teams).length\r\n}\r\n\r\nconst getSeasonsCount = (state) => {\r\n  return groupByArray(state.model.matchs, (x) => x.league).map((x) => ({\r\n    league: x.key,\r\n    name: state.model.leagues.find((y) => y.id === x.key).name,\r\n    seasons: sortByField(\r\n      groupByArray(x.values, (y) => y.year).map((z) => ({\r\n        year: z.key,\r\n        count: groupByArray(z.values, (z1) => z1.matchDayId).length,\r\n      })),\r\n      'year'\r\n    ),\r\n  }))\r\n}\r\n\r\nexport const getStorageStats = (state) => ({\r\n  teamCount: getTeamCount(state),\r\n  leagues: getSeasonsCount(state),\r\n})\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ClearAllButton from './ClearAllButton'\r\nimport ClearSeasonButton from './ClearSeasonButton'\r\nimport { getStorageStats } from '../../utils/stateStats'\r\n\r\nconst renderSeasonRow = (league, year, count) => {\r\n  return (\r\n    <div className=\"storage-row\" key={`${league}_${year}`}>\r\n      {year} ({count}) <ClearSeasonButton league={league} year={year} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StorageTemplate = ({ teamCount, leagues }) => {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Lokaler Speicher <ClearAllButton />\r\n      </h3>\r\n      <div className=\"storage-header\">Allgemeine Informationen</div>\r\n      <div className=\"storage-row\">Mannschaften ({teamCount})</div>\r\n      <div className=\"storage-header\">Ligen</div>\r\n      <div>{leagues.count}</div>\r\n      {leagues.map((l) => (\r\n        <div key={l.league}>\r\n          <div className=\"storage-sub-header\">{l.name}</div>\r\n          {l.seasons.map((s) => renderSeasonRow(l.league, s.year, s.count))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => getStorageStats(state)\r\n\r\nconst Storage = connect(mapStateToProps)(StorageTemplate)\r\n\r\nexport default Storage\r\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\n\nexport const PercentageButton = ({ onClick, disabled, state }) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"btn btn-secondary\"\n      data-toggle=\"button\"\n      aria-pressed={state.ui.showPercentage}\n      onClick={() => onClick(state)}\n      disabled={disabled}\n    >\n      <FontAwesomeIcon icon=\"percentage\" />\n    </Button>\n  )\n}\n\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport './App.css'\r\n\r\nimport Matchs from './Matchs'\r\nimport Table from './Table'\r\nimport MatchdayNavigator from '../components/MatchdayNavigator'\r\n\r\nimport { dispatchFetchInitial } from '../actions/ActionBuilderWithStore'\r\nimport { getSelectedMatchs } from '../utils/filter'\r\nimport { getIsLoading } from '../reducers/selectors/uiSelector'\r\nimport { getAllTeams } from '../reducers/selectors/modelSelector'\r\nimport { RefreshCurrentMatchDayButton } from './RefreshCurrentMatchDayButton'\r\nimport { MatchDayOptionsButton } from './MatchDayOptionsButton'\r\nimport { MatchDayViewSettings } from './MatchDayViewSettings'\r\n\r\nimport LoadingPage from './LoadingPage'\r\nimport Storage from './Storage'\r\nimport { getSeasonInfo } from '../stats/seasonInfo'\r\nimport { PercentageButton } from '../components/PercentageButton'\r\n\r\nimport * as actionBuilder from '../actions/ActionBuilder'\r\n\r\nclass App extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const store = this.props.store\r\n    dispatchFetchInitial(store)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsLoading(state)) return <LoadingPage />\r\n    if (state.ui.menuId === 'storage') return <Storage />\r\n\r\n    console.log('render normal')\r\n    const relevantMatchs = getSelectedMatchs(state)\r\n    const teams = getAllTeams(state)\r\n    const seasonInfo = getSeasonInfo(state)\r\n    const showPercentage = state.ui.showPercentage\r\n    const selectedModelId = state.ui.selectedModelId\r\n    const probabilityDetailsMatchId = state.ui.probabilityDetailsMatchId\r\n    return (\r\n      <div className=\"container.fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className=\"btn-toolbar\"\r\n            role=\"toolbar\"\r\n            aria-label=\"Toolbar with button groups\"\r\n          >\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayViewSettings />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayOptionsButton selectedModelId={state.ui.selectedModelId} />\r\n            </div>\r\n\r\n            <MatchdayNavigator store={store} />\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <PercentageButton\r\n                state={state}\r\n                onClick={(s) =>\r\n                  this.props.store.dispatch(\r\n                    actionBuilder.showPercentage(!s.ui.showPercentage)\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <RefreshCurrentMatchDayButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 no-pad-right\">\r\n                <Matchs\r\n                  matchs={relevantMatchs}\r\n                  teams={teams}\r\n                  seasonInfo={seasonInfo}\r\n                  showPercentage={showPercentage}\r\n                  selectedModelId={selectedModelId}\r\n                  probabilityDetailsMatchId={probabilityDetailsMatchId}\r\n              toggleProbabilityDetails={(matchId) => { \r\n                this.props.store.dispatch(\r\n                  actionBuilder.toggleProbabilityDetails(matchId)\r\n                )  }}\r\n            />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Table \r\n                  teams={teams}\r\n                  seasonInfo={seasonInfo}\r\n                  matchs={relevantMatchs}\r\n                  selectedModelId={selectedModelId}\r\n                  />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport {\r\n  dispatchSelectLeague,\r\n  dispatchFetchYears,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n  dispatchSwitchMenu,\r\n} from '../actions/ActionBuilderWithStore'\r\nimport ListNavigator from './ListNavigator'\r\nimport { getSelectedYears } from '../utils/filter'\r\nimport { getAllLeagues } from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass Navbar extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async leagueChange(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, 'matchs')\r\n    dispatchSelectLeague(store, event.target.id)\r\n    dispatchFetchYears(store, event.target.id)\r\n\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  async yearChange(id) {\r\n    const store = this.props.store\r\n    let state = store.getState()\r\n    const year = parseInt(id, 10)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    dispatchSelectYear(store, selectedLeague, year)\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  selectMenu(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, event.target.id)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantYears = getSelectedYears(state)\r\n    const leagues = getAllLeagues(state)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    const selectedYear = getSelectedYear(state)\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {selectedLeague}\r\n        </a>\r\n        <ListNavigator\r\n          buttonStyles={'btn-sm btn-light'}\r\n          bgStyles={'btn-light'}\r\n          selected={selectedYear}\r\n          data={relevantYears}\r\n          onSelect={this.yearChange.bind(this)}\r\n        />\r\n        <Button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <span className=\"navbar-text\">\r\n            <FontAwesomeIcon icon=\"futbol\" />\r\n            &nbsp;\r\n            <b>Fußball</b>\r\n          </span>\r\n          <ul className=\"navbar-nav mr-auto\" key=\"Football\">\r\n            {leagues.map((l) => (\r\n              <li\r\n                className={`nav-item ${\r\n                  l.id === selectedLeague ? 'active' : ''\r\n                }`}\r\n                key={l.id}\r\n              >\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id={l.id}\r\n                  onClick={this.leagueChange.bind(this)}\r\n                >\r\n                  {l.name}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <span className=\"navbar-text\">\r\n            <b>Einstellungen</b>\r\n            <ul className=\"navbar-nav mr-auto\" key=\"Settings\">\r\n              <li className={`nav-item`} key=\"storage\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id=\"storage\"\r\n                  onClick={this.selectMenu.bind(this)}\r\n                >\r\n                  Speicher\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nexport default Navbar\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <p className=\"text-center font-italic\">\r\n          <span className=\"badge badge-dark\">yaspp</span>\r\n          &nbsp; yet another sports page\r\n        </p>\r\n        <Navbar store={this.props.store} />\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Footer.css'\r\nimport { getSelectedMatchs, getLatestUpdate } from '../utils/filter'\r\nimport { formatUpdateDate } from '../utils/dateFormat'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lastUpdate: getLatestUpdate(getSelectedMatchs(state)),\r\n})\r\n\r\nconst FooterTemplate = ({ lastUpdate }) => (\r\n  <footer>\r\n    <hr />\r\n    <div className=\"row\">\r\n      <div className=\"col self-align-start\">\r\n        <small>\r\n          <i>aktualisiert</i> {formatUpdateDate(lastUpdate)}\r\n        </small>\r\n      </div>\r\n      <div className=\"col self-align-end text-right\">\r\n        <small>\r\n          <i>\r\n            powered by <a href=\"https://www.openligadb.de\">Openliga DB</a>\r\n          </i>\r\n        </small>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nconst Footer = connect(mapStateToProps)(FooterTemplate)\r\nexport default Footer\r\n","import moment from 'moment'\r\n\r\nexport function formatUpdateDate(lastUpdate) {\r\n  const lastUpdateDate = moment(lastUpdate)\r\n  const now = moment()\r\n  var dt = moment.duration(lastUpdateDate.diff(now))\r\n\r\n  return dt.asYears() > -1\r\n    ? dt.humanize(true)\r\n    : lastUpdateDate.format('DD.MM.YY HH:mm')\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport App from './parts/App'\r\nimport Header from './parts/Header'\r\nimport Footer from './parts/Footer'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport * as icons from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(icons.faSync)\r\nlibrary.add(icons.faSlidersH)\r\nlibrary.add(icons.faTrashAlt)\r\nlibrary.add(icons.faTrash)\r\nlibrary.add(icons.faCaretLeft)\r\nlibrary.add(icons.faCaretRight)\r\nlibrary.add(icons.faFutbol)\r\nlibrary.add(icons.faAngleDoubleDown)\r\nlibrary.add(icons.faInfo)\r\nlibrary.add(icons.faInfoCircle)\r\nlibrary.add(icons.faPercentage)\r\nlibrary.add(icons.faEllipsisV)\r\nlibrary.add(icons.faEllipsisH)\r\nlibrary.add(icons.faBars)\r\nlibrary.add(icons.faColumns)\r\nlibrary.add(icons.faTable)\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    const store = this.props.store\r\n    return (\r\n      <div>\r\n        <Header store={store} />\r\n        <App store={store} />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Root\r\n","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nconst initialState = {\r\n  menuId: '',\r\n  selectedLeague: '',\r\n  selectedYear: '',\r\n  selectedMatchDay: 0,\r\n\r\n  isInitializing: false,\r\n  isLoadingLeagues: false,\r\n  isLoadingYears: false,\r\n  isLoadingTeams: false,\r\n  isLoadingAllMatchDays: false,\r\n  isLoadingMatchDay: false,\r\n  isRefreshingMatchs: false,\r\n\r\n  showPercentage: false,\r\n  selectedModelId: 0,\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  switch (action.type) {\r\n    case actions.SelectMatchDay:\r\n      {\r\n        return {\r\n          ...state,\r\n          selectedMatchDay: action.selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.SelectLeague:\r\n      {\r\n        const selectedLeague = action.selectedLeague\r\n        return {\r\n          ...state,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.SelectYear:\r\n      {\r\n        const selectedYear = action.selectedYear\r\n        return {\r\n          ...state,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.RequestLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeague\r\n        return { ...state,\r\n          isLoadingLeagues\r\n        }\r\n      }\r\n    case actions.RequestYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        return { ...state,\r\n          isLoadingYears\r\n        }\r\n      }\r\n    case actions.RequestTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.RequestMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        return { ...state,\r\n          isLoadingMatchDays\r\n        }\r\n      }\r\n    case actions.RequestMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return { ...state,\r\n          isLoadingMatchs\r\n        }\r\n      }\r\n    case actions.ReceiveLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeagues\r\n        const selectedLeague = action.leagues[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingLeagues,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.ReceiveYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        const years = action.yearsByLeague ?\r\n          action.yearsByLeague[action.selectedLeague] :\r\n          undefined\r\n        const selectedYear = years && years.length > 0 ? years[0].id : undefined\r\n        return {\r\n          ...state,\r\n          isLoadingYears,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.ReceiveTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.ReceiveMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        const selectedMatchDay = action.matchDays[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingMatchDays,\r\n          selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.ReceiveMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return {\r\n          ...state,\r\n          isLoadingMatchs,\r\n        }\r\n      }\r\n    case actions.StartInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.EndInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.StartRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.EndRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.SwitchMenu:\r\n      {\r\n        return { ...state,\r\n          menuId: action.menuId\r\n        }\r\n      }\r\n    case actions.ShowPercentage:\r\n      {\r\n        return { ...state,\r\n          showPercentage: action.payload\r\n        }\r\n      }\r\n    case actions.SwitchModel:\r\n      {\r\n        return { ...state,\r\n          selectedModelId: action.payload\r\n        }\r\n      }\r\n    case actions.ToggleProbabilityDetails:\r\n      {\r\n        return { ...state,\r\n          probabilityDetailsMatchId: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nexport const initialState = {\r\n  leagues: [],\r\n  yearsByLeague: {},\r\n  teams: {},\r\n  matchDays: [],\r\n  matchs: [],\r\n  teamsByLeagueAndYear: [],\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const modelReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  console.log(action)\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case actions.ReceiveLeagues: {\r\n      const leagues = [...action.leagues]\r\n      return {\r\n        ...state,\r\n        leagues,\r\n      }\r\n    }\r\n    case actions.ReceiveYears: {\r\n      const yearsByLeague = { ...state.yearsByLeague, ...action.yearsByLeague }\r\n      return {\r\n        ...state,\r\n        yearsByLeague,\r\n      }\r\n    }\r\n    case actions.ReceiveTeams: {\r\n      const teams = {\r\n        ...state.teams,\r\n        ...action.teams,\r\n      }\r\n      const teamsByLeagueAndYear = [\r\n        ...state.teamsByLeagueAndYear,\r\n        ...action.teamsByLeagueAndYear,\r\n      ]\r\n      return { ...state, teams, teamsByLeagueAndYear }\r\n    }\r\n    case actions.ReceiveMatchDays: {\r\n      const matchDays = [...state.matchDays, ...action.matchDays]\r\n\r\n      return {\r\n        ...state,\r\n        matchDays,\r\n      }\r\n    }\r\n    case actions.ReceiveMatchs: {\r\n      const teams = { ...state.teams, ...action.teams }\r\n\r\n      const matchDict = state.matchs.reduce((res,x) => {\r\n        res[x.id]=x\r\n        return res\r\n      }, {})\r\n      \r\n      for (let i=0;i<action.matchs.length;++i) {\r\n        const match = action.matchs[i]\r\n        matchDict[match.id]=match\r\n      }\r\n      const matchs = Object.values(matchDict)\r\n\r\n      return {\r\n        ...state,\r\n        matchs,\r\n        teams,\r\n      }\r\n    }\r\n    case actions.clearAll: {\r\n      return initialState\r\n    }\r\n    case actions.clearSeason: {\r\n      const { league, year } = action.payload\r\n      return {\r\n        ...state,\r\n        matchDays: state.matchDays.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        matchs: state.matchs.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        teamsByLeagueAndYear: state.teamsByLeagueAndYear.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { modelReducer } from './modelReducer'\r\n\r\nexport const reducer = combineReducers({ ui: uiReducer, model: modelReducer })\r\n","// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nimport { reducer } from './reducers'\r\nimport { saveState, loadState } from './utils/localStorage'\r\nimport { throttle } from 'lodash'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/de'\r\n\r\n/******************* Set globals ******************/\r\nmoment.locale(\"de\")\r\n\r\n/******************* Create Store ******************/\r\nconst thunk = ReduxThunk\r\nconst persistedState = loadState()\r\nconst store = createStore(reducer, persistedState, applyMiddleware(thunk))\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const model = store.getState().model\r\n    saveState({ model })\r\n  }, 1000)\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Root store={store} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","const SERIALIZED_STATE_KEY = 'yaspp_state'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(SERIALIZED_STATE_KEY)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(SERIALIZED_STATE_KEY, serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}"],"sourceRoot":""}