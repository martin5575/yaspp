{"version":3,"sources":["reducers/selectors/uiSelector.js","reducers/selectors/modelSelector.js","utils/listUtils.js","stats/statsType.js","stats/seasonInfo.js","maths/probabilities.js","parts/MatchProbabilityDetails.jsx","parts/MatchDetails.jsx","parts/Match.jsx","parts/MatchsPerDay.jsx","parts/Matchs.jsx","parts/Table.jsx","components/ListNavigator.jsx","actions/actions.js","services/leagues.js","services/index.js","services/mapOpenLigaDB.js","utils/filter.js","actions/ActionBuilder.js","utils/storeHelpers.js","actions/ActionBuilderWithStore.js","components/MatchdayNavigator.jsx","parts/RefreshCurrentMatchDayButton.jsx","components/RefreshButton.jsx","parts/MatchDayOptionsButton.jsx","parts/MatchDayViewSettings.jsx","parts/LoadingPage.jsx","components/IconButton.jsx","parts/Storage/ClearAllButton.jsx","parts/Storage/ClearSeasonButton.jsx","utils/stateStats.js","parts/Storage/index.jsx","components/PercentageButton.jsx","parts/App.jsx","components/Navbar.jsx","parts/Header.jsx","parts/Footer.jsx","utils/dateFormat.js","Root.jsx","reducers/uiReducer.js","reducers/modelReducer.js","reducers/index.js","index.js","utils/localStorage.js"],"names":["getUi","prop","getSelectedLeague","pipe","getSelectedYear","getSelectedMatchDay","getIsInitializing","getIsLoadingLeagues","getIsLoadingYears","getIsLoadingTeams","getIsLoadingAllMatchDays","getIsLoadingMatchDay","getIsLoading","getModel","getAllLeagues","getAllTeams","getTeamsByLeagueAndYear","getAllMatchDays","getAllMatchs","getAllYearsByLeague","groupByArray","xs","key","reduce","rv","x","v","Function","el","find","r","values","push","dictionarize","array","result","y","id","sortByField","sort","compare","a","b","sum","res","definitions","short","description","getPoints","gf","ga","sumFields","teamInfo","key1","key2","undefined","aggregateSeasonInfo","matchs","home","map","team","hgf","fullTimeHome","hga","fullTimeAway","hp","match","hm","length","away","agf","aga","ap","am","fullWithTotal","concat","_toConsumableArray","_objectSpread","tgf","tga","tp","tm","totalGA","aggregate","avgGA","hdf","adf","tdf","getHG_AG_AVG","infoHome","infoAway","getTG_TG_AVG","getStats","statsType","goals","getHGDF_AGDF_AVG","getTGDF_TGDF_AVG","formatNumber","n","digits","toFixed","poissonProbability","lambda","k","Math","pow","exp","i","faculty","calcLossProbs","probs","probSum","j","calcWinProbs","calcTieProbs","calcResultProbs","hg","ag","arguments","minProb","max","row","formatPercentage","formatRate","min","MatchProbabilityDetails","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","renderTop3","numberOfGoals","probsList","forEach","prob","sortedProbs","_","sortBy","React","createElement","className","renderPlusMinus","plusMinusList","diff","plusMinus","Object","keys","parseInt","maxResult","maxProb","Fragment","filter","style","backgroundColor","_inherits","_createClass","value","props","stats","Component","MatchDetails","logoSize","teamId","teams","seasonInfo","modelKey","isHomeTeam","info","console","log","total","includes","src","iconUrl","alt","name","height","width","details","teamHomeId","teamAwayId","formatProbOrRate","showPercentage","Match","_this2","probabilityDetailsMatchId","isProbabilityDetailsShown","teamHome","teamAway","calcStats","formatedStats","formatStats","win","tie","loss","calcWinLossTieProbs","formatProbs","data-toggle","title","moment","lastUpdate","format","shortName","halfTimeHome","halfTimeAway","isFinished","Button","size","color","onClick","toggleProbabilityDetails","FontAwesomeIcon","icon","Collapse","isOpen","MatchsPerDay","statsTitle","statsDescription","scope","date","m","Matchs","func","groupByMatchDay","matchDateTime","groupedMatchs","entries","selectedModelId","statsHeader","item","getShort","getDescription","gm","Table","relevantTeams","flatMap","rawData","table","reverse","class","index","ListNavigator","_Component","event","node","target","parentElement","onSelect","data","buttonStyles","bgStyles","currentIndex","findIndex","selected","selectedItem","nextIndex","prevIndex","nextId","prevId","role","aria-label","disabled","bind","aria-haspopup","aria-expanded","aria-labelledby","RequestLeagues","RequestYears","RequestTeams","RequestMatchDays","RequestMatchs","ReceiveLeagues","ReceiveYears","ReceiveTeams","ReceiveMatchDays","ReceiveMatchs","SelectMatchDay","SelectLeague","SelectYear","StartRefreshMatchs","leagues","years","openligaBaseUrl","mapTeam","olTeam","teamIconUrl","teamName","getSelectedMatchs","state","selectedLeague","selectedYear","selectedMatchDay","allMatchs","league","year","matchDayId","getSelectedYears","toString","getSelectedMatchDays","existsMatchDay","existLeagues","allLeagues","existYears","Error","yearsOfLeague","existTeams","existMatchDays","relevantDay","getLatestUpdate","selectMatchDay","type","actions","selectLeague","selectYear","receiveMatchDays","json","isLoadingMatchDays","matchDays","olGroup","groupOrderID","groupName","groupID","fetchMatchDays","dispatch","requestMatchDays","url","fetch","then","service","fetchMatchs","isLoadingMatchs","requestMatchs","matchday","olMatchs","olMatch","twoTeams","team1","team2","t1","t2","mapper","matchID","matchIsFinished","group","leagueKey","leagueId","lastUpdateDateTime","halfTimeResult","matchResults","resultName","fullTimeResult","pointsTeam1","pointsTeam2","receiveMatchs","refreshMatchs","isRefreshingMatchs","updateMatchsRequired","endRefreshMatchs","fetchTeams","isLoadingTeams","requestTeams","teamData","teamsByLeagueAndYear","receiveTeams","fetchLeagues","isLoadingLeagues","fetchYears","isLoadingYears","requestYears","yearsByLeague","receiveYears","startInitializing","isInitializing","endInitializing","areSelectedMatchsPresent","store","getState","dispatchFetchMatchs","matchDay","dispatchFetchInitial","fetchInitial","dispatchFetchYears","dispatchSelectMatchDay","dispatchSelectLeague","dispatchSelectYear","updateMatchDaysIfNecessary","areSelectedMatchDaysPresent","dispatchFetchMatchDays","dispatchSwitchMenu","menuId","switchMenu","MatchdayNavigator","updateMatchs","relevantMatchDays","RefreshCurrentMatchDayButton","connect","isUpdating","ui","_ref","spin","MatchDayOptionsButton","ownProps","payload","currentId","switchModel","MatchDayViewSettings","LoadingPage","IconButton","handleClick","ClearAllButton","ClearSeasonButton","getTeamCount","model","getSeasonsCount","seasons","z","count","z1","Storage","teamCount","getStorageStats","l","s","PercentageButton","aria-pressed","_regeneratorRuntime","e","t","prototype","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","f","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_componentDidMount","forceUpdate","unsubscribe","subscribe","update","_asyncToGenerator","_callee","_context","relevantMatchs","previousMatchs","getSeasonInfo","matchId","actionBuilder","Navbar","_leagueChange","_yearChange","_x","_x2","_callee2","_context2","relevantYears","href","yearChange","data-target","aria-controls","leagueChange","selectMenu","Header","Footer","lastUpdateDate","now","dt","duration","asYears","humanize","formatUpdateDate","library","add","icons","Root","initialState","isLoadingAllMatchDays","isLoadingMatchDay","reducer","combineReducers","action","isLoadingLeague","matchDict","_action$payload","locale","thunk","ReduxThunk","persistedState","serializedState","localStorage","getItem","JSON","parse","error","loadState","createStore","applyMiddleware","throttle","stringify","setItem","saveState","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2bae9a75.chunk.js","sourcesContent":["import { prop, pipe } from 'ramda'\r\n\r\nexport const getUi = prop('ui')\r\n\r\nexport const getSelectedLeague = pipe(\r\n  getUi,\r\n  prop('selectedLeague')\r\n)\r\n\r\nexport const getSelectedYear = pipe(\r\n  getUi,\r\n  prop('selectedYear')\r\n)\r\n\r\nexport const getSelectedMatchDay = pipe(\r\n  getUi,\r\n  prop('selectedMatchDay')\r\n)\r\n\r\nexport const getIsInitializing = pipe(\r\n  getUi,\r\n  prop('isInitializing')\r\n)\r\n\r\nexport const getIsLoadingLeagues = pipe(\r\n  getUi,\r\n  prop('isLoadingLeagues')\r\n)\r\n\r\nexport const getIsLoadingYears = pipe(\r\n  getUi,\r\n  prop('isLoadingYears')\r\n)\r\n\r\nexport const getIsLoadingTeams = pipe(\r\n  getUi,\r\n  prop('isLoadingTeams')\r\n)\r\n\r\nexport const getIsLoadingAllMatchDays = pipe(\r\n  getUi,\r\n  prop('isLoadingAllMatchDays')\r\n)\r\n\r\nexport const getIsLoadingMatchDay = pipe(\r\n  getUi,\r\n  prop('isLoadingMatchDay')\r\n)\r\n\r\nexport const getIsLoading =\r\n  getIsInitializing ||\r\n  getIsLoadingLeagues ||\r\n  getIsLoadingYears ||\r\n  getIsLoadingTeams ||\r\n  getIsLoadingAllMatchDays ||\r\n  getIsLoadingMatchDay\r\n","import { prop, pipe } from 'ramda'\r\n\r\nexport const getModel = prop('model')\r\n\r\nexport const getAllLeagues = pipe(\r\n  getModel,\r\n  prop('leagues')\r\n)\r\n\r\nexport const getAllTeams = pipe(\r\n  getModel,\r\n  prop('teams')\r\n)\r\n\r\nexport const getTeamsByLeagueAndYear = pipe(\r\n  getModel,\r\n  prop('teamsByLeagueAndYear')\r\n)\r\n\r\nexport const getAllMatchDays = pipe(\r\n  getModel,\r\n  prop('matchDays')\r\n)\r\n\r\nexport const getAllMatchs = pipe(\r\n  getModel,\r\n  prop('matchs')\r\n)\r\n\r\nexport const getAllYearsByLeague = pipe(\r\n  getModel,\r\n  prop('yearsByLeague')\r\n)\r\n","export const groupByField = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByFunc = (xs, func) => {\r\n  return xs.reduce((rv, x) => {\r\n    const key = func(x)\r\n    ;(rv[key] = rv[key] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByArray = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    let v = key instanceof Function ? key(x) : x[key]\r\n    let el = rv.find((r) => r && r.key === v)\r\n\r\n    if (el) {\r\n      el.values.push(x)\r\n    } else {\r\n      rv.push({ key: v, values: [x] })\r\n    }\r\n\r\n    return rv\r\n  }, [])\r\n}\r\n\r\nexport const dictionarize = (array) => {\r\n  return array.reduce((result, y) => {\r\n    result[y.id] = y\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport const sortByField = (xs, key) => xs.sort(compare(key))\r\n\r\nexport const compare = (key) => (a, b) => {\r\n  if (a[key] < b[key]) return -1\r\n  if (a[key] > b[key]) return 1\r\n  return 0\r\n}\r\n\r\nexport const sum = (xs) => xs.reduce((res, x) => res + x, 0)\r\n","export const TotalGoalsVsTotalGoals = \"tg_vs_tg\"\nexport const TotalGoalsVsTotalGoalsWithDefenseFactor = \"tgdf_vs_tgdf\"\nexport const HomeGoalsVsAwayGoals = \"hg_vs_ag\"\nexport const HomeGoalsVsAwayGoalsWithDefenseFactor = \"hgdf_vs_agdf\"\n//export const TotalPointsVsTotalPoints = \"tp_vs_tp\"\n\nexport const getKeys = () => {     \n    return [\n        TotalGoalsVsTotalGoals,\n        TotalGoalsVsTotalGoalsWithDefenseFactor,\n        HomeGoalsVsAwayGoals,\n        HomeGoalsVsAwayGoalsWithDefenseFactor\n    ]\n}\n\nconst definitions = [\n    {\n        key: TotalGoalsVsTotalGoals,\n        short: \"t-t\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt.\"\n    },\n    {\n        key: TotalGoalsVsTotalGoalsWithDefenseFactor,\n        short: \"t-t*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    },    {\n        key: HomeGoalsVsAwayGoals,\n        short: \"h-a\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore.\"\n    },\n    {\n        key: HomeGoalsVsAwayGoalsWithDefenseFactor,\n        short: \"h-a*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    }\n]\n\nconst find = (key) => definitions.find(x=>x.key===key)\n\nexport const getDescription = (key) => {\n    const item = find(key)\n    return item ? item.description : \"\"\n}\n\nexport const getShort = (key) => {\n    const item = find(key)\n    return item ? item.short : \"\"\n}\n\nexport const getNextId = (currentId) => ++currentId % definitions.length\n\nexport const getKey = (currentId) => definitions[currentId].key","import {\n  getSelectedLeague,\n  getSelectedYear,\n  getSelectedMatchDay,\n} from '../reducers/selectors/uiSelector'\nimport {\n  getAllMatchs\n} from '../reducers/selectors/modelSelector'\nimport {\n  groupByArray,\n  sum\n} from '../utils/listUtils'\n\nimport * as stats from './statsType';\n\nconst getPoints = (gf, ga) => {\n  if (gf > ga) return 3\n  if (gf === ga) return 1\n  return 0\n}\n\nconst getHomePoints = (match) =>\n  getPoints(match.fullTimeHome, match.fullTimeAway)\nconst getAwayPoints = (match) =>\n  getPoints(match.fullTimeAway, match.fullTimeHome)\n\n\n  const sumFields = (teamInfo, key1, key2) => {\n    return !teamInfo ?\n      undefined :\n      teamInfo[key1] && teamInfo[key2] ?\n      teamInfo[key1] + teamInfo[key2] :\n      teamInfo[key1] ?\n      teamInfo[key1] :\n      teamInfo[key2]\n  }\n  \n  const tgf = (teamInfo) => {\n    return sumFields(teamInfo, 'hgf', 'agf')\n  }\n  \n  const tga = (teamInfo) => {\n    return sumFields(teamInfo, 'hga', 'aga')\n  }\n  \n  const tp = (teamInfo) => {\n    return sumFields(teamInfo, 'hp', 'ap')\n  }\n  \n  const tm = (teamInfo) => {\n    return sumFields(teamInfo, 'hm', 'am')\n  }\n\n\nexport const getSeasonInfo = (state) => {\n  const league = getSelectedLeague(state)\n  const year = getSelectedYear(state)\n  const matchDay = getSelectedMatchDay(state)\n  const allMatchs = getAllMatchs(state)\n\n  const previousMatchs = !allMatchs ? [] :\n    // @ts-ignore\n    allMatchs.filter(\n      (m) => m.year === year && m.league === league && m.isFinished &&\n      m.matchDayId < matchDay\n    )\n    \n    return aggregateSeasonInfo(previousMatchs)\n  }\n\nexport const aggregateSeasonInfo = (matchs) => {\n  const home = groupByArray(matchs, 'teamHomeId').map((x) => ({\n    team: x.key,\n    hgf: sum(x.values.map((y) => y.fullTimeHome)),\n    hga: sum(x.values.map((y) => y.fullTimeAway)),\n    hp: sum(x.values.map((y) => getHomePoints(y))),\n    hm: x.values.length,\n  }))\n  const away = groupByArray(matchs, 'teamAwayId').map((x) => ({\n    team: x.key,\n    agf: sum(x.values.map((y) => y.fullTimeAway)),\n    aga: sum(x.values.map((y) => y.fullTimeHome)),\n    ap: sum(x.values.map((y) => getAwayPoints(y))),\n    am: x.values.length,\n  }))\n  \n  const fullByTeam = groupByArray([...home, ...away], 'team')\n  const full = fullByTeam.map((x) =>\n    x.values.reduce((res, x) => ({ ...res,\n      ...x\n    }), {hgf:0, hga:0, hp:0, hm:0, agf:0, aga:0, ap:0, am:0})\n  )\n\n  const fullWithTotal = full.map(x=>{\n    var res = {...x}\n    res.tgf = tgf(x)\n    res.tga = tga(x)\n    res.tp = tp(x)\n    res.tm = tm(x)\n    return res    \n  })\n\n  const totalGA = fullWithTotal.reduce((res,x)=>{\n    var aggregate = { ...res };\n    aggregate.hga += x.hga;\n    aggregate.hm += x.hm;\n    aggregate.aga += x.aga;\n    aggregate.am += x.am;\n    aggregate.tga += x.tga;\n    aggregate.tm += x.tm;\n    return aggregate;\n  }, {hga:0, hm:0, aga:0, am:0, tga:0, tm:0})\n\n  const avgGA = {\n    hga: totalGA.hm > 0 ? totalGA.hga / totalGA.hm : undefined,\n    aga: totalGA.am > 0 ? totalGA.aga / totalGA.am : undefined,\n    tga: totalGA.tm > 0 ? totalGA.tga / totalGA.tm : undefined\n  }\n\n  const fullWithDefenseFactor = fullWithTotal.map(x => ({...x, \n    hdf: avgGA.hga ? (x.hga/x.hm) / avgGA.hga : 1.0,\n    adf: avgGA.aga ? (x.aga/x.am) / avgGA.aga : 1.0,\n    tdf: avgGA.tga ? (x.tga/x.tm) / avgGA.tga : 1.0\n    })\n  )\n\n  return fullWithDefenseFactor\n}\n\n\n\nconst getHG_AG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.hm ? infoHome.hgf / infoHome.hm : undefined\n  const goalsAway =\n    infoAway && infoAway.am ? infoAway.agf / infoAway.am : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getHGDF_AGDF_AVG = (infoHome, infoAway) => {\n  const goals = getHG_AG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.adf ? goals.home * infoAway.adf :undefined,\n    away: goals.away && infoHome.hdf ? goals.away * infoHome.hdf: undefined\n  }\n}\n\nconst getTG_TG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.tm ? infoHome.tgf / infoHome.tm : undefined\n  const goalsAway =\n    infoAway && infoAway.tm ? infoAway.tgf / infoAway.tm : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getTGDF_TGDF_AVG = (infoHome, infoAway) => {\n  const goals = getTG_TG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.tdf ? goals.home * infoAway.tdf :undefined,\n    away: goals.away && infoHome.tdf ? goals.away * infoHome.tdf :undefined,\n  }\n}\n\nconst getStats = (infoHome, infoAway, statsType) => {\n  switch (statsType) {\n    case stats.HomeGoalsVsAwayGoalsWithDefenseFactor:\n      return getHGDF_AGDF_AVG(infoHome, infoAway)\n    case stats.HomeGoalsVsAwayGoals:\n      return getHG_AG_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoalsWithDefenseFactor:\n      return getTGDF_TGDF_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoals:\n    default:\n      return getTG_TG_AVG(infoHome, infoAway)\n  }\n}\n\nexport const calcStats = (seasonInfo, teamHomeId, teamAwayId, stats) => {\n  const infoHome = seasonInfo.find((x) => x.team === teamHomeId)\n  const infoAway = seasonInfo.find((x) => x.team === teamAwayId)\n  return getStats(infoHome, infoAway, stats)\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '0.0')\nexport const formatStats = (stats, digits = 2) => {\n  return `${formatNumber(stats.home, digits)}:${formatNumber(\n    stats.away,\n    digits\n  )}`\n}","const faculty = (k) => {\n  let r = 1.0\n  for (let i = 1; i <= k; ++i) {\n    r *= i\n  }\n  return r\n}\n\nconst poissonProbability = (lambda, k) => {\n  return (Math.pow(lambda, k) * Math.exp(-lambda)) / faculty(k)\n}\n\nexport const calcLossProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    for (let j = i + 1; j < n; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcWinProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 1; i < n; ++i) {\n    for (let j = 0; j < i; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcTieProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    probSum += probs[i][i]\n  }\n  return probSum\n}\n\nexport const calcWinLossTieProbs = (hg, ag) => {\n  const probs = calcResultProbs(hg, ag)\n  return {\n    win: calcWinProbs(probs),\n    tie: calcTieProbs(probs),\n    loss: calcLossProbs(probs),\n  }\n}\n\nexport const calcResultProbs = (hg, ag, n = 20, minProb = 0.01) => {\n  const hgf = Math.max(minProb, hg || 0.0)\n  const agf = Math.max(minProb, ag || 0.0)\n\n  let result = []\n  for (let i = 0; i <= n; ++i) {\n    let row = []\n    for (let j = 0; j <= n; ++j) {\n      row.push(poissonProbability(hgf, i) * poissonProbability(agf, j))\n    }\n    result.push(row)\n  }\n  return result\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '-')\n\nexport const formatPercentage = (n, digits = 0) =>\n  n ? (n * 100.0).toFixed(digits) + '%' : '-'\n\nexport const formatProbs = (probs, n = 2) => {\n  return `${formatPercentage(probs.win, n)}/${formatPercentage(\n    probs.tie,\n    n\n  )}/${formatPercentage(probs.loss, n)}`\n}\n\nexport const formatRate = (n, digits = 1) =>\n  n ? Math.min(99.9, 1.0 / n).toFixed(digits) : '-'\n\nexport const getProbDescription = (hg, ag) => {\n  const results = calcResultProbs(hg, ag)\n  let content = ''\n  for (let i = 0; i <= 5; ++i) {\n    for (let j = 0; j <= 5; ++j) {\n      if (i + j > 6) continue\n      content += `<b>${i}:${j}</b> ${formatPercentage(results[i][j])}<br/>`\n    }\n  }\n  return `<div>${content}</div>`\n}\n","import React from 'react'\nimport './MatchProbabilityDetails.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\nimport _ from 'lodash'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\nexport class MatchProbabilityDetails extends React.Component {\n  \n  renderTop3 = (probs, numberOfGoals) => {\n    const probsList = []\n    numberOfGoals.forEach(x=>{\n      numberOfGoals.forEach(y=> {\n        probsList.push(({prob:probs[x][y], result:`${x}:${y}`}))\n      })\n    })\n    const sortedProbs = _.sortBy(probsList, x=>-x.prob); \n    return (<div className='row'>\n      <div className='col-2'>\n      <small><b>TOP 3</b></small>\n      </div>\n      {[0,1,2].map(x=> (\n      <div className='col-3'>\n      <small><b>{sortedProbs[x].result}</b> ({(sortedProbs[x].prob*100).toFixed(1)}%)</small>\n      </div>\n      ))}\n    </div>\n    )\n  }\n\n  renderPlusMinus = (probs, numberOfGoals) => {\n    const plusMinusList = {}\n    const max = {}\n    numberOfGoals.forEach(x=>{\n      numberOfGoals.forEach(y=> {\n        const diff = x-y\n        if (plusMinusList[diff] === undefined) {\n          plusMinusList[diff] = []\n        }\n        plusMinusList[diff].push(probs[x][y])\n        if (max[diff] === undefined) {\n          max[diff] = {prob:probs[x][y], result:`${x}:${y}`}\n        } else if (probs[x][y] > max[diff].prob) {\n          max[diff] = {prob:probs[x][y], result:`${x}:${y}`}\n        }\n      })\n    })\n    const range = Object.keys(plusMinusList).map(x=>parseInt(x)).sort((a,b)=>a-b)\n    const plusMinus = range.map(x=> ({diff:x, prob:_.sum(plusMinusList[x]), maxResult:max[x].result, maxProb:max[x].prob}))\n    \n    return (<>\n      <div className='row'>\n        <div className='col-2 text-center'><small><b>+/-</b></small></div>\n        <div className='col-3 text-right'><small><b>Wahrscheinlichkeit</b></small></div>\n        <div className='col-1'></div>\n        <div className='col-4 text-right'><small><b>Top-Ergebnis</b></small></div>\n      </div>\n      {plusMinus.filter(x=>x.prob>0.01).map(x=> (<div className='row' style={{backgroundColor: `hsl(360 100% ${100 - (x.prob*70.0)}%)`}}>\n        <div className='col-2 text-center'><small>{x.diff}</small></div>\n        <div className='col-3 text-right'><small>{(x.prob*100).toFixed(1)}%</small></div>\n        <div className='col-3 text-right'><small>{x.maxResult}</small></div>\n        <div className='col-1 text-right'><small>({(x.maxProb*100).toFixed(1)}%)</small></div>\n      </div>))}\n    </>)\n  }\n\n\n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 7, 0.01)\n    const numberOfGoals = [0,1,2,3,4,5,6]\n    const formatProb = (prob) => { return (prob*100).toFixed(0)};\n\n\n     return (\n      <>\n          {this.renderTop3(probs, numberOfGoals)}\n          <div className='row mt-3'> </div>\n          {this.renderPlusMinus(probs, numberOfGoals)}\n          <div className='row mt-3'>\n            <div className='col-1'></div>\n            <div className='col-9'>\n            <div className='d-flex flex-column p-0'>\n                <div className='d-flex flex-nowrap align-items-stretch'>\n                  <div className='p-2 text-center score-card'><small><b>[%]</b></small></div>\n                  {numberOfGoals.map((i) => (<div className='p-2 text-center score-card'><small><b>{i}</b></small></div>))}\n                </div>\n                {numberOfGoals.map((i) => (\n                    <div className='d-flex flex-nowrap align-items-stretch'>\n                        <div className='p-2 text-center score-card'><small><b>{i}</b></small></div>\n                        {numberOfGoals.map((j) => (\n                        <div className={`p-2 text-center score-card ${i===j?\"diagonal\":\"non-diagonal\"}`} style={{backgroundColor: `hsl(360 100% ${100 - (probs[i][j]*70.0)}%)`}}>\n                            <small>{formatProb(probs[i][j])}</small>\n                        </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n            </div>\n            </div>\n            </>\n     )    \n  }\n}","import React from 'react'\nimport './MatchDetails.css'\n\nexport class MatchDetails extends React.Component {\n    logoSize = 20\n\n  details(teamId, teams, seasonInfo, modelKey, isHomeTeam) {\n    const team = teams[teamId]\n    const info = seasonInfo.find(x=>x.team===teamId)\n    console.log(modelKey)\n    const total = [\"tg_vs_tg\", \"tgdf_vs_tgdf\"].includes(modelKey)\n    const home = [\"hg_vs_ag\", \"hgdf_vs_agdf\"].includes(modelKey) && isHomeTeam\n    const away = [\"hg_vs_ag\", \"hgdf_vs_agdf\"].includes(modelKey) && !isHomeTeam\n\n    return <div className='row'>\n        <div className='col-2'>\n            <img src={team.iconUrl} alt={team.name} \n                        height={this.logoSize}\n                        width={this.logoSize}/>\n        </div>\n        {!info && (<div className='col-10'><i>no data</i></div>)}\n        {info && (<>\n            <div className='col-1'>\n                <small>{info.tp}</small>\n            </div>\n            <div className=\"col-2\">\n                <small className={`${total ? 'bold' : ''}`}>{info.tgf}:{info.tga}</small>\n            </div>\n            <div className='col-1'>\n                <small>{info.hp}</small>\n            </div>\n            <div className='col-2'>\n                <small className={`${home ? 'bold' : ''}`}>{info.hgf}:{info.hga}</small>\n            </div>\n            <div className='col-1'>\n                <small>{info.ap}</small>\n            </div>\n            <div className='col-2'>\n                <small className={`${away ? 'bold' : ''}`}>{info.agf}:{info.aga}</small>\n            </div>\n        </>)} \n    </div>\n  }\n\n  render() {\n    const teams = this.props.teams;\n    const match = this.props.match;\n    const seasonInfo = this.props.seasonInfo;\n    const modelKey = this.props.modelKey;\n    if (!teams || !match || !seasonInfo) return <div>empty</div>\n    return <div className='container'>\n        <div className='row'>\n            <div className='col-2'><small>Team</small></div>\n            <div className='col-3'><small>Gesamt</small></div>\n            <div className='col-3'><small>Heim</small></div>\n            <div className='col-3'><small>Auswärts</small></div>\n        </div>\n        {this.details(match.teamHomeId, teams, seasonInfo, modelKey, true)}\n        {this.details(match.teamAwayId, teams, seasonInfo, modelKey, false)}\n    </div>\n  }\n}\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport './Match.css'\r\nimport { formatStats, calcStats } from '../stats/seasonInfo'\r\nimport {\r\n  formatProbs,\r\n  formatRate,\r\n  calcWinLossTieProbs,\r\n  formatPercentage,\r\n  getProbDescription,\r\n} from '../maths/probabilities'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button, Collapse } from 'reactstrap'\r\nimport { MatchProbabilityDetails } from './MatchProbabilityDetails'\r\nimport { MatchDetails } from './MatchDetails'\r\n\r\nconst formatProbOrRate = (showPercentage, value) =>\r\n  showPercentage ? formatPercentage(value) : formatRate(value)\r\n\r\nclass Match extends React.Component {\r\n  logoSize = 20\r\n  render() {\r\n\r\n\r\n    const match = this.props.match\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const modelKey = this.props.modelKey\r\n    const probabilityDetailsMatchId = this.props.probabilityDetailsMatchId;\r\n    const isProbabilityDetailsShown = match.id===probabilityDetailsMatchId;\r\n \r\n\r\n    const teamHome = teams[match.teamHomeId]\r\n    const teamAway = teams[match.teamAwayId]\r\n\r\n    const stats = calcStats(\r\n      seasonInfo,\r\n      match.teamHomeId,\r\n      match.teamAwayId,\r\n      modelKey\r\n    )\r\n    const digits = 1\r\n    const formatedStats = formatStats(stats, digits)\r\n    const probs = calcWinLossTieProbs(stats.home, stats.away)\r\n    const formatedProbs = formatProbs(probs)\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      <>\r\n      <div\r\n        className=\"row\"\r\n        key={match.id}\r\n        data-toggle=\"tooltip\"\r\n        title={\r\n          'aktualisiert: ' +\r\n          moment(match.lastUpdate).format('DD.MM.YY HH:mm:ss')\r\n        }\r\n      >\r\n        <div className=\"col-2 pr-0\">\r\n          <img\r\n            src={teamHome.iconUrl}\r\n            alt={teamHome.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n          <img\r\n            src={teamAway.iconUrl}\r\n            alt={teamAway.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n        </div>\r\n        <div className=\"col-1 pr-0\">\r\n          <small>\r\n            ({match.halfTimeHome}:{match.halfTimeAway})\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 pr-0\">\r\n          <small className={match.isFinished ? 'final ' : ''}>\r\n            {match.fullTimeHome}:{match.fullTimeAway}\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <Button size='sm' color=\"link\" onClick={()=>this.props.toggleProbabilityDetails(isProbabilityDetailsShown ? null: match.id)}>\r\n            <FontAwesomeIcon icon=\"angle-double-down\" color=\"gray\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-2 text-center pr-0\">\r\n          <small>\r\n            <i>{formatedStats}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.win)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.tie)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center pr-0\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.loss)}</i>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Collapse className='col-12' isOpen={isProbabilityDetailsShown}>\r\n          <MatchDetails match={match} teams={teams} seasonInfo={seasonInfo} modelKey={modelKey} />\r\n          <MatchProbabilityDetails stats={stats} />\r\n        </Collapse>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Match\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport Match from './Match'\r\nimport './MatchsPerDay.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass MatchsPerDay extends React.Component {\r\n  render() {\r\n    const statsTitle = this.props.statsTitle\r\n    const statsDescription = this.props.statsDescription\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      < >\r\n              <div className=\"row\" key=\"this.props.date\">\r\n                <div scope=\"col\" className=\"col-5 \">\r\n                  <small>\r\n                    {moment(this.props.date).format('ddd DD.MM HH:mm')}\r\n                  </small>\r\n                </div>\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-2 text-center\">\r\n                    <small>\r\n                      {statsTitle}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon icon=\"info-circle\" size=\"sm\" />\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>1</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>0</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>2</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\" />\r\n                )}\r\n              </div>\r\n              {this.props.matchs.map((m) => (\r\n                <Match\r\n                  match={m}\r\n                  teams={this.props.teams}\r\n                  seasonInfo={this.props.seasonInfo}\r\n                  key={m.id}\r\n                  showPercentage={showPercentage}\r\n                  modelKey={this.props.modelKey}\r\n                  probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n                  toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n                />\r\n              ))}\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchsPerDay\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Matchs extends React.Component {\r\n  render() {\r\n    const matchs = this.props.matchs\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const showPercentage = this.props.showPercentage\r\n    if (!matchs || matchs.length === 0 || !teams) return <div>empty</div>\r\n\r\n    const groupByMatchDay = groupByFunc(matchs, (x) =>\r\n      x.matchDateTime\r\n    )\r\n\r\n    // @ts-ignore\r\n    const groupedMatchs = Object.entries(groupByMatchDay)\r\n    sortByField(groupedMatchs, '0')\r\n\r\n    const selectedModelId = this.props.selectedModelId\r\n    const modelKey = getKey(selectedModelId)\r\n    const statsHeader = getShort(modelKey)\r\n    const statsDescription = getDescription(modelKey)\r\n    \r\n    return (\r\n      <div className=\"container-fluid schedule\">\r\n        {groupedMatchs.map((gm, i) => (\r\n          <MatchsPerDay\r\n            teams={teams}\r\n            seasonInfo={seasonInfo}\r\n            date={gm[0]}\r\n            matchs={gm[1]}\r\n            key={gm[0]}\r\n            statsTitle={i === 0 ? statsHeader : ''}\r\n            statsDescription={statsDescription}\r\n            modelKey={modelKey}\r\n            showPercentage={showPercentage}\r\n            probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n            toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Matchs\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Table extends React.Component {\r\n  logoSize = 20\r\n\r\n  render() {\r\n    const seasonInfo = this.props.seasonInfo\r\n    const teams = this.props.teams\r\n    const matchs = this.props.matchs\r\n    //const selectedModelId = this.props.selectedModelId\r\n\r\n    const relevantTeams = matchs.flatMap(x=>[x.teamHomeId, x.teamAwayId]);\r\n    const data = seasonInfo && seasonInfo.length ? seasonInfo : relevantTeams\r\n    .map(x => ({\r\n      team: x,\r\n      tp: 0,\r\n      tgf: 0,\r\n      tga: 0\r\n    }))\r\n\r\n    const rawData = data.map((x) => ({\r\n      ...x,\r\n      iconUrl: teams[x.team].iconUrl,\r\n      shortName: teams[x.team].shortName,\r\n    }))\r\n    \r\n    const table = sortByField(rawData, \"tp\").reverse()\r\n    return (\r\n      <table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Team</th>\r\n      <th scope=\"col\">P</th>\r\n      <th scope=\"col\">TG</th>\r\n      <th scope=\"col\">TA</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {table.map((team, index) => (<tr>\r\n      <td>          \r\n        <img\r\n            src={team.iconUrl}\r\n            alt={team.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n        />\r\n      </td>\r\n      <td>{team.tp}</td>\r\n      <td>{team.tgf}</td>\r\n      <td>{team.tga}</td>\r\n    </tr>))}\r\n  </tbody>\r\n</table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass ListNavigator extends Component {\r\n  onSelect(event) {\r\n    let node = event.target\r\n    while (!node.id) {\r\n      node = node.parentElement\r\n    }\r\n    this.props.onSelect(node.id)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.data) return <div />\r\n    const buttonStyles = this.props.buttonStyles ? this.props.buttonStyles : ''\r\n    const bgStyles = this.props.bgStyles ? this.props.bgStyles : ''\r\n\r\n    const data = this.props.data\r\n    const currentIndex = data.findIndex((x) => x.id === this.props.selected)\r\n    const selectedItem = data[currentIndex]\r\n    const nextIndex = currentIndex + 1\r\n    const prevIndex = currentIndex - 1\r\n    const nextId = nextIndex < data.length ? data[nextIndex].id : undefined\r\n    const prevId = prevIndex >= 0 ? data[prevIndex].id : undefined\r\n\r\n    return (\r\n      <div\r\n        className={`btn-group ${bgStyles}`}\r\n        role=\"group\"\r\n        aria-label=\"Button group with nested dropdown\"\r\n      >\r\n        <Button\r\n\r\n          id={prevId}\r\n          className={`btn btn-secondary ${buttonStyles}`}\r\n          disabled={prevId === undefined}\r\n          onClick={this.onSelect.bind(this)}\r\n        >\r\n          <FontAwesomeIcon icon=\"caret-left\" />\r\n        </Button>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <Button\r\n            id=\"btnGroupDrop1\"\r\n            className={`btn btn-secondary dropdown-toggle ${buttonStyles}`}\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {selectedItem ? selectedItem.name : this.props.selected}\r\n          </Button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {this.props.data.map((x) => (\r\n              <Button\r\n                className=\"dropdown-item\"\r\n                id={x.id}\r\n                key={x.id}\r\n                onClick={this.onSelect.bind(this)}\r\n              >\r\n                {x.name}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n          <Button\r\n            id={nextId}\r\n            className={`btn btn-secondary ${buttonStyles}`}\r\n            onClick={this.onSelect.bind(this)}\r\n            disabled={nextId === undefined}\r\n          >\r\n            <FontAwesomeIcon icon=\"caret-right\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ListNavigator\r\n","/******************* Actions ******************/\r\n\r\nexport const RequestLeagues = 'RequestLeagues'\r\nexport const RequestYears = 'RequestYears'\r\nexport const RequestTeams = 'RequestTeams'\r\nexport const RequestMatchDays = 'RequestMatchDays'\r\nexport const RequestMatchs = 'RequestMatchs'\r\nexport const ReceiveLeagues = 'ReceiveLeagues'\r\nexport const ReceiveYears = 'ReceiveYears'\r\nexport const ReceiveTeams = 'ReceiveTeams'\r\n\r\nexport const ReceiveMatchDays = 'ReceiveMatchDays'\r\nexport const ReceiveMatchs = 'ReceiveMatchs'\r\n\r\nexport const SelectMatchDay = 'SelectMatchDay'\r\nexport const SelectLeague = 'SelectLeague'\r\nexport const SelectYear = 'SelectYear'\r\n\r\nexport const StartInitializing = 'StartInitializing'\r\nexport const EndInitializing = 'EndInitializing'\r\n\r\nexport const StartRefreshMatchs = 'StartRefreshMatchs'\r\nexport const EndRefreshMatchs = 'EndRefreshMatchs'\r\n\r\nexport const SwitchMenu = 'SwitchMenu'\r\n\r\n/******** Clear **********/\r\nexport const clearSeason = 'ClearSeason'\r\nexport const clearAll = 'ClearAll'\r\n\r\nexport const ShowPercentage = 'ShowPercentage'\r\nexport const SwitchModel = 'SwitchModel'\r\nexport const ToggleProbabilityDetails = 'ToggleProbabilityDetails'\r\n","const leagues = [\r\n  {\r\n    id: 'bl1',\r\n    name: '1.Bundesliga',\r\n    key: 3005,\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  {\r\n    id: 'bl2',\r\n    name: '2.Bundesliga',\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  { id: 'bl3', name: '3.Bundesliga', years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015] },\r\n  { id: 'fifa18', name: 'WM18', years: [2018] },\r\n]\r\n\r\nexport default leagues\r\n","import leagues from './leagues'\r\n\r\nfunction getLeagues() {\r\n  return leagues.map((x) => {\r\n    return { id: x.id, name: x.name }\r\n  })\r\n}\r\n\r\nfunction getYears(leagueId) {\r\n  const league = leagues.find((x) => x.id === leagueId)\r\n  if (!league) return []\r\n  return league.years.map((y) => {\r\n    return { id: y, name: y, leagueId }\r\n  })\r\n}\r\n// new urls: https://api.openligadb.de/getmatchdata/bl1/2020/1\r\nconst openligaBaseUrl = 'https://api.openligadb.de'\r\nfunction getTeams(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailableteams/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\nfunction getMatchDays(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailablegroups/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchs(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getmatchdata/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchsLastChangeDate(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getlastchangedate/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nexport {\r\n  getTeams,\r\n  getLeagues,\r\n  getYears,\r\n  getMatchs,\r\n  getMatchDays,\r\n  getMatchsLastChangeDate,\r\n}\r\n","/****************** Map open liga db data ******************/\r\nfunction mapMatch(olMatch, league, year) {\r\n  const id = olMatch.matchID\r\n  const matchDateTime = olMatch.matchDateTime\r\n  const teamHomeId = olMatch.team1.teamId\r\n  const teamAwayId = olMatch.team2.teamId\r\n  const isFinished = olMatch.matchIsFinished\r\n  const matchDayId = olMatch.group.groupOrderID\r\n  const leagueKey = olMatch.leagueId\r\n  const lastUpdate = olMatch.lastUpdateDateTime\r\n  const halfTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Halbzeit\" || x.resultName === \"Halbzeitergebnis\"\r\n  )\r\n  const fullTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Endergebnis\"\r\n  )\r\n  const halfTimeHome = halfTimeResult ? halfTimeResult.pointsTeam1 : '-'\r\n  const halfTimeAway = halfTimeResult ? halfTimeResult.pointsTeam2 : '-'\r\n  const fullTimeHome = fullTimeResult ? fullTimeResult.pointsTeam1 : '-'\r\n  const fullTimeAway = fullTimeResult ? fullTimeResult.pointsTeam2 : '-'\r\n  return {\r\n    id,\r\n    teamHomeId,\r\n    teamAwayId,\r\n    matchDayId,\r\n    league,\r\n    leagueKey,\r\n    year,\r\n    lastUpdate,\r\n    matchDateTime,\r\n    isFinished,\r\n    halfTimeHome,\r\n    halfTimeAway,\r\n    fullTimeHome,\r\n    fullTimeAway,\r\n  }\r\n}\r\n\r\nfunction mapTeam(olTeam) {\r\n  const id = olTeam.teamId\r\n  const shortName = olTeam.shortName\r\n  const iconUrl = olTeam.teamIconUrl\r\n  const name = olTeam.teamName\r\n  return {\r\n    id,\r\n    shortName,\r\n    iconUrl,\r\n    name,\r\n  }\r\n}\r\n\r\nfunction mapTeamFromMatch(olMatch) {\r\n  const team1 = mapTeam(olMatch.team1)\r\n  const team2 = mapTeam(olMatch.team2)\r\n  return [team1, team2]\r\n}\r\n\r\nfunction mapTeamFromMatchs(olMatchs) {\r\n  let teams = {}\r\n  for (let i = 0; i < olMatchs.length; i++) {\r\n    const twoTeams = mapTeamFromMatch(olMatchs[i])\r\n    const t1 = twoTeams[0]\r\n    teams[t1.id] = t1\r\n    const t2 = twoTeams[1]\r\n    teams[t2.id] = t2\r\n  }\r\n  return teams\r\n}\r\n\r\nfunction mapMatchDay(olGroup, league, year) {\r\n  const id = parseInt(olGroup.groupOrderID, 10)\r\n  const name = olGroup.groupName\r\n  const key = parseInt(olGroup.groupID, 10)\r\n  return {\r\n    id,\r\n    name,\r\n    key,\r\n    league,\r\n    year\r\n  }\r\n}\r\n\r\nexport {\r\n  mapMatch,\r\n  mapMatchDay,\r\n  mapTeam,\r\n  mapTeamFromMatchs\r\n}","import {\r\n  prop,\r\n  map\r\n} from 'ramda'\r\nimport {\r\n  getAllMatchs,\r\n  getAllYearsByLeague,\r\n  getAllMatchDays,\r\n  getTeamsByLeagueAndYear,\r\n} from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport function getSelectedMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n\r\n  // @ts-ignore\r\n  return !allMatchs ? [] : allMatchs.filter(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}\r\nexport function getSelectedYears(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  return getAllYearsByLeague(state)[selectedLeague.toString()]\r\n}\r\n\r\nexport function getSelectedMatchDays(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n\r\n  const allMatchDays = getAllMatchDays(state)\r\n\r\n  // @ts-ignore\r\n  return allMatchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport const existsMatchDay = (state, matchDayId) => {\r\n  const matchDays = getSelectedMatchDays(state)\r\n  return !!matchDays.find((x) => x.id === matchDayId)\r\n}\r\n\r\nexport const existLeagues = (state) => {\r\n  const allLeagues = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allLeagues && allLeagues.length > 0\r\n}\r\n\r\nexport const existYears = (state, selectedLeague) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n\r\n  const yearsOfLeague = getAllYearsByLeague(state)[selectedLeague.toString()]\r\n  return yearsOfLeague && yearsOfLeague.length > 0\r\n}\r\n\r\nexport const existTeams = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const teamsByLeagueAndYear = getTeamsByLeagueAndYear(state)\r\n  // @ts-ignore\r\n  const relevantTeams = teamsByLeagueAndYear.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantTeams && relevantTeams.length > 0\r\n}\r\n\r\nexport const existMatchDays = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const matchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  const relevantDay = matchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantDay && relevantDay.length > 0\r\n}\r\n\r\nexport const getLatestUpdate = (matchs) => {\r\n  if (!matchs || matchs.length === 0) return undefined\r\n  const lastUpdates = map(prop('lastUpdate'))(matchs)\r\n    .sort()\r\n    .reverse()\r\n  return lastUpdates[0]\r\n}","import * as actions from './actions'\r\nimport * as statsType from '../stats/statsType'\r\nimport * as service from '../services'\r\nimport * as mapper from '../services/mapOpenLigaDB'\r\nimport {\r\n  existsMatchDay,\r\n  existLeagues,\r\n  existYears,\r\n  existTeams,\r\n  existMatchDays,\r\n  getSelectedYears,\r\n  getSelectedMatchDays,\r\n  getSelectedMatchs,\r\n  getLatestUpdate,\r\n} from '../utils/filter'\r\nimport {\r\n  getSelectedMatchDay,\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  dictionarize\r\n} from '../utils/listUtils'\r\nimport {\r\n  getAllLeagues\r\n} from '../reducers/selectors/modelSelector'\r\n\r\n/******************* SELECT in UI ******************/\r\n\r\nfunction selectMatchDay(state, selectedMatchDay) {\r\n  if (!existsMatchDay(state, selectedMatchDay))\r\n    selectedMatchDay = getSelectedMatchDay(state)\r\n  return {\r\n    type: actions.SelectMatchDay,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction selectLeague(selectedLeague) {\r\n  return {\r\n    type: actions.SelectLeague,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction selectYear(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.SelectYear,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\n/***************** MATCHDAYS  *********************/\r\n\r\nfunction requestMatchDays(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestMatchDays,\r\n    isLoadingMatchDays: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveMatchDays(selectedLeague, selectedYear, json) {\r\n  return {\r\n    type: actions.ReceiveMatchDays,\r\n    isLoadingMatchDays: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    matchDays: json.map((x) =>\r\n      mapper.mapMatchDay(x, selectedLeague, selectedYear)\r\n    ),\r\n  }\r\n}\r\n\r\nfunction fetchMatchDays(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchDays(selectedLeague, selectedYear))\r\n    return service\r\n      .getMatchDays(selectedLeague, selectedYear)\r\n      .then((json) =>\r\n        dispatch(receiveMatchDays(selectedLeague, selectedYear, json))\r\n      )\r\n  }\r\n}\r\n\r\n/***************** MATCHS  *********************/\r\n\r\nfunction requestMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return {\r\n    type: actions.RequestMatchs,\r\n    isLoadingMatchs: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json) {\r\n  const teams = mapper.mapTeamFromMatchs(json)\r\n  return {\r\n    type: actions.ReceiveMatchs,\r\n    isLoadingMatchs: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n    matchs: json.map((x) => mapper.mapMatch(x, selectedLeague, selectedYear)),\r\n    teams,\r\n  }\r\n}\r\n\r\nfunction fetchMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n    return service\r\n      .getMatchs(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) =>\r\n        dispatch(\r\n          receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json)\r\n        )\r\n      )\r\n  }\r\n}\r\n\r\nfunction refreshMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  if (!selectedLeague || !selectedYear || !selectedYear) return\r\n\r\n  return function (dispatch) {\r\n    dispatch(startRefreshMatchs())\r\n    return service\r\n      .getMatchsLastChangeDate(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) => {\r\n        if (updateMatchsRequired(state, json)) {\r\n          fetchMatchs(selectedLeague, selectedYear, selectedMatchDay)(\r\n            dispatch\r\n          ).then((x) => dispatch(endRefreshMatchs()))\r\n        } else {\r\n          dispatch(endRefreshMatchs())\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nfunction updateMatchsRequired(state, date) {\r\n  console.log(state, date)  \r\n  const matchs = getSelectedMatchs(state)\r\n  const lastUpdate = getLatestUpdate(matchs)\r\n  return !lastUpdate || lastUpdate < date\r\n}\r\n\r\nfunction startRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: true,\r\n  }\r\n}\r\n\r\nfunction endRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: false,\r\n  }\r\n}\r\n\r\n/***************** TEAMS  *********************/\r\n\r\nfunction requestTeams(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestTeams,\r\n    isLoadingTeams: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveTeams(selectedLeague, selectedYear, json) {\r\n  const teamData = json.map((x) => mapper.mapTeam(x))\r\n  const teams = dictionarize(teamData)\r\n  const teamsByLeagueAndYear = teamData.map((x) => ({\r\n    teamId: x.id,\r\n    league: selectedLeague,\r\n    year: selectedYear,\r\n  }))\r\n\r\n  return {\r\n    type: actions.ReceiveTeams,\r\n    isLoadingTeams: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    teams,\r\n    teamsByLeagueAndYear,\r\n  }\r\n}\r\n\r\nfunction fetchTeams(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestTeams(selectedLeague, selectedYear))\r\n    const promise = service.getTeams(selectedLeague, selectedYear)\r\n    return (\r\n      promise\r\n      //.then(\r\n      // response => response.json()\r\n      //error => console.log('An error occurred.',   error)\r\n      //)\r\n      .then((json) =>\r\n        dispatch(receiveTeams(selectedLeague, selectedYear, json))\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\n/***************** LEAGUES  *********************/\r\n\r\nfunction requestLeagues() {\r\n  return {\r\n    type: actions.RequestLeagues,\r\n    isLoadingLeagues: true\r\n  }\r\n}\r\n\r\nfunction receiveLeagues(json) {\r\n  return {\r\n    type: actions.ReceiveLeagues,\r\n    isLoadingLeagues: false,\r\n    leagues: json.map((x) => x),\r\n  }\r\n}\r\n\r\nfunction fetchLeagues() {\r\n  return function (dispatch) {\r\n    dispatch(requestLeagues())\r\n    const leagues = service.getLeagues()\r\n    dispatch(receiveLeagues(leagues))\r\n  }\r\n}\r\n\r\n/***************** YEARS  *********************/\r\n\r\nfunction requestYears(selectedLeague) {\r\n  return {\r\n    type: actions.RequestYears,\r\n    isLoadingYears: true,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction receiveYears(selectedLeague, json) {\r\n  const years = json.map((x) => x)\r\n  let yearsByLeague = {}\r\n  yearsByLeague[selectedLeague] = years\r\n  return {\r\n    type: actions.ReceiveYears,\r\n    selectedLeague: selectedLeague,\r\n    isLoadingYears: false,\r\n    yearsByLeague,\r\n  }\r\n}\r\n\r\nfunction fetchYears(selectedLeague) {\r\n  if (selectedLeague === undefined)\r\n    throw new Error('selectedLeague is undefined')\r\n\r\n  return function (dispatch) {\r\n    dispatch(requestYears(selectedLeague))\r\n    const years = service.getYears(selectedLeague)\r\n    dispatch(receiveYears(selectedLeague, years))\r\n  }\r\n}\r\n\r\n/***************** INIT  *********************/\r\n\r\nfunction fetchInitial(store) {\r\n  return function (dispatch) {\r\n    dispatch(startInitializing())\r\n\r\n    let state = store.getState()\r\n    if (!existLeagues(state)) {\r\n      fetchLeagues()(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var league = getAllLeagues(state)[0]\r\n      dispatch(selectLeague(league.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedLeague = getSelectedLeague(state)\r\n    if (!existYears(state, selectedLeague)) {\r\n      fetchYears(selectedLeague)(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var year = getSelectedYears(state)[0]\r\n      dispatch(selectYear(selectedLeague, year.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedYear = getSelectedYear(state)\r\n    if (!existTeams(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchTeams(selectedLeague, selectedYear))\r\n    }\r\n\r\n    if (!existMatchDays(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchMatchDays(selectedLeague, selectedYear)).then(() => {\r\n        let state = store.getState()\r\n        const selectedMatchDay = getSelectedMatchDay(state)\r\n        dispatch(fetchMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n      })\r\n    } else {\r\n      const matchDay = getSelectedMatchDays(state)[0]\r\n      dispatch(selectMatchDay(state, matchDay.id))\r\n    }\r\n    dispatch(endInitializing())\r\n  }\r\n}\r\n\r\nconst startInitializing = () => ({\r\n  type: actions.StartInitializing,\r\n  isInitializing: true,\r\n})\r\nconst endInitializing = () => ({\r\n  type: actions.EndInitializing,\r\n  isInitializing: false,\r\n})\r\n\r\n/* ----------- Menu ----------- */\r\nconst switchMenu = (id) => ({\r\n  type: actions.SwitchMenu,\r\n  menuId: id,\r\n})\r\n\r\n/* ----------- Clear ----------- */\r\n\r\nconst clearAll = () => ({\r\n  type: actions.clearAll,\r\n})\r\n\r\nconst clearSeason = (league, year) => ({\r\n  type: actions.clearSeason,\r\n  payload: {\r\n    league,\r\n    year\r\n  },\r\n})\r\n\r\n\r\n/* ----------- Visualize ----------- */\r\n\r\nconst showPercentage = (flag) => ({\r\n  type: actions.ShowPercentage,\r\n  payload: flag\r\n})\r\n\r\nconst switchModel = (selectedModelId) => ({\r\n  type: actions.SwitchModel,\r\n  payload: statsType.getNextId(selectedModelId)\r\n})\r\n\r\nconst toggleProbabilityDetails = (matchId) => ({\r\n  type: actions.ToggleProbabilityDetails,\r\n  payload: matchId\r\n})\r\n\r\nexport {\r\n  clearAll,\r\n  clearSeason,\r\n  switchMenu,\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  refreshMatchs,\r\n  showPercentage,\r\n  switchModel,\r\n  toggleProbabilityDetails,\r\n}","import {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  getAllMatchDays,\r\n  getAllMatchs,\r\n} from '../reducers/selectors/modelSelector'\r\n\r\nexport function areSelectedMatchDaysPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const allMatchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  return allMatchDays.find(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport function areSelectedMatchsPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allMatchs.find(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}","import {\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  switchMenu,\r\n} from './ActionBuilder'\r\nimport {\r\n  areSelectedMatchDaysPresent,\r\n  areSelectedMatchsPresent,\r\n} from '../utils/storeHelpers'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\n/******************* ActionBuilder with store ******************/\r\nconst dispatchFetchTeams = function(store, league, year) {\r\n  return store.dispatch(fetchTeams(league, year))\r\n}\r\n\r\nconst dispatchFetchMatchs = function(store, league, year, matchDay) {\r\n  return store.dispatch(fetchMatchs(league, year, matchDay))\r\n}\r\n\r\nconst dispatchFetchMatchDays = function(store, league, year) {\r\n  return store.dispatch(fetchMatchDays(league, year))\r\n}\r\n\r\nconst dispatchFetchInitial = function(store) {\r\n  return store.dispatch(fetchInitial(store))\r\n}\r\n\r\nconst dispatchFetchLeagues = function(store) {\r\n  return store.dispatch(fetchLeagues())\r\n}\r\n\r\nconst dispatchFetchYears = function(store, league) {\r\n  return store.dispatch(fetchYears(league))\r\n}\r\n\r\nconst dispatchSelectMatchDay = function(store, matchDay) {\r\n  return store.dispatch(selectMatchDay(store.getState(), matchDay))\r\n}\r\n\r\nconst dispatchSelectLeague = function(store, league) {\r\n  return store.dispatch(selectLeague(league))\r\n}\r\n\r\nconst dispatchSelectYear = function(store, league, year) {\r\n  return store.dispatch(selectYear(league, year))\r\n}\r\n\r\nconst updateMatchDaysIfNecessary = (store) => {\r\n  let state = store.getState()\r\n  if (!areSelectedMatchDaysPresent(store)) {\r\n    state = store.getState()\r\n    dispatchFetchMatchDays(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state)\r\n    )\r\n  }\r\n  state = store.getState()\r\n  let selectedMatchDay = getSelectedMatchDay(state)\r\n  selectedMatchDay = selectedMatchDay ? selectedMatchDay : 1\r\n  dispatchSelectMatchDay(store, selectedMatchDay)\r\n\r\n  if (!areSelectedMatchsPresent(store)) {\r\n    const state = store.getState()\r\n    dispatchFetchMatchs(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state),\r\n      getSelectedMatchDay(state)\r\n    )\r\n  }\r\n}\r\n\r\nconst dispatchSwitchMenu = (store, id) => store.dispatch(switchMenu(id))\r\n\r\nexport {\r\n  dispatchSwitchMenu,\r\n  dispatchFetchInitial,\r\n  dispatchFetchLeagues,\r\n  dispatchFetchTeams,\r\n  dispatchFetchMatchDays,\r\n  dispatchFetchMatchs,\r\n  dispatchFetchYears,\r\n  dispatchSelectMatchDay,\r\n  dispatchSelectLeague,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport ListNavigator from './ListNavigator'\r\n\r\nimport {\r\n  dispatchFetchMatchs,\r\n  dispatchSelectMatchDay,\r\n} from '../actions/ActionBuilderWithStore'\r\n\r\nimport { areSelectedMatchsPresent } from '../utils/storeHelpers'\r\nimport { getSelectedMatchDays } from '../utils/filter'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nclass MatchdayNavigator extends Component {\r\n  onSelect(id) {\r\n    const store = this.props.store\r\n    dispatchSelectMatchDay(store, parseInt(id, 10))\r\n    this.updateMatchs()\r\n  }\r\n\r\n  updateMatchs() {\r\n    const store = this.props.store\r\n    if (!areSelectedMatchsPresent(store)) {\r\n      const state = store.getState()\r\n      dispatchFetchMatchs(\r\n        store,\r\n        getSelectedLeague(state),\r\n        getSelectedYear(state),\r\n        getSelectedMatchDay(state)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantMatchDays = getSelectedMatchDays(state)\r\n    const selectedMatchDay = getSelectedMatchDay(state)\r\n    return (\r\n      <ListNavigator\r\n        data={relevantMatchDays}\r\n        selected={selectedMatchDay}\r\n        onSelect={this.onSelect.bind(this)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchdayNavigator\r\n","import { connect } from 'react-redux'\r\nimport { RefreshButton } from '../components/RefreshButton'\r\nimport { refreshMatchs } from '../actions/ActionBuilder'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false,\r\n  isUpdating: state.ui.isRefreshingMatchs,\r\n  state,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClick: (state) => {\r\n      console.log('refresh')\r\n      dispatch(refreshMatchs(state))\r\n    },\r\n  }\r\n}\r\n\r\nexport const RefreshCurrentMatchDayButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RefreshButton)\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const RefreshButton = ({ onClick, disabled, isUpdating, state }) => {\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={() => onClick(state)}\r\n      disabled={disabled && !isUpdating}\r\n    >\r\n      <FontAwesomeIcon icon=\"sync\" spin={isUpdating} />\r\n    </Button>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { switchModel } from '../actions/ActionBuilder';\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"sliders-h\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(switchModel(ownProps.selectedModelId)) \r\n    }\r\n  }\r\n}\r\n\r\nexport const MatchDayOptionsButton = connect(mapStateToProps, mapDispatchToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  onClick: () => {\r\n    console.log('refresh')\r\n  },\r\n  disabled: true,\r\n})\r\n\r\nexport const MatchDayViewSettings = connect(mapStateToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport {\r\n  getIsInitializing,\r\n  getIsLoadingLeagues,\r\n  getIsLoadingYears,\r\n  getIsLoadingAllMatchDays,\r\n  getIsLoadingTeams,\r\n  getIsLoadingMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport default class LoadingPage extends React.Component {\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsInitializing(state)) {\r\n      return <h2>Intializing...</h2>\r\n    }\r\n    if (getIsLoadingLeagues(state)) {\r\n      return <h2>Loading Leagues...</h2>\r\n    }\r\n    if (getIsLoadingYears(state)) {\r\n      return <h2>Loading Years...</h2>\r\n    }\r\n    if (getIsLoadingAllMatchDays(state)) {\r\n      return <h2>Loading Matchdays...</h2>\r\n    }\r\n    if (getIsLoadingTeams(state)) {\r\n      return <h2>Loading Teams...</h2>\r\n    }\r\n    if (getIsLoadingMatchDay(state)) {\r\n      return <h2>Loading Matchs...</h2>\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const IconButton = ({ icon, disabled, handleClick }) => {\r\n  return (\r\n    <Button color='link' onClick={handleClick} disabled={disabled}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </Button>\r\n  )\r\n}\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearAll } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleClick: () => {\r\n    dispatch(clearAll())\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  icon: 'trash-alt',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearAllButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearAllButton\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearSeason } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  handleClick: () => {\r\n    dispatch(clearSeason(ownProps.league, ownProps.year))\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  icon: 'trash',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearSeasonButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearSeasonButton\r\n","import { groupByArray, sortByField } from './listUtils'\r\n\r\nconst getTeamCount = (state) => {\r\n  return Object.keys(state.model.teams).length\r\n}\r\n\r\nconst getSeasonsCount = (state) => {\r\n  return groupByArray(state.model.matchs, (x) => x.league).map((x) => ({\r\n    league: x.key,\r\n    name: state.model.leagues.find((y) => y.id === x.key).name,\r\n    seasons: sortByField(\r\n      groupByArray(x.values, (y) => y.year).map((z) => ({\r\n        year: z.key,\r\n        count: groupByArray(z.values, (z1) => z1.matchDayId).length,\r\n      })),\r\n      'year'\r\n    ),\r\n  }))\r\n}\r\n\r\nexport const getStorageStats = (state) => ({\r\n  teamCount: getTeamCount(state),\r\n  leagues: getSeasonsCount(state),\r\n})\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ClearAllButton from './ClearAllButton'\r\nimport ClearSeasonButton from './ClearSeasonButton'\r\nimport { getStorageStats } from '../../utils/stateStats'\r\n\r\nconst renderSeasonRow = (league, year, count) => {\r\n  return (\r\n    <div className=\"storage-row\" key={`${league}_${year}`}>\r\n      {year} ({count}) <ClearSeasonButton league={league} year={year} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StorageTemplate = ({ teamCount, leagues }) => {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Lokaler Speicher <ClearAllButton />\r\n      </h3>\r\n      <div className=\"storage-header\">Allgemeine Informationen</div>\r\n      <div className=\"storage-row\">Mannschaften ({teamCount})</div>\r\n      <div className=\"storage-header\">Ligen</div>\r\n      <div>{leagues.count}</div>\r\n      {leagues.map((l) => (\r\n        <div key={l.league}>\r\n          <div className=\"storage-sub-header\">{l.name}</div>\r\n          {l.seasons.map((s) => renderSeasonRow(l.league, s.year, s.count))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => getStorageStats(state)\r\n\r\nconst Storage = connect(mapStateToProps)(StorageTemplate)\r\n\r\nexport default Storage\r\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\n\nexport const PercentageButton = ({ onClick, disabled, state }) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"btn btn-secondary\"\n      data-toggle=\"button\"\n      aria-pressed={state.ui.showPercentage}\n      onClick={() => onClick(state)}\n      disabled={disabled}\n    >\n      <FontAwesomeIcon icon=\"percentage\" />\n    </Button>\n  )\n}\n\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport './App.css'\r\n\r\nimport Matchs from './Matchs'\r\nimport Table from './Table'\r\nimport MatchdayNavigator from '../components/MatchdayNavigator'\r\n\r\nimport { dispatchFetchInitial } from '../actions/ActionBuilderWithStore'\r\nimport { getSelectedMatchs } from '../utils/filter'\r\nimport { getIsLoading } from '../reducers/selectors/uiSelector'\r\nimport { getAllTeams } from '../reducers/selectors/modelSelector'\r\nimport { RefreshCurrentMatchDayButton } from './RefreshCurrentMatchDayButton'\r\nimport { MatchDayOptionsButton } from './MatchDayOptionsButton'\r\nimport { MatchDayViewSettings } from './MatchDayViewSettings'\r\n\r\nimport LoadingPage from './LoadingPage'\r\nimport Storage from './Storage'\r\nimport { getSeasonInfo } from '../stats/seasonInfo'\r\nimport { PercentageButton } from '../components/PercentageButton'\r\n\r\nimport * as actionBuilder from '../actions/ActionBuilder'\r\n\r\nclass App extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const store = this.props.store\r\n    dispatchFetchInitial(store)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsLoading(state)) return <LoadingPage />\r\n    if (state.ui.menuId === 'storage') return <Storage />\r\n\r\n    console.log('render normal')\r\n    const relevantMatchs = getSelectedMatchs(state)\r\n    const teams = getAllTeams(state)\r\n    const seasonInfo = getSeasonInfo(state)\r\n    const showPercentage = state.ui.showPercentage\r\n    const selectedModelId = state.ui.selectedModelId\r\n    const probabilityDetailsMatchId = state.ui.probabilityDetailsMatchId\r\n    return (\r\n      <div className=\"container.fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className=\"btn-toolbar\"\r\n            role=\"toolbar\"\r\n            aria-label=\"Toolbar with button groups\"\r\n          >\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayViewSettings />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayOptionsButton selectedModelId={state.ui.selectedModelId} />\r\n            </div>\r\n\r\n            <MatchdayNavigator store={store} />\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <PercentageButton\r\n                state={state}\r\n                onClick={(s) =>\r\n                  this.props.store.dispatch(\r\n                    actionBuilder.showPercentage(!s.ui.showPercentage)\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <RefreshCurrentMatchDayButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 no-pad-right\">\r\n                <Matchs\r\n                  matchs={relevantMatchs}\r\n                  teams={teams}\r\n                  seasonInfo={seasonInfo}\r\n                  showPercentage={showPercentage}\r\n                  selectedModelId={selectedModelId}\r\n                  probabilityDetailsMatchId={probabilityDetailsMatchId}\r\n              toggleProbabilityDetails={(matchId) => { \r\n                this.props.store.dispatch(\r\n                  actionBuilder.toggleProbabilityDetails(matchId)\r\n                )  }}\r\n            />\r\n              </div>\r\n              <div className=\"col-md-3\">\r\n                <Table \r\n                  teams={teams}\r\n                  seasonInfo={seasonInfo}\r\n                  matchs={relevantMatchs}\r\n                  selectedModelId={selectedModelId}\r\n                  />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport {\r\n  dispatchSelectLeague,\r\n  dispatchFetchYears,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n  dispatchSwitchMenu,\r\n} from '../actions/ActionBuilderWithStore'\r\nimport ListNavigator from './ListNavigator'\r\nimport { getSelectedYears } from '../utils/filter'\r\nimport { getAllLeagues } from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass Navbar extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async leagueChange(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, 'matchs')\r\n    dispatchSelectLeague(store, event.target.id)\r\n    dispatchFetchYears(store, event.target.id)\r\n\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  async yearChange(id) {\r\n    const store = this.props.store\r\n    let state = store.getState()\r\n    const year = parseInt(id, 10)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    dispatchSelectYear(store, selectedLeague, year)\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  selectMenu(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, event.target.id)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantYears = getSelectedYears(state)\r\n    const leagues = getAllLeagues(state)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    const selectedYear = getSelectedYear(state)\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {selectedLeague}\r\n        </a>\r\n        <ListNavigator\r\n          buttonStyles={'btn-sm btn-light'}\r\n          bgStyles={'btn-light'}\r\n          selected={selectedYear}\r\n          data={relevantYears}\r\n          onSelect={this.yearChange.bind(this)}\r\n        />\r\n        <Button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <span className=\"navbar-text\">\r\n            <FontAwesomeIcon icon=\"futbol\" />\r\n            &nbsp;\r\n            <b>Fußball</b>\r\n          </span>\r\n          <ul className=\"navbar-nav mr-auto\" key=\"Football\">\r\n            {leagues.map((l) => (\r\n              <li\r\n                className={`nav-item ${\r\n                  l.id === selectedLeague ? 'active' : ''\r\n                }`}\r\n                key={l.id}\r\n              >\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id={l.id}\r\n                  onClick={this.leagueChange.bind(this)}\r\n                >\r\n                  {l.name}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <span className=\"navbar-text\">\r\n            <b>Einstellungen</b>\r\n            <ul className=\"navbar-nav mr-auto\" key=\"Settings\">\r\n              <li className={`nav-item`} key=\"storage\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id=\"storage\"\r\n                  onClick={this.selectMenu.bind(this)}\r\n                >\r\n                  Speicher\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nexport default Navbar\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <p className=\"text-center font-italic\">\r\n          <span className=\"badge badge-dark\">yaspp</span>\r\n          &nbsp; yet another sports page\r\n        </p>\r\n        <Navbar store={this.props.store} />\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Footer.css'\r\nimport { getSelectedMatchs, getLatestUpdate } from '../utils/filter'\r\nimport { formatUpdateDate } from '../utils/dateFormat'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lastUpdate: getLatestUpdate(getSelectedMatchs(state)),\r\n})\r\n\r\nconst FooterTemplate = ({ lastUpdate }) => (\r\n  <footer>\r\n    <hr />\r\n    <div className=\"row\">\r\n      <div className=\"col self-align-start\">\r\n        <small>\r\n          <i>aktualisiert</i> {formatUpdateDate(lastUpdate)}\r\n        </small>\r\n      </div>\r\n      <div className=\"col self-align-end text-right\">\r\n        <small>\r\n          <i>\r\n            powered by <a href=\"https://www.openligadb.de\">Openliga DB</a>\r\n          </i>\r\n        </small>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nconst Footer = connect(mapStateToProps)(FooterTemplate)\r\nexport default Footer\r\n","import moment from 'moment'\r\n\r\nexport function formatUpdateDate(lastUpdate) {\r\n  const lastUpdateDate = moment(lastUpdate)\r\n  const now = moment()\r\n  var dt = moment.duration(lastUpdateDate.diff(now))\r\n\r\n  return dt.asYears() > -1\r\n    ? dt.humanize(true)\r\n    : lastUpdateDate.format('DD.MM.YY HH:mm')\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport App from './parts/App'\r\nimport Header from './parts/Header'\r\nimport Footer from './parts/Footer'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport * as icons from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(icons.faSync)\r\nlibrary.add(icons.faSlidersH)\r\nlibrary.add(icons.faTrashAlt)\r\nlibrary.add(icons.faTrash)\r\nlibrary.add(icons.faCaretLeft)\r\nlibrary.add(icons.faCaretRight)\r\nlibrary.add(icons.faFutbol)\r\nlibrary.add(icons.faAngleDoubleDown)\r\nlibrary.add(icons.faInfo)\r\nlibrary.add(icons.faInfoCircle)\r\nlibrary.add(icons.faPercentage)\r\nlibrary.add(icons.faEllipsisV)\r\nlibrary.add(icons.faEllipsisH)\r\nlibrary.add(icons.faBars)\r\nlibrary.add(icons.faColumns)\r\nlibrary.add(icons.faTable)\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    const store = this.props.store\r\n    return (\r\n      <div>\r\n        <Header store={store} />\r\n        <App store={store} />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Root\r\n","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nconst initialState = {\r\n  menuId: '',\r\n  selectedLeague: '',\r\n  selectedYear: '',\r\n  selectedMatchDay: 0,\r\n\r\n  isInitializing: false,\r\n  isLoadingLeagues: false,\r\n  isLoadingYears: false,\r\n  isLoadingTeams: false,\r\n  isLoadingAllMatchDays: false,\r\n  isLoadingMatchDay: false,\r\n  isRefreshingMatchs: false,\r\n\r\n  showPercentage: false,\r\n  selectedModelId: 0,\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  switch (action.type) {\r\n    case actions.SelectMatchDay:\r\n      {\r\n        return {\r\n          ...state,\r\n          selectedMatchDay: action.selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.SelectLeague:\r\n      {\r\n        const selectedLeague = action.selectedLeague\r\n        return {\r\n          ...state,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.SelectYear:\r\n      {\r\n        const selectedYear = action.selectedYear\r\n        return {\r\n          ...state,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.RequestLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeague\r\n        return { ...state,\r\n          isLoadingLeagues\r\n        }\r\n      }\r\n    case actions.RequestYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        return { ...state,\r\n          isLoadingYears\r\n        }\r\n      }\r\n    case actions.RequestTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.RequestMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        return { ...state,\r\n          isLoadingMatchDays\r\n        }\r\n      }\r\n    case actions.RequestMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return { ...state,\r\n          isLoadingMatchs\r\n        }\r\n      }\r\n    case actions.ReceiveLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeagues\r\n        const selectedLeague = action.leagues[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingLeagues,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.ReceiveYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        const years = action.yearsByLeague ?\r\n          action.yearsByLeague[action.selectedLeague] :\r\n          undefined\r\n        const selectedYear = years && years.length > 0 ? years[0].id : undefined\r\n        return {\r\n          ...state,\r\n          isLoadingYears,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.ReceiveTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.ReceiveMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        const selectedMatchDay = action.matchDays[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingMatchDays,\r\n          selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.ReceiveMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return {\r\n          ...state,\r\n          isLoadingMatchs,\r\n        }\r\n      }\r\n    case actions.StartInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.EndInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.StartRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.EndRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.SwitchMenu:\r\n      {\r\n        return { ...state,\r\n          menuId: action.menuId\r\n        }\r\n      }\r\n    case actions.ShowPercentage:\r\n      {\r\n        return { ...state,\r\n          showPercentage: action.payload\r\n        }\r\n      }\r\n    case actions.SwitchModel:\r\n      {\r\n        return { ...state,\r\n          selectedModelId: action.payload\r\n        }\r\n      }\r\n    case actions.ToggleProbabilityDetails:\r\n      {\r\n        return { ...state,\r\n          probabilityDetailsMatchId: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nexport const initialState = {\r\n  leagues: [],\r\n  yearsByLeague: {},\r\n  teams: {},\r\n  matchDays: [],\r\n  matchs: [],\r\n  teamsByLeagueAndYear: [],\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const modelReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  console.log(action)\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case actions.ReceiveLeagues: {\r\n      const leagues = [...action.leagues]\r\n      return {\r\n        ...state,\r\n        leagues,\r\n      }\r\n    }\r\n    case actions.ReceiveYears: {\r\n      const yearsByLeague = { ...state.yearsByLeague, ...action.yearsByLeague }\r\n      return {\r\n        ...state,\r\n        yearsByLeague,\r\n      }\r\n    }\r\n    case actions.ReceiveTeams: {\r\n      const teams = {\r\n        ...state.teams,\r\n        ...action.teams,\r\n      }\r\n      const teamsByLeagueAndYear = [\r\n        ...state.teamsByLeagueAndYear,\r\n        ...action.teamsByLeagueAndYear,\r\n      ]\r\n      return { ...state, teams, teamsByLeagueAndYear }\r\n    }\r\n    case actions.ReceiveMatchDays: {\r\n      const matchDays = [...state.matchDays, ...action.matchDays]\r\n\r\n      return {\r\n        ...state,\r\n        matchDays,\r\n      }\r\n    }\r\n    case actions.ReceiveMatchs: {\r\n      const teams = { ...state.teams, ...action.teams }\r\n\r\n      const matchDict = state.matchs.reduce((res,x) => {\r\n        res[x.id]=x\r\n        return res\r\n      }, {})\r\n      \r\n      for (let i=0;i<action.matchs.length;++i) {\r\n        const match = action.matchs[i]\r\n        matchDict[match.id]=match\r\n      }\r\n      const matchs = Object.values(matchDict)\r\n\r\n      return {\r\n        ...state,\r\n        matchs,\r\n        teams,\r\n      }\r\n    }\r\n    case actions.clearAll: {\r\n      return initialState\r\n    }\r\n    case actions.clearSeason: {\r\n      const { league, year } = action.payload\r\n      return {\r\n        ...state,\r\n        matchDays: state.matchDays.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        matchs: state.matchs.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        teamsByLeagueAndYear: state.teamsByLeagueAndYear.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { modelReducer } from './modelReducer'\r\n\r\nexport const reducer = combineReducers({ ui: uiReducer, model: modelReducer })\r\n","// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nimport { reducer } from './reducers'\r\nimport { saveState, loadState } from './utils/localStorage'\r\nimport { throttle } from 'lodash'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/de'\r\n\r\n/******************* Set globals ******************/\r\nmoment.locale(\"de\")\r\n\r\n/******************* Create Store ******************/\r\nconst thunk = ReduxThunk\r\nconst persistedState = loadState()\r\nconst store = createStore(reducer, persistedState, applyMiddleware(thunk))\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const model = store.getState().model\r\n    saveState({ model })\r\n  }, 1000)\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Root store={store} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","const SERIALIZED_STATE_KEY = 'yaspp_state'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(SERIALIZED_STATE_KEY)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(SERIALIZED_STATE_KEY, serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}"],"sourceRoot":""}