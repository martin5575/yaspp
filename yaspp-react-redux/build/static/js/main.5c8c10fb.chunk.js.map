{"version":3,"sources":["reducers/selectors/uiSelector.js","reducers/selectors/modelSelector.js","utils/listUtils.js","stats/statsType.js","stats/seasonInfo.js","maths/probabilities.js","parts/Match.jsx","parts/MatchsPerDay.jsx","parts/Matchs.jsx","components/ListNavigator.jsx","actions/actions.js","services/leagues.js","services/index.js","services/mapOpenLigaDB.js","utils/filter.js","actions/ActionBuilder.js","utils/storeHelpers.js","actions/ActionBuilderWithStore.js","components/MatchdayNavigator.jsx","parts/RefreshCurrentMatchDayButton.jsx","components/RefreshButton.jsx","parts/MatchDayOptionsButton.jsx","parts/MatchDayViewSettings.jsx","parts/LoadingPage.jsx","components/IconButton.jsx","parts/Storage/ClearAllButton.jsx","parts/Storage/ClearSeasonButton.jsx","utils/stateStats.js","parts/Storage/index.jsx","components/PercentageButton.jsx","parts/App.jsx","components/Navbar.jsx","parts/Header.jsx","parts/Footer.jsx","utils/dateFormat.js","Root.jsx","reducers/uiReducer.js","reducers/modelReducer.js","reducers/index.js","index.js","utils/localStorage.js"],"names":["getUi","prop","getSelectedLeague","pipe","getSelectedYear","getSelectedMatchDay","getIsInitializing","getIsLoadingLeagues","getIsLoadingYears","getIsLoadingTeams","getIsLoadingAllMatchDays","getIsLoadingMatchDay","getIsLoading","getModel","getAllLeagues","getAllTeams","getTeamsByLeagueAndYear","getAllMatchDays","getAllMatchs","getAllYearsByLeague","groupByArray","xs","key","reduce","rv","x","v","Function","el","find","r","values","push","dictionarize","array","result","y","id","sortByField","sort","compare","a","b","sum","res","definitions","short","description","getPoints","gf","ga","sumFields","teamInfo","key1","key2","undefined","aggregateSeasonInfo","matchs","home","map","team","hgf","fullTimeHome","hga","fullTimeAway","hp","match","hm","length","away","agf","aga","ap","am","fullWithTotal","concat","_toConsumableArray","_objectSpread","tgf","tga","tp","tm","totalGA","aggregate","avgGA","hdf","adf","tdf","getHG_AG_AVG","infoHome","infoAway","getTG_TG_AVG","getStats","statsType","goals","getHGDF_AGDF_AVG","getTGDF_TGDF_AVG","formatNumber","n","digits","toFixed","poissonProbability","lambda","k","Math","pow","exp","i","faculty","calcLossProbs","probs","probSum","j","calcWinProbs","calcTieProbs","calcResultProbs","hg","ag","arguments","minProb","max","row","formatPercentage","getProbDescription","results","content","formatProbOrRate","showPercentage","value","min","formatRate","Match","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","logoSize","_inherits","_createClass","props","teams","seasonInfo","modelKey","teamHome","teamHomeId","teamAway","teamAwayId","stats","calcStats","formatedStats","formatStats","win","tie","loss","calcWinLossTieProbs","formatedProbs","formatProbs","console","log","React","createElement","className","data-toggle","title","moment","lastUpdate","format","src","iconUrl","alt","shortName","height","width","halfTimeHome","halfTimeAway","isFinished","FontAwesomeIcon","icon","color","data-html","data-container","data-placement","data-content","Component","MatchsPerDay","statsTitle","statsDescription","scope","date","size","m","Matchs","func","groupByMatchDay","matchDateTime","groupedMatchs","Object","entries","selectedModelId","statsHeader","item","getShort","getDescription","gm","ListNavigator","_Component","event","node","target","parentElement","onSelect","data","buttonStyles","bgStyles","currentIndex","findIndex","selected","selectedItem","nextIndex","prevIndex","nextId","prevId","role","aria-label","type","disabled","onClick","bind","aria-haspopup","aria-expanded","name","aria-labelledby","RequestLeagues","RequestYears","RequestTeams","RequestMatchDays","RequestMatchs","ReceiveLeagues","ReceiveYears","ReceiveTeams","ReceiveMatchDays","ReceiveMatchs","SelectMatchDay","SelectLeague","SelectYear","StartRefreshMatchs","leagues","years","openligaBaseUrl","mapTeam","olTeam","teamId","teamIconUrl","teamName","getSelectedMatchs","state","selectedLeague","selectedYear","selectedMatchDay","allMatchs","filter","league","year","matchDayId","getSelectedYears","toString","getSelectedMatchDays","existsMatchDay","existLeagues","allLeagues","existYears","Error","yearsOfLeague","existTeams","relevantTeams","existMatchDays","relevantDay","getLatestUpdate","reverse","selectMatchDay","actions","selectLeague","selectYear","receiveMatchDays","json","isLoadingMatchDays","matchDays","olGroup","parseInt","groupOrderID","groupName","groupID","fetchMatchDays","dispatch","requestMatchDays","url","fetch","then","service","fetchMatchs","isLoadingMatchs","requestMatchs","matchday","olMatchs","olMatch","twoTeams","team1","team2","t1","t2","mapper","matchID","matchIsFinished","group","leagueKey","leagueId","lastUpdateDateTime","halfTimeResult","matchResults","resultName","fullTimeResult","pointsTeam1","pointsTeam2","receiveMatchs","refreshMatchs","isRefreshingMatchs","updateMatchsRequired","endRefreshMatchs","fetchTeams","isLoadingTeams","requestTeams","teamData","teamsByLeagueAndYear","receiveTeams","fetchLeagues","isLoadingLeagues","fetchYears","isLoadingYears","requestYears","yearsByLeague","receiveYears","startInitializing","isInitializing","endInitializing","areSelectedMatchsPresent","store","getState","dispatchFetchMatchs","matchDay","dispatchFetchInitial","fetchInitial","dispatchFetchYears","dispatchSelectMatchDay","dispatchSelectLeague","dispatchSelectYear","updateMatchDaysIfNecessary","areSelectedMatchDaysPresent","dispatchFetchMatchDays","dispatchSwitchMenu","menuId","switchMenu","MatchdayNavigator","updateMatchs","relevantMatchDays","RefreshCurrentMatchDayButton","connect","isUpdating","ui","_ref","spin","MatchDayOptionsButton","ownProps","payload","currentId","switchModel","MatchDayViewSettings","LoadingPage","IconButton","handleClick","href","ClearAllButton","ClearSeasonButton","getTeamCount","keys","model","getSeasonsCount","seasons","z","count","z1","Storage","teamCount","getStorageStats","l","s","PercentageButton","aria-pressed","_regeneratorRuntime","e","t","prototype","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","f","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_componentDidMount","forceUpdate","unsubscribe","subscribe","update","_asyncToGenerator","_callee","_context","relevantMatchs","previousMatchs","getSeasonInfo","Navbar","_leagueChange","_yearChange","_x","_x2","_callee2","_context2","relevantYears","yearChange","data-target","aria-controls","leagueChange","selectMenu","Header","Footer","lastUpdateDate","now","dt","duration","diff","asYears","humanize","formatUpdateDate","library","add","icons","Root","initialState","isLoadingAllMatchDays","isLoadingMatchDay","reducer","combineReducers","action","isLoadingLeague","matchDict","_action$payload","locale","thunk","ReduxThunk","persistedState","serializedState","localStorage","getItem","JSON","parse","error","loadState","createStore","applyMiddleware","throttle","stringify","setItem","saveState","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5c8c10fb.chunk.js","sourcesContent":["import { prop, pipe } from 'ramda'\r\n\r\nexport const getUi = prop('ui')\r\n\r\nexport const getSelectedLeague = pipe(\r\n  getUi,\r\n  prop('selectedLeague')\r\n)\r\n\r\nexport const getSelectedYear = pipe(\r\n  getUi,\r\n  prop('selectedYear')\r\n)\r\n\r\nexport const getSelectedMatchDay = pipe(\r\n  getUi,\r\n  prop('selectedMatchDay')\r\n)\r\n\r\nexport const getIsInitializing = pipe(\r\n  getUi,\r\n  prop('isInitializing')\r\n)\r\n\r\nexport const getIsLoadingLeagues = pipe(\r\n  getUi,\r\n  prop('isLoadingLeagues')\r\n)\r\n\r\nexport const getIsLoadingYears = pipe(\r\n  getUi,\r\n  prop('isLoadingYears')\r\n)\r\n\r\nexport const getIsLoadingTeams = pipe(\r\n  getUi,\r\n  prop('isLoadingTeams')\r\n)\r\n\r\nexport const getIsLoadingAllMatchDays = pipe(\r\n  getUi,\r\n  prop('isLoadingAllMatchDays')\r\n)\r\n\r\nexport const getIsLoadingMatchDay = pipe(\r\n  getUi,\r\n  prop('isLoadingMatchDay')\r\n)\r\n\r\nexport const getIsLoading =\r\n  getIsInitializing ||\r\n  getIsLoadingLeagues ||\r\n  getIsLoadingYears ||\r\n  getIsLoadingTeams ||\r\n  getIsLoadingAllMatchDays ||\r\n  getIsLoadingMatchDay\r\n","import { prop, pipe } from 'ramda'\r\n\r\nexport const getModel = prop('model')\r\n\r\nexport const getAllLeagues = pipe(\r\n  getModel,\r\n  prop('leagues')\r\n)\r\n\r\nexport const getAllTeams = pipe(\r\n  getModel,\r\n  prop('teams')\r\n)\r\n\r\nexport const getTeamsByLeagueAndYear = pipe(\r\n  getModel,\r\n  prop('teamsByLeagueAndYear')\r\n)\r\n\r\nexport const getAllMatchDays = pipe(\r\n  getModel,\r\n  prop('matchDays')\r\n)\r\n\r\nexport const getAllMatchs = pipe(\r\n  getModel,\r\n  prop('matchs')\r\n)\r\n\r\nexport const getAllYearsByLeague = pipe(\r\n  getModel,\r\n  prop('yearsByLeague')\r\n)\r\n","export const groupByField = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByFunc = (xs, func) => {\r\n  return xs.reduce((rv, x) => {\r\n    const key = func(x)\r\n    ;(rv[key] = rv[key] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByArray = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    let v = key instanceof Function ? key(x) : x[key]\r\n    let el = rv.find((r) => r && r.key === v)\r\n\r\n    if (el) {\r\n      el.values.push(x)\r\n    } else {\r\n      rv.push({ key: v, values: [x] })\r\n    }\r\n\r\n    return rv\r\n  }, [])\r\n}\r\n\r\nexport const dictionarize = (array) => {\r\n  return array.reduce((result, y) => {\r\n    result[y.id] = y\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport const sortByField = (xs, key) => xs.sort(compare(key))\r\n\r\nexport const compare = (key) => (a, b) => {\r\n  if (a[key] < b[key]) return -1\r\n  if (a[key] > b[key]) return 1\r\n  return 0\r\n}\r\n\r\nexport const sum = (xs) => xs.reduce((res, x) => res + x, 0)\r\n","export const TotalGoalsVsTotalGoals = \"tg_vs_tg\"\nexport const TotalGoalsVsTotalGoalsWithDefenseFactor = \"tgdf_vs_tgdf\"\nexport const HomeGoalsVsAwayGoals = \"hg_vs_ag\"\nexport const HomeGoalsVsAwayGoalsWithDefenseFactor = \"hgdf_vs_agdf\"\n//export const TotalPointsVsTotalPoints = \"tp_vs_tp\"\n\nexport const getKeys = () => {     \n    return [\n        TotalGoalsVsTotalGoals,\n        TotalGoalsVsTotalGoalsWithDefenseFactor,\n        HomeGoalsVsAwayGoals,\n        HomeGoalsVsAwayGoalsWithDefenseFactor\n    ]\n}\n\nconst definitions = [\n    {\n        key: TotalGoalsVsTotalGoals,\n        short: \"t-t\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt.\"\n    },\n    {\n        key: TotalGoalsVsTotalGoalsWithDefenseFactor,\n        short: \"t-t*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    },    {\n        key: HomeGoalsVsAwayGoals,\n        short: \"h-a\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore.\"\n    },\n    {\n        key: HomeGoalsVsAwayGoalsWithDefenseFactor,\n        short: \"h-a*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    }\n]\n\nconst find = (key) => definitions.find(x=>x.key===key)\n\nexport const getDescription = (key) => {\n    const item = find(key)\n    return item ? item.description : \"\"\n}\n\nexport const getShort = (key) => {\n    const item = find(key)\n    return item ? item.short : \"\"\n}\n\nexport const getNextId = (currentId) => ++currentId % definitions.length\n\nexport const getKey = (currentId) => definitions[currentId].key","import {\n  getSelectedLeague,\n  getSelectedYear,\n  getSelectedMatchDay,\n} from '../reducers/selectors/uiSelector'\nimport {\n  getAllMatchs\n} from '../reducers/selectors/modelSelector'\nimport {\n  groupByArray,\n  sum\n} from '../utils/listUtils'\n\nimport * as stats from './statsType';\n\nconst getPoints = (gf, ga) => {\n  if (gf > ga) return 3\n  if (gf === ga) return 1\n  return 0\n}\n\nconst getHomePoints = (match) =>\n  getPoints(match.fullTimeHome, match.fullTimeAway)\nconst getAwayPoints = (match) =>\n  getPoints(match.fullTimeAway, match.fullTimeHome)\n\n\n  const sumFields = (teamInfo, key1, key2) => {\n    return !teamInfo ?\n      undefined :\n      teamInfo[key1] && teamInfo[key2] ?\n      teamInfo[key1] + teamInfo[key2] :\n      teamInfo[key1] ?\n      teamInfo[key1] :\n      teamInfo[key2]\n  }\n  \n  const tgf = (teamInfo) => {\n    return sumFields(teamInfo, 'hgf', 'agf')\n  }\n  \n  const tga = (teamInfo) => {\n    return sumFields(teamInfo, 'hga', 'aga')\n  }\n  \n  const tp = (teamInfo) => {\n    return sumFields(teamInfo, 'hp', 'ap')\n  }\n  \n  const tm = (teamInfo) => {\n    return sumFields(teamInfo, 'hm', 'am')\n  }\n\n\nexport const getSeasonInfo = (state) => {\n  const league = getSelectedLeague(state)\n  const year = getSelectedYear(state)\n  const matchDay = getSelectedMatchDay(state)\n  const allMatchs = getAllMatchs(state)\n\n  const previousMatchs = !allMatchs ? [] :\n    // @ts-ignore\n    allMatchs.filter(\n      (m) => m.year === year && m.league === league && m.isFinished &&\n      m.matchDayId < matchDay\n    )\n    \n    return aggregateSeasonInfo(previousMatchs)\n  }\n\nexport const aggregateSeasonInfo = (matchs) => {\n  const home = groupByArray(matchs, 'teamHomeId').map((x) => ({\n    team: x.key,\n    hgf: sum(x.values.map((y) => y.fullTimeHome)),\n    hga: sum(x.values.map((y) => y.fullTimeAway)),\n    hp: sum(x.values.map((y) => getHomePoints(y))),\n    hm: x.values.length,\n  }))\n  const away = groupByArray(matchs, 'teamAwayId').map((x) => ({\n    team: x.key,\n    agf: sum(x.values.map((y) => y.fullTimeAway)),\n    aga: sum(x.values.map((y) => y.fullTimeHome)),\n    ap: sum(x.values.map((y) => getAwayPoints(y))),\n    am: x.values.length,\n  }))\n  \n  const fullByTeam = groupByArray([...home, ...away], 'team')\n  const full = fullByTeam.map((x) =>\n    x.values.reduce((res, x) => ({ ...res,\n      ...x\n    }), {hgf:0, hga:0, hp:0, hm:0, agf:0, aga:0, ap:0, am:0})\n  )\n\n  const fullWithTotal = full.map(x=>{\n    var res = {...x}\n    res.tgf = tgf(x)\n    res.tga = tga(x)\n    res.tp = tp(x)\n    res.tm = tm(x)\n    return res    \n  })\n\n  const totalGA = fullWithTotal.reduce((res,x)=>{\n    var aggregate = { ...res };\n    aggregate.hga += x.hga;\n    aggregate.hm += x.hm;\n    aggregate.aga += x.aga;\n    aggregate.am += x.am;\n    aggregate.tga += x.tga;\n    aggregate.tm += x.tm;\n    return aggregate;\n  }, {hga:0, hm:0, aga:0, am:0, tga:0, tm:0})\n\n  const avgGA = {\n    hga: totalGA.hm > 0 ? totalGA.hga / totalGA.hm : undefined,\n    aga: totalGA.am > 0 ? totalGA.aga / totalGA.am : undefined,\n    tga: totalGA.tm > 0 ? totalGA.tga / totalGA.tm : undefined\n  }\n\n  const fullWithDefenseFactor = fullWithTotal.map(x => ({...x, \n    hdf: avgGA.hga ? (x.hga/x.hm) / avgGA.hga : 1.0,\n    adf: avgGA.aga ? (x.aga/x.am) / avgGA.aga : 1.0,\n    tdf: avgGA.tga ? (x.tga/x.tm) / avgGA.tga : 1.0\n    })\n  )\n\n  return fullWithDefenseFactor\n}\n\n\n\nconst getHG_AG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.hm ? infoHome.hgf / infoHome.hm : undefined\n  const goalsAway =\n    infoAway && infoAway.am ? infoAway.agf / infoAway.am : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getHGDF_AGDF_AVG = (infoHome, infoAway) => {\n  const goals = getHG_AG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.adf ? goals.home * infoAway.adf :undefined,\n    away: goals.away && infoHome.hdf ? goals.away * infoHome.hdf: undefined\n  }\n}\n\nconst getTG_TG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.tm ? infoHome.tgf / infoHome.tm : undefined\n  const goalsAway =\n    infoAway && infoAway.tm ? infoAway.tgf / infoAway.tm : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getTGDF_TGDF_AVG = (infoHome, infoAway) => {\n  const goals = getTG_TG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.tdf ? goals.home * infoAway.tdf :undefined,\n    away: goals.away && infoHome.tdf ? goals.away * infoHome.tdf :undefined,\n  }\n}\n\nconst getStats = (infoHome, infoAway, statsType) => {\n  switch (statsType) {\n    case stats.HomeGoalsVsAwayGoalsWithDefenseFactor:\n      return getHGDF_AGDF_AVG(infoHome, infoAway)\n    case stats.HomeGoalsVsAwayGoals:\n      return getHG_AG_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoalsWithDefenseFactor:\n      return getTGDF_TGDF_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoals:\n    default:\n      return getTG_TG_AVG(infoHome, infoAway)\n  }\n}\n\nexport const calcStats = (seasonInfo, teamHomeId, teamAwayId, stats) => {\n  const infoHome = seasonInfo.find((x) => x.team === teamHomeId)\n  const infoAway = seasonInfo.find((x) => x.team === teamAwayId)\n  return getStats(infoHome, infoAway, stats)\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '0.0')\nexport const formatStats = (stats, digits = 2) => {\n  return `${formatNumber(stats.home, digits)}:${formatNumber(\n    stats.away,\n    digits\n  )}`\n}","const faculty = (k) => {\n  let r = 1.0\n  for (let i = 1; i <= k; ++i) {\n    r *= i\n  }\n  return r\n}\n\nconst poissonProbability = (lambda, k) => {\n  return (Math.pow(lambda, k) * Math.exp(-lambda)) / faculty(k)\n}\n\nexport const calcLossProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    for (let j = i + 1; j < n; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcWinProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 1; i < n; ++i) {\n    for (let j = 0; j < i; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcTieProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    probSum += probs[i][i]\n  }\n  return probSum\n}\n\nexport const calcWinLossTieProbs = (hg, ag) => {\n  const probs = calcResultProbs(hg, ag)\n  return {\n    win: calcWinProbs(probs),\n    tie: calcTieProbs(probs),\n    loss: calcLossProbs(probs),\n  }\n}\n\nexport const calcResultProbs = (hg, ag, n = 20, minProb = 0.01) => {\n  const hgf = Math.max(minProb, hg || 0.0)\n  const agf = Math.max(minProb, ag || 0.0)\n\n  let result = []\n  for (let i = 0; i <= n; ++i) {\n    let row = []\n    for (let j = 0; j <= n; ++j) {\n      row.push(poissonProbability(hgf, i) * poissonProbability(agf, j))\n    }\n    result.push(row)\n  }\n  return result\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '-')\n\nexport const formatPercentage = (n, digits = 0) =>\n  n ? (n * 100.0).toFixed(digits) + '%' : '-'\n\nexport const formatProbs = (probs, n = 2) => {\n  return `${formatPercentage(probs.win, n)}/${formatPercentage(\n    probs.tie,\n    n\n  )}/${formatPercentage(probs.loss, n)}`\n}\n\nexport const formatRate = (n, digits = 1) =>\n  n ? Math.min(99.9, 1.0 / n).toFixed(digits) : '-'\n\nexport const getProbDescription = (hg, ag) => {\n  const results = calcResultProbs(hg, ag)\n  let content = ''\n  for (let i = 0; i <= 5; ++i) {\n    for (let j = 0; j <= 5; ++j) {\n      if (i + j > 6) continue\n      content += `<b>${i}:${j}</b> ${formatPercentage(results[i][j])}<br/>`\n    }\n  }\n  return `<div>${content}</div>`\n}\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport './Match.css'\r\nimport { formatStats, calcStats } from '../stats/seasonInfo'\r\nimport {\r\n  formatProbs,\r\n  formatRate,\r\n  calcWinLossTieProbs,\r\n  formatPercentage,\r\n  getProbDescription,\r\n} from '../maths/probabilities'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst formatProbOrRate = (showPercentage, value) =>\r\n  showPercentage ? formatPercentage(value) : formatRate(value)\r\n\r\nclass Match extends React.Component {\r\n  logoSize = 20\r\n  render() {\r\n    const match = this.props.match\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const modelKey = this.props.modelKey\r\n\r\n    const teamHome = teams[match.teamHomeId]\r\n    const teamAway = teams[match.teamAwayId]\r\n\r\n    const stats = calcStats(\r\n      seasonInfo,\r\n      match.teamHomeId,\r\n      match.teamAwayId,\r\n      modelKey\r\n    )\r\n    const digits = 1\r\n    const formatedStats = formatStats(stats, digits)\r\n    const probs = calcWinLossTieProbs(stats.home, stats.away)\r\n    const formatedProbs = formatProbs(probs)\r\n    console.log(formatedProbs)\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      <tr\r\n        className=\"d-flex\"\r\n        key={match.id}\r\n        data-toggle=\"tooltip\"\r\n        title={\r\n          'aktualisiert: ' +\r\n          moment(match.lastUpdate).format('DD.MM.YY HH:mm:ss')\r\n        }\r\n      >\r\n        <td className=\"col-2\">\r\n          <img\r\n            src={teamHome.iconUrl}\r\n            alt={teamHome.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n          <small>:</small>\r\n          <img\r\n            src={teamAway.iconUrl}\r\n            alt={teamAway.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n        </td>\r\n        <td className=\"col-1\">\r\n          <small>\r\n            ({match.halfTimeHome}:{match.halfTimeAway})\r\n          </small>\r\n        </td>\r\n        <td className=\"col-1\">\r\n          <small className={match.isFinished ? 'final ' : ''}>\r\n            {match.fullTimeHome}:{match.fullTimeAway}\r\n          </small>\r\n        </td>\r\n        <td className=\"col-1\">\r\n          <FontAwesomeIcon icon=\"angle-double-down\" color=\"gray\" />\r\n        </td>\r\n        <td className=\"col-2 text-center\">\r\n          <small>\r\n            <i>{formatedStats}</i>\r\n          </small>\r\n        </td>\r\n        <td className=\"col-1 text-center\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.win)}</i>\r\n          </small>\r\n        </td>\r\n        <td className=\"col-1 text-center\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.tie)}</i>\r\n          </small>\r\n        </td>\r\n        <td className=\"col-1 text-center\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.loss)}</i>\r\n          </small>\r\n        </td>\r\n        <td className=\"col-1 text-center\">\r\n          <a\r\n            data-toggle=\"popover\"\r\n            title={`${teamHome.shortName}-${teamAway.shortName}`}\r\n            data-html=\"true\"\r\n            data-container=\"body\"\r\n            data-placement=\"left\"\r\n            data-content={getProbDescription(stats.home, stats.away)}\r\n          >\r\n            <small>\r\n              <FontAwesomeIcon icon=\"info-circle\" />\r\n            </small>\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Match\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport Match from './Match'\r\nimport './MatchsPerDay.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass MatchsPerDay extends React.Component {\r\n  render() {\r\n    const statsTitle = this.props.statsTitle\r\n    const statsDescription = this.props.statsDescription\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      <div key=\"this.props.date\">\r\n        <div>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr className=\"d-flex\">\r\n                <th scope=\"col\" className=\"col-5\">\r\n                  <small>\r\n                    {moment(this.props.date).format('ddd DD.MM HH:mm')}\r\n                  </small>\r\n                </th>\r\n                {statsTitle && (\r\n                  <th scope=\"col\" className=\"col-2 text-center\">\r\n                    <small>\r\n                      {statsTitle}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon icon=\"info-circle\" size=\"sm\" />\r\n                    </small>\r\n                  </th>\r\n                )}\r\n                {statsTitle && (\r\n                  <th scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>1</small>\r\n                  </th>\r\n                )}\r\n                {statsTitle && (\r\n                  <th scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>0</small>\r\n                  </th>\r\n                )}\r\n                {statsTitle && (\r\n                  <th scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>2</small>\r\n                  </th>\r\n                )}\r\n                {statsTitle && (\r\n                  <th scope=\"col\" className=\"col-1 text-center\" />\r\n                )}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.matchs.map((m) => (\r\n                <Match\r\n                  match={m}\r\n                  teams={this.props.teams}\r\n                  seasonInfo={this.props.seasonInfo}\r\n                  key={m.id}\r\n                  showPercentage={showPercentage}\r\n                  modelKey={this.props.modelKey}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchsPerDay\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Matchs extends React.Component {\r\n  render() {\r\n    const matchs = this.props.matchs\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const showPercentage = this.props.showPercentage\r\n    if (!matchs || matchs.length === 0 || !teams) return <div>empty</div>\r\n\r\n    const groupByMatchDay = groupByFunc(matchs, (x) =>\r\n      x.matchDateTime\r\n    )\r\n\r\n    // @ts-ignore\r\n    const groupedMatchs = Object.entries(groupByMatchDay)\r\n    sortByField(groupedMatchs, '0')\r\n\r\n    const selectedModelId = this.props.selectedModelId\r\n    const modelKey = getKey(selectedModelId)\r\n    const statsHeader = getShort(modelKey)\r\n    const statsDescription = getDescription(modelKey)\r\n    \r\n    return (\r\n      <div className=\"schedule\">\r\n        {groupedMatchs.map((gm, i) => (\r\n          <MatchsPerDay\r\n            teams={teams}\r\n            seasonInfo={seasonInfo}\r\n            date={gm[0]}\r\n            matchs={gm[1]}\r\n            key={gm[0]}\r\n            statsTitle={i === 0 ? statsHeader : ''}\r\n            statsDescription={statsDescription}\r\n            modelKey={modelKey}\r\n            showPercentage={showPercentage}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Matchs\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass ListNavigator extends Component {\r\n  onSelect(event) {\r\n    let node = event.target\r\n    while (!node.id) {\r\n      node = node.parentElement\r\n    }\r\n    this.props.onSelect(node.id)\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    if (!this.props.data) return <div />\r\n    const buttonStyles = this.props.buttonStyles ? this.props.buttonStyles : ''\r\n    const bgStyles = this.props.bgStyles ? this.props.bgStyles : ''\r\n\r\n    const data = this.props.data\r\n    const currentIndex = data.findIndex((x) => x.id === this.props.selected)\r\n    const selectedItem = data[currentIndex]\r\n    const nextIndex = currentIndex + 1\r\n    const prevIndex = currentIndex - 1\r\n    const nextId = nextIndex < data.length ? data[nextIndex].id : undefined\r\n    const prevId = prevIndex >= 0 ? data[prevIndex].id : undefined\r\n\r\n    return (\r\n      <div\r\n        className={`btn-group ${bgStyles}`}\r\n        role=\"group\"\r\n        aria-label=\"Button group with nested dropdown\"\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          id={prevId}\r\n          className={`btn btn-secondary ${buttonStyles}`}\r\n          disabled={prevId === undefined}\r\n          onClick={this.onSelect.bind(this)}\r\n        >\r\n          <FontAwesomeIcon icon=\"caret-left\" />\r\n        </button>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <button\r\n            id=\"btnGroupDrop1\"\r\n            type=\"button\"\r\n            className={`btn btn-secondary dropdown-toggle ${buttonStyles}`}\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {selectedItem ? selectedItem.name : this.props.selected}\r\n          </button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {this.props.data.map((x) => (\r\n              <button\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n                id={x.id}\r\n                key={x.id}\r\n                onClick={this.onSelect.bind(this)}\r\n              >\r\n                {x.name}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            id={nextId}\r\n            className={`btn btn-secondary ${buttonStyles}`}\r\n            onClick={this.onSelect.bind(this)}\r\n            disabled={nextId === undefined}\r\n          >\r\n            <FontAwesomeIcon icon=\"caret-right\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ListNavigator\r\n","/******************* Actions ******************/\r\n\r\nexport const RequestLeagues = 'RequestLeagues'\r\nexport const RequestYears = 'RequestYears'\r\nexport const RequestTeams = 'RequestTeams'\r\nexport const RequestMatchDays = 'RequestMatchDays'\r\nexport const RequestMatchs = 'RequestMatchs'\r\nexport const ReceiveLeagues = 'ReceiveLeagues'\r\nexport const ReceiveYears = 'ReceiveYears'\r\nexport const ReceiveTeams = 'ReceiveTeams'\r\n\r\nexport const ReceiveMatchDays = 'ReceiveMatchDays'\r\nexport const ReceiveMatchs = 'ReceiveMatchs'\r\n\r\nexport const SelectMatchDay = 'SelectMatchDay'\r\nexport const SelectLeague = 'SelectLeague'\r\nexport const SelectYear = 'SelectYear'\r\n\r\nexport const StartInitializing = 'StartInitializing'\r\nexport const EndInitializing = 'EndInitializing'\r\n\r\nexport const StartRefreshMatchs = 'StartRefreshMatchs'\r\nexport const EndRefreshMatchs = 'EndRefreshMatchs'\r\n\r\nexport const SwitchMenu = 'SwitchMenu'\r\n\r\n/******** Clear **********/\r\nexport const clearSeason = 'ClearSeason'\r\nexport const clearAll = 'ClearAll'\r\n\r\nexport const ShowPercentage = 'ShowPercentage'\r\nexport const SwitchModel = 'SwitchModel'","const leagues = [\r\n  {\r\n    id: 'bl1',\r\n    name: '1.Bundesliga',\r\n    key: 3005,\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  {\r\n    id: 'bl2',\r\n    name: '2.Bundesliga',\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  { id: 'bl3', name: '3.Bundesliga', years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015] },\r\n  { id: 'fifa18', name: 'WM18', years: [2018] },\r\n]\r\n\r\nexport default leagues\r\n","import leagues from './leagues'\r\n\r\nfunction getLeagues() {\r\n  return leagues.map((x) => {\r\n    return { id: x.id, name: x.name }\r\n  })\r\n}\r\n\r\nfunction getYears(leagueId) {\r\n  const league = leagues.find((x) => x.id === leagueId)\r\n  if (!league) return []\r\n  return league.years.map((y) => {\r\n    return { id: y, name: y, leagueId }\r\n  })\r\n}\r\n// new urls: https://api.openligadb.de/getmatchdata/bl1/2020/1\r\nconst openligaBaseUrl = 'https://api.openligadb.de'\r\nfunction getTeams(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailableteams/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\nfunction getMatchDays(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailablegroups/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchs(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getmatchdata/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchsLastChangeDate(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getlastchangedate/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nexport {\r\n  getTeams,\r\n  getLeagues,\r\n  getYears,\r\n  getMatchs,\r\n  getMatchDays,\r\n  getMatchsLastChangeDate,\r\n}\r\n","/****************** Map open liga db data ******************/\r\nfunction mapMatch(olMatch, league, year) {\r\n  const id = olMatch.matchID\r\n  const matchDateTime = olMatch.matchDateTime\r\n  const teamHomeId = olMatch.team1.teamId\r\n  const teamAwayId = olMatch.team2.teamId\r\n  const isFinished = olMatch.matchIsFinished\r\n  const matchDayId = olMatch.group.groupOrderID\r\n  const leagueKey = olMatch.leagueId\r\n  const lastUpdate = olMatch.lastUpdateDateTime\r\n  const halfTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Halbzeit\" || x.resultName === \"Halbzeitergebnis\"\r\n  )\r\n  const fullTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Endergebnis\"\r\n  )\r\n  const halfTimeHome = halfTimeResult ? halfTimeResult.pointsTeam1 : '-'\r\n  const halfTimeAway = halfTimeResult ? halfTimeResult.pointsTeam2 : '-'\r\n  const fullTimeHome = fullTimeResult ? fullTimeResult.pointsTeam1 : '-'\r\n  const fullTimeAway = fullTimeResult ? fullTimeResult.pointsTeam2 : '-'\r\n  return {\r\n    id,\r\n    teamHomeId,\r\n    teamAwayId,\r\n    matchDayId,\r\n    league,\r\n    leagueKey,\r\n    year,\r\n    lastUpdate,\r\n    matchDateTime,\r\n    isFinished,\r\n    halfTimeHome,\r\n    halfTimeAway,\r\n    fullTimeHome,\r\n    fullTimeAway,\r\n  }\r\n}\r\n\r\nfunction mapTeam(olTeam) {\r\n  const id = olTeam.teamId\r\n  const shortName = olTeam.shortName\r\n  const iconUrl = olTeam.teamIconUrl\r\n  const name = olTeam.teamName\r\n  return {\r\n    id,\r\n    shortName,\r\n    iconUrl,\r\n    name,\r\n  }\r\n}\r\n\r\nfunction mapTeamFromMatch(olMatch) {\r\n  const team1 = mapTeam(olMatch.team1)\r\n  const team2 = mapTeam(olMatch.team2)\r\n  return [team1, team2]\r\n}\r\n\r\nfunction mapTeamFromMatchs(olMatchs) {\r\n  let teams = {}\r\n  for (let i = 0; i < olMatchs.length; i++) {\r\n    const twoTeams = mapTeamFromMatch(olMatchs[i])\r\n    const t1 = twoTeams[0]\r\n    teams[t1.id] = t1\r\n    const t2 = twoTeams[1]\r\n    teams[t2.id] = t2\r\n  }\r\n  return teams\r\n}\r\n\r\nfunction mapMatchDay(olGroup, league, year) {\r\n  const id = parseInt(olGroup.groupOrderID, 10)\r\n  const name = olGroup.groupName\r\n  const key = parseInt(olGroup.groupID, 10)\r\n  return {\r\n    id,\r\n    name,\r\n    key,\r\n    league,\r\n    year\r\n  }\r\n}\r\n\r\nexport {\r\n  mapMatch,\r\n  mapMatchDay,\r\n  mapTeam,\r\n  mapTeamFromMatchs\r\n}","import {\r\n  prop,\r\n  map\r\n} from 'ramda'\r\nimport {\r\n  getAllMatchs,\r\n  getAllYearsByLeague,\r\n  getAllMatchDays,\r\n  getTeamsByLeagueAndYear,\r\n} from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport function getSelectedMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n\r\n  // @ts-ignore\r\n  return !allMatchs ? [] : allMatchs.filter(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}\r\nexport function getSelectedYears(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  return getAllYearsByLeague(state)[selectedLeague.toString()]\r\n}\r\n\r\nexport function getSelectedMatchDays(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n\r\n  const allMatchDays = getAllMatchDays(state)\r\n\r\n  // @ts-ignore\r\n  return allMatchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport const existsMatchDay = (state, matchDayId) => {\r\n  const matchDays = getSelectedMatchDays(state)\r\n  return !!matchDays.find((x) => x.id === matchDayId)\r\n}\r\n\r\nexport const existLeagues = (state) => {\r\n  const allLeagues = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allLeagues && allLeagues.length > 0\r\n}\r\n\r\nexport const existYears = (state, selectedLeague) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n\r\n  const yearsOfLeague = getAllYearsByLeague(state)[selectedLeague.toString()]\r\n  return yearsOfLeague && yearsOfLeague.length > 0\r\n}\r\n\r\nexport const existTeams = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const teamsByLeagueAndYear = getTeamsByLeagueAndYear(state)\r\n  // @ts-ignore\r\n  const relevantTeams = teamsByLeagueAndYear.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantTeams && relevantTeams.length > 0\r\n}\r\n\r\nexport const existMatchDays = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const matchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  const relevantDay = matchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantDay && relevantDay.length > 0\r\n}\r\n\r\nexport const getLatestUpdate = (matchs) => {\r\n  if (!matchs || matchs.length === 0) return undefined\r\n  const lastUpdates = map(prop('lastUpdate'))(matchs)\r\n    .sort()\r\n    .reverse()\r\n  return lastUpdates[0]\r\n}","import * as actions from './actions'\r\nimport * as statsType from '../stats/statsType'\r\nimport * as service from '../services'\r\nimport * as mapper from '../services/mapOpenLigaDB'\r\nimport {\r\n  existsMatchDay,\r\n  existLeagues,\r\n  existYears,\r\n  existTeams,\r\n  existMatchDays,\r\n  getSelectedYears,\r\n  getSelectedMatchDays,\r\n  getSelectedMatchs,\r\n  getLatestUpdate,\r\n} from '../utils/filter'\r\nimport {\r\n  getSelectedMatchDay,\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  dictionarize\r\n} from '../utils/listUtils'\r\nimport {\r\n  getAllLeagues\r\n} from '../reducers/selectors/modelSelector'\r\n\r\n/******************* SELECT in UI ******************/\r\n\r\nfunction selectMatchDay(state, selectedMatchDay) {\r\n  if (!existsMatchDay(state, selectedMatchDay))\r\n    selectedMatchDay = getSelectedMatchDay(state)\r\n  return {\r\n    type: actions.SelectMatchDay,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction selectLeague(selectedLeague) {\r\n  return {\r\n    type: actions.SelectLeague,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction selectYear(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.SelectYear,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\n/***************** MATCHDAYS  *********************/\r\n\r\nfunction requestMatchDays(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestMatchDays,\r\n    isLoadingMatchDays: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveMatchDays(selectedLeague, selectedYear, json) {\r\n  return {\r\n    type: actions.ReceiveMatchDays,\r\n    isLoadingMatchDays: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    matchDays: json.map((x) =>\r\n      mapper.mapMatchDay(x, selectedLeague, selectedYear)\r\n    ),\r\n  }\r\n}\r\n\r\nfunction fetchMatchDays(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchDays(selectedLeague, selectedYear))\r\n    return service\r\n      .getMatchDays(selectedLeague, selectedYear)\r\n      .then((json) =>\r\n        dispatch(receiveMatchDays(selectedLeague, selectedYear, json))\r\n      )\r\n  }\r\n}\r\n\r\n/***************** MATCHS  *********************/\r\n\r\nfunction requestMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return {\r\n    type: actions.RequestMatchs,\r\n    isLoadingMatchs: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json) {\r\n  const teams = mapper.mapTeamFromMatchs(json)\r\n  return {\r\n    type: actions.ReceiveMatchs,\r\n    isLoadingMatchs: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n    matchs: json.map((x) => mapper.mapMatch(x, selectedLeague, selectedYear)),\r\n    teams,\r\n  }\r\n}\r\n\r\nfunction fetchMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n    return service\r\n      .getMatchs(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) =>\r\n        dispatch(\r\n          receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json)\r\n        )\r\n      )\r\n  }\r\n}\r\n\r\nfunction refreshMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  if (!selectedLeague || !selectedYear || !selectedYear) return\r\n\r\n  return function (dispatch) {\r\n    dispatch(startRefreshMatchs())\r\n    return service\r\n      .getMatchsLastChangeDate(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) => {\r\n        if (updateMatchsRequired(state, json)) {\r\n          fetchMatchs(selectedLeague, selectedYear, selectedMatchDay)(\r\n            dispatch\r\n          ).then((x) => dispatch(endRefreshMatchs()))\r\n        } else {\r\n          dispatch(endRefreshMatchs())\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nfunction updateMatchsRequired(state, date) {\r\n  const matchs = getSelectedMatchs(state)\r\n  const lastUpdate = getLatestUpdate(matchs)\r\n  return lastUpdate < date\r\n}\r\n\r\nfunction startRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: true,\r\n  }\r\n}\r\n\r\nfunction endRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: false,\r\n  }\r\n}\r\n\r\n/***************** TEAMS  *********************/\r\n\r\nfunction requestTeams(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestTeams,\r\n    isLoadingTeams: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveTeams(selectedLeague, selectedYear, json) {\r\n  const teamData = json.map((x) => mapper.mapTeam(x))\r\n  const teams = dictionarize(teamData)\r\n  const teamsByLeagueAndYear = teamData.map((x) => ({\r\n    teamId: x.id,\r\n    league: selectedLeague,\r\n    year: selectedYear,\r\n  }))\r\n\r\n  return {\r\n    type: actions.ReceiveTeams,\r\n    isLoadingTeams: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    teams,\r\n    teamsByLeagueAndYear,\r\n  }\r\n}\r\n\r\nfunction fetchTeams(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestTeams(selectedLeague, selectedYear))\r\n    const promise = service.getTeams(selectedLeague, selectedYear)\r\n    return (\r\n      promise\r\n      //.then(\r\n      // response => response.json()\r\n      //error => console.log('An error occurred.',   error)\r\n      //)\r\n      .then((json) =>\r\n        dispatch(receiveTeams(selectedLeague, selectedYear, json))\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\n/***************** LEAGUES  *********************/\r\n\r\nfunction requestLeagues() {\r\n  return {\r\n    type: actions.RequestLeagues,\r\n    isLoadingLeagues: true\r\n  }\r\n}\r\n\r\nfunction receiveLeagues(json) {\r\n  return {\r\n    type: actions.ReceiveLeagues,\r\n    isLoadingLeagues: false,\r\n    leagues: json.map((x) => x),\r\n  }\r\n}\r\n\r\nfunction fetchLeagues() {\r\n  return function (dispatch) {\r\n    dispatch(requestLeagues())\r\n    const leagues = service.getLeagues()\r\n    dispatch(receiveLeagues(leagues))\r\n  }\r\n}\r\n\r\n/***************** YEARS  *********************/\r\n\r\nfunction requestYears(selectedLeague) {\r\n  return {\r\n    type: actions.RequestYears,\r\n    isLoadingYears: true,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction receiveYears(selectedLeague, json) {\r\n  const years = json.map((x) => x)\r\n  let yearsByLeague = {}\r\n  yearsByLeague[selectedLeague] = years\r\n  return {\r\n    type: actions.ReceiveYears,\r\n    selectedLeague: selectedLeague,\r\n    isLoadingYears: false,\r\n    yearsByLeague,\r\n  }\r\n}\r\n\r\nfunction fetchYears(selectedLeague) {\r\n  if (selectedLeague === undefined)\r\n    throw new Error('selectedLeague is undefined')\r\n\r\n  return function (dispatch) {\r\n    dispatch(requestYears(selectedLeague))\r\n    const years = service.getYears(selectedLeague)\r\n    dispatch(receiveYears(selectedLeague, years))\r\n  }\r\n}\r\n\r\n/***************** INIT  *********************/\r\n\r\nfunction fetchInitial(store) {\r\n  return function (dispatch) {\r\n    dispatch(startInitializing())\r\n\r\n    let state = store.getState()\r\n    if (!existLeagues(state)) {\r\n      fetchLeagues()(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var league = getAllLeagues(state)[0]\r\n      dispatch(selectLeague(league.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedLeague = getSelectedLeague(state)\r\n    if (!existYears(state, selectedLeague)) {\r\n      fetchYears(selectedLeague)(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var year = getSelectedYears(state)[0]\r\n      dispatch(selectYear(selectedLeague, year.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedYear = getSelectedYear(state)\r\n    if (!existTeams(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchTeams(selectedLeague, selectedYear))\r\n    }\r\n\r\n    if (!existMatchDays(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchMatchDays(selectedLeague, selectedYear)).then(() => {\r\n        let state = store.getState()\r\n        const selectedMatchDay = getSelectedMatchDay(state)\r\n        dispatch(fetchMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n      })\r\n    } else {\r\n      const matchDay = getSelectedMatchDays(state)[0]\r\n      dispatch(selectMatchDay(state, matchDay.id))\r\n    }\r\n    dispatch(endInitializing())\r\n  }\r\n}\r\n\r\nconst startInitializing = () => ({\r\n  type: actions.StartInitializing,\r\n  isInitializing: true,\r\n})\r\nconst endInitializing = () => ({\r\n  type: actions.EndInitializing,\r\n  isInitializing: false,\r\n})\r\n\r\n/* ----------- Menu ----------- */\r\nconst switchMenu = (id) => ({\r\n  type: actions.SwitchMenu,\r\n  menuId: id,\r\n})\r\n\r\n/* ----------- Clear ----------- */\r\n\r\nconst clearAll = () => ({\r\n  type: actions.clearAll,\r\n})\r\n\r\nconst clearSeason = (league, year) => ({\r\n  type: actions.clearSeason,\r\n  payload: {\r\n    league,\r\n    year\r\n  },\r\n})\r\n\r\n\r\n/* ----------- Visualize ----------- */\r\n\r\nconst showPercentage = (flag) => ({\r\n  type: actions.ShowPercentage,\r\n  payload: flag\r\n})\r\n\r\nconst switchModel = (selectedModelId) => ({\r\n  type: actions.SwitchModel,\r\n  payload: statsType.getNextId(selectedModelId)\r\n})\r\n\r\n\r\nexport {\r\n  clearAll,\r\n  clearSeason,\r\n  switchMenu,\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  refreshMatchs,\r\n  showPercentage,\r\n  switchModel\r\n}","import {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  getAllMatchDays,\r\n  getAllMatchs,\r\n} from '../reducers/selectors/modelSelector'\r\n\r\nexport function areSelectedMatchDaysPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const allMatchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  return allMatchDays.find(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport function areSelectedMatchsPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allMatchs.find(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}","import {\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  switchMenu,\r\n} from './ActionBuilder'\r\nimport {\r\n  areSelectedMatchDaysPresent,\r\n  areSelectedMatchsPresent,\r\n} from '../utils/storeHelpers'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\n/******************* ActionBuilder with store ******************/\r\nconst dispatchFetchTeams = function(store, league, year) {\r\n  return store.dispatch(fetchTeams(league, year))\r\n}\r\n\r\nconst dispatchFetchMatchs = function(store, league, year, matchDay) {\r\n  return store.dispatch(fetchMatchs(league, year, matchDay))\r\n}\r\n\r\nconst dispatchFetchMatchDays = function(store, league, year) {\r\n  return store.dispatch(fetchMatchDays(league, year))\r\n}\r\n\r\nconst dispatchFetchInitial = function(store) {\r\n  return store.dispatch(fetchInitial(store))\r\n}\r\n\r\nconst dispatchFetchLeagues = function(store) {\r\n  return store.dispatch(fetchLeagues())\r\n}\r\n\r\nconst dispatchFetchYears = function(store, league) {\r\n  return store.dispatch(fetchYears(league))\r\n}\r\n\r\nconst dispatchSelectMatchDay = function(store, matchDay) {\r\n  return store.dispatch(selectMatchDay(store.getState(), matchDay))\r\n}\r\n\r\nconst dispatchSelectLeague = function(store, league) {\r\n  return store.dispatch(selectLeague(league))\r\n}\r\n\r\nconst dispatchSelectYear = function(store, league, year) {\r\n  return store.dispatch(selectYear(league, year))\r\n}\r\n\r\nconst updateMatchDaysIfNecessary = (store) => {\r\n  let state = store.getState()\r\n  if (!areSelectedMatchDaysPresent(store)) {\r\n    state = store.getState()\r\n    dispatchFetchMatchDays(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state)\r\n    )\r\n  }\r\n  state = store.getState()\r\n  let selectedMatchDay = getSelectedMatchDay(state)\r\n  selectedMatchDay = selectedMatchDay ? selectedMatchDay : 1\r\n  dispatchSelectMatchDay(store, selectedMatchDay)\r\n\r\n  if (!areSelectedMatchsPresent(store)) {\r\n    const state = store.getState()\r\n    dispatchFetchMatchs(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state),\r\n      getSelectedMatchDay(state)\r\n    )\r\n  }\r\n}\r\n\r\nconst dispatchSwitchMenu = (store, id) => store.dispatch(switchMenu(id))\r\n\r\nexport {\r\n  dispatchSwitchMenu,\r\n  dispatchFetchInitial,\r\n  dispatchFetchLeagues,\r\n  dispatchFetchTeams,\r\n  dispatchFetchMatchDays,\r\n  dispatchFetchMatchs,\r\n  dispatchFetchYears,\r\n  dispatchSelectMatchDay,\r\n  dispatchSelectLeague,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport ListNavigator from './ListNavigator'\r\n\r\nimport {\r\n  dispatchFetchMatchs,\r\n  dispatchSelectMatchDay,\r\n} from '../actions/ActionBuilderWithStore'\r\n\r\nimport { areSelectedMatchsPresent } from '../utils/storeHelpers'\r\nimport { getSelectedMatchDays } from '../utils/filter'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nclass MatchdayNavigator extends Component {\r\n  onSelect(id) {\r\n    const store = this.props.store\r\n    dispatchSelectMatchDay(store, parseInt(id, 10))\r\n    this.updateMatchs()\r\n  }\r\n\r\n  updateMatchs() {\r\n    const store = this.props.store\r\n    if (!areSelectedMatchsPresent(store)) {\r\n      const state = store.getState()\r\n      dispatchFetchMatchs(\r\n        store,\r\n        getSelectedLeague(state),\r\n        getSelectedYear(state),\r\n        getSelectedMatchDay(state)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantMatchDays = getSelectedMatchDays(state)\r\n    const selectedMatchDay = getSelectedMatchDay(state)\r\n    return (\r\n      <ListNavigator\r\n        data={relevantMatchDays}\r\n        selected={selectedMatchDay}\r\n        onSelect={this.onSelect.bind(this)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchdayNavigator\r\n","import { connect } from 'react-redux'\r\nimport { RefreshButton } from '../components/RefreshButton'\r\nimport { refreshMatchs } from '../actions/ActionBuilder'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false,\r\n  isUpdating: state.ui.isRefreshingMatchs,\r\n  state,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClick: (state) => {\r\n      console.log('refresh')\r\n      dispatch(refreshMatchs(state))\r\n    },\r\n  }\r\n}\r\n\r\nexport const RefreshCurrentMatchDayButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RefreshButton)\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const RefreshButton = ({ onClick, disabled, isUpdating, state }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={() => onClick(state)}\r\n      disabled={disabled && !isUpdating}\r\n    >\r\n      <FontAwesomeIcon icon=\"sync\" spin={isUpdating} />\r\n    </button>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { switchModel } from '../actions/ActionBuilder';\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"sliders-h\" />\r\n    </button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(switchModel(ownProps.selectedModelId)) \r\n    }\r\n  }\r\n}\r\n\r\nexport const MatchDayOptionsButton = connect(mapStateToProps, mapDispatchToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n    </button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  onClick: () => {\r\n    console.log('refresh')\r\n  },\r\n  disabled: true,\r\n})\r\n\r\nexport const MatchDayViewSettings = connect(mapStateToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport {\r\n  getIsInitializing,\r\n  getIsLoadingLeagues,\r\n  getIsLoadingYears,\r\n  getIsLoadingAllMatchDays,\r\n  getIsLoadingTeams,\r\n  getIsLoadingMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport default class LoadingPage extends React.Component {\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsInitializing(state)) {\r\n      return <h2>Intializing...</h2>\r\n    }\r\n    if (getIsLoadingLeagues(state)) {\r\n      return <h2>Loading Leagues...</h2>\r\n    }\r\n    if (getIsLoadingYears(state)) {\r\n      return <h2>Loading Years...</h2>\r\n    }\r\n    if (getIsLoadingAllMatchDays(state)) {\r\n      return <h2>Loading Matchdays...</h2>\r\n    }\r\n    if (getIsLoadingTeams(state)) {\r\n      return <h2>Loading Teams...</h2>\r\n    }\r\n    if (getIsLoadingMatchDay(state)) {\r\n      return <h2>Loading Matchs...</h2>\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport const IconButton = ({ icon, disabled, handleClick }) => {\r\n  return (\r\n    <a href=\"#\" onClick={handleClick} disabled={disabled}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </a>\r\n  )\r\n}\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearAll } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleClick: () => {\r\n    dispatch(clearAll())\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  icon: 'trash-alt',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearAllButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearAllButton\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearSeason } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  handleClick: () => {\r\n    dispatch(clearSeason(ownProps.league, ownProps.year))\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  icon: 'trash',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearSeasonButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearSeasonButton\r\n","import { groupByArray, sortByField } from './listUtils'\r\n\r\nconst getTeamCount = (state) => {\r\n  return Object.keys(state.model.teams).length\r\n}\r\n\r\nconst getSeasonsCount = (state) => {\r\n  return groupByArray(state.model.matchs, (x) => x.league).map((x) => ({\r\n    league: x.key,\r\n    name: state.model.leagues.find((y) => y.id === x.key).name,\r\n    seasons: sortByField(\r\n      groupByArray(x.values, (y) => y.year).map((z) => ({\r\n        year: z.key,\r\n        count: groupByArray(z.values, (z1) => z1.matchDayId).length,\r\n      })),\r\n      'year'\r\n    ),\r\n  }))\r\n}\r\n\r\nexport const getStorageStats = (state) => ({\r\n  teamCount: getTeamCount(state),\r\n  leagues: getSeasonsCount(state),\r\n})\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ClearAllButton from './ClearAllButton'\r\nimport ClearSeasonButton from './ClearSeasonButton'\r\nimport { getStorageStats } from '../../utils/stateStats'\r\n\r\nconst renderSeasonRow = (league, year, count) => {\r\n  return (\r\n    <div className=\"storage-row\" key={`${league}_${year}`}>\r\n      {year} ({count}) <ClearSeasonButton league={league} year={year} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StorageTemplate = ({ teamCount, leagues }) => {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Lokaler Speicher <ClearAllButton />\r\n      </h3>\r\n      <div className=\"storage-header\">Allgemeine Informationen</div>\r\n      <div className=\"storage-row\">Mannschaften ({teamCount})</div>\r\n      <div className=\"storage-header\">Ligen</div>\r\n      <div>{leagues.count}</div>\r\n      {leagues.map((l) => (\r\n        <div key={l.league}>\r\n          <div className=\"storage-sub-header\">{l.name}</div>\r\n          {l.seasons.map((s) => renderSeasonRow(l.league, s.year, s.count))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => getStorageStats(state)\r\n\r\nconst Storage = connect(mapStateToProps)(StorageTemplate)\r\n\r\nexport default Storage\r\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport const PercentageButton = ({ onClick, disabled, state }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-secondary\"\n      data-toggle=\"button\"\n      aria-pressed={state.ui.showPercentage}\n      onClick={() => onClick(state)}\n      disabled={disabled}\n    >\n      <FontAwesomeIcon icon=\"percentage\" />\n    </button>\n  )\n}\n\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport './App.css'\r\n\r\nimport Matchs from './Matchs'\r\nimport MatchdayNavigator from '../components/MatchdayNavigator'\r\n\r\nimport { dispatchFetchInitial } from '../actions/ActionBuilderWithStore'\r\nimport { getSelectedMatchs } from '../utils/filter'\r\nimport { getIsLoading } from '../reducers/selectors/uiSelector'\r\nimport { getAllTeams } from '../reducers/selectors/modelSelector'\r\nimport { RefreshCurrentMatchDayButton } from './RefreshCurrentMatchDayButton'\r\nimport { MatchDayOptionsButton } from './MatchDayOptionsButton'\r\nimport { MatchDayViewSettings } from './MatchDayViewSettings'\r\n\r\nimport LoadingPage from './LoadingPage'\r\nimport Storage from './Storage'\r\nimport { getSeasonInfo } from '../stats/seasonInfo'\r\nimport { PercentageButton } from '../components/PercentageButton'\r\n\r\nimport * as actionBuilder from '../actions/ActionBuilder'\r\n\r\nclass App extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const store = this.props.store\r\n    dispatchFetchInitial(store)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsLoading(state)) return <LoadingPage />\r\n    if (state.ui.menuId === 'storage') return <Storage />\r\n\r\n    console.log('render normal')\r\n    const relevantMatchs = getSelectedMatchs(state)\r\n    const teams = getAllTeams(state)\r\n    const seasonInfo = getSeasonInfo(state)\r\n    const showPercentage = state.ui.showPercentage\r\n    const selectedModelId = state.ui.selectedModelId\r\n    return (\r\n      <div className=\"container.fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className=\"btn-toolbar\"\r\n            role=\"toolbar\"\r\n            aria-label=\"Toolbar with button groups\"\r\n          >\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayViewSettings />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayOptionsButton selectedModelId={state.ui.selectedModelId} />\r\n            </div>\r\n\r\n            <MatchdayNavigator store={store} />\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <PercentageButton\r\n                state={state}\r\n                onClick={(s) =>\r\n                  this.props.store.dispatch(\r\n                    actionBuilder.showPercentage(!s.ui.showPercentage)\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <RefreshCurrentMatchDayButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid\">\r\n            <Matchs\r\n              matchs={relevantMatchs}\r\n              teams={teams}\r\n              seasonInfo={seasonInfo}\r\n              showPercentage={showPercentage}\r\n              selectedModelId={selectedModelId}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport {\r\n  dispatchSelectLeague,\r\n  dispatchFetchYears,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n  dispatchSwitchMenu,\r\n} from '../actions/ActionBuilderWithStore'\r\nimport ListNavigator from './ListNavigator'\r\nimport { getSelectedYears } from '../utils/filter'\r\nimport { getAllLeagues } from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass Navbar extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async leagueChange(event) {\r\n    console.log(event.target.id)\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, 'matchs')\r\n    dispatchSelectLeague(store, event.target.id)\r\n    dispatchFetchYears(store, event.target.id)\r\n\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  async yearChange(id) {\r\n    const store = this.props.store\r\n    let state = store.getState()\r\n    const year = parseInt(id, 10)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    dispatchSelectYear(store, selectedLeague, year)\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  selectMenu(event) {\r\n    console.log(event.target.id)\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, event.target.id)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantYears = getSelectedYears(state)\r\n    const leagues = getAllLeagues(state)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    const selectedYear = getSelectedYear(state)\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {selectedLeague}\r\n        </a>\r\n        <ListNavigator\r\n          buttonStyles={'btn-sm btn-light'}\r\n          bgStyles={'btn-light'}\r\n          selected={selectedYear}\r\n          data={relevantYears}\r\n          onSelect={this.yearChange.bind(this)}\r\n        />\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <span className=\"navbar-text\">\r\n            <FontAwesomeIcon icon=\"futbol\" />\r\n            &nbsp;\r\n            <b>Fußball</b>\r\n          </span>\r\n          <ul className=\"navbar-nav mr-auto\" key=\"Football\">\r\n            {leagues.map((l) => (\r\n              <li\r\n                className={`nav-item ${\r\n                  l.id === selectedLeague ? 'active' : ''\r\n                }`}\r\n                key={l.id}\r\n              >\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id={l.id}\r\n                  onClick={this.leagueChange.bind(this)}\r\n                >\r\n                  {l.name}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <span className=\"navbar-text\">\r\n            <b>Einstellungen</b>\r\n            <ul className=\"navbar-nav mr-auto\" key=\"Settings\">\r\n              <li className={`nav-item`} key=\"storage\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id=\"storage\"\r\n                  onClick={this.selectMenu.bind(this)}\r\n                >\r\n                  Speicher\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nexport default Navbar\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <p className=\"text-center font-italic\">\r\n          <span className=\"badge badge-dark\">yaspp</span>\r\n          &nbsp; yet another sports page\r\n        </p>\r\n        <Navbar store={this.props.store} />\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Footer.css'\r\nimport { getSelectedMatchs, getLatestUpdate } from '../utils/filter'\r\nimport { formatUpdateDate } from '../utils/dateFormat'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lastUpdate: getLatestUpdate(getSelectedMatchs(state)),\r\n})\r\n\r\nconst FooterTemplate = ({ lastUpdate }) => (\r\n  <footer>\r\n    <hr />\r\n    <div className=\"row\">\r\n      <div className=\"col self-align-start\">\r\n        <small>\r\n          <i>aktualisiert</i> {formatUpdateDate(lastUpdate)}\r\n        </small>\r\n      </div>\r\n      <div className=\"col self-align-end text-right\">\r\n        <small>\r\n          <i>\r\n            powered by <a href=\"https://www.openligadb.de\">Openliga DB</a>\r\n          </i>\r\n        </small>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nconst Footer = connect(mapStateToProps)(FooterTemplate)\r\nexport default Footer\r\n","import moment from 'moment'\r\n\r\nexport function formatUpdateDate(lastUpdate) {\r\n  const lastUpdateDate = moment(lastUpdate)\r\n  const now = moment()\r\n  var dt = moment.duration(lastUpdateDate.diff(now))\r\n\r\n  return dt.asYears() > -1\r\n    ? dt.humanize(true)\r\n    : lastUpdateDate.format('DD.MM.YY HH:mm')\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport App from './parts/App'\r\nimport Header from './parts/Header'\r\nimport Footer from './parts/Footer'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport * as icons from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(icons.faSync)\r\nlibrary.add(icons.faSlidersH)\r\nlibrary.add(icons.faTrashAlt)\r\nlibrary.add(icons.faTrash)\r\nlibrary.add(icons.faCaretLeft)\r\nlibrary.add(icons.faCaretRight)\r\nlibrary.add(icons.faFutbol)\r\nlibrary.add(icons.faAngleDoubleDown)\r\nlibrary.add(icons.faInfo)\r\nlibrary.add(icons.faInfoCircle)\r\nlibrary.add(icons.faPercentage)\r\nlibrary.add(icons.faEllipsisV)\r\nlibrary.add(icons.faEllipsisH)\r\nlibrary.add(icons.faBars)\r\nlibrary.add(icons.faColumns)\r\nlibrary.add(icons.faTable)\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    const store = this.props.store\r\n    return (\r\n      <div>\r\n        <Header store={store} />\r\n        <App store={store} />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Root\r\n","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nconst initialState = {\r\n  menuId: '',\r\n  selectedLeague: '',\r\n  selectedYear: '',\r\n  selectedMatchDay: 0,\r\n\r\n  isInitializing: false,\r\n  isLoadingLeagues: false,\r\n  isLoadingYears: false,\r\n  isLoadingTeams: false,\r\n  isLoadingAllMatchDays: false,\r\n  isLoadingMatchDay: false,\r\n  isRefreshingMatchs: false,\r\n\r\n  showPercentage: false,\r\n  selectedModelId: 0,\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  switch (action.type) {\r\n    case actions.SelectMatchDay:\r\n      {\r\n        return {\r\n          ...state,\r\n          selectedMatchDay: action.selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.SelectLeague:\r\n      {\r\n        const selectedLeague = action.selectedLeague\r\n        return {\r\n          ...state,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.SelectYear:\r\n      {\r\n        const selectedYear = action.selectedYear\r\n        return {\r\n          ...state,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.RequestLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeague\r\n        return { ...state,\r\n          isLoadingLeagues\r\n        }\r\n      }\r\n    case actions.RequestYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        return { ...state,\r\n          isLoadingYears\r\n        }\r\n      }\r\n    case actions.RequestTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.RequestMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        return { ...state,\r\n          isLoadingMatchDays\r\n        }\r\n      }\r\n    case actions.RequestMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return { ...state,\r\n          isLoadingMatchs\r\n        }\r\n      }\r\n    case actions.ReceiveLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeagues\r\n        const selectedLeague = action.leagues[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingLeagues,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.ReceiveYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        const years = action.yearsByLeague ?\r\n          action.yearsByLeague[action.selectedLeague] :\r\n          undefined\r\n        const selectedYear = years && years.length > 0 ? years[0].id : undefined\r\n        return {\r\n          ...state,\r\n          isLoadingYears,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.ReceiveTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.ReceiveMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        const selectedMatchDay = action.matchDays[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingMatchDays,\r\n          selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.ReceiveMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return {\r\n          ...state,\r\n          isLoadingMatchs,\r\n        }\r\n      }\r\n    case actions.StartInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.EndInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.StartRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.EndRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.SwitchMenu:\r\n      {\r\n        return { ...state,\r\n          menuId: action.menuId\r\n        }\r\n      }\r\n    case actions.ShowPercentage:\r\n      {\r\n        return { ...state,\r\n          showPercentage: action.payload\r\n        }\r\n      }\r\n    case actions.SwitchModel:\r\n      {\r\n        return { ...state,\r\n          selectedModelId: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nexport const initialState = {\r\n  leagues: [],\r\n  yearsByLeague: {},\r\n  teams: {},\r\n  matchDays: [],\r\n  matchs: [],\r\n  teamsByLeagueAndYear: [],\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const modelReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  console.log(action)\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case actions.ReceiveLeagues: {\r\n      const leagues = [...action.leagues]\r\n      return {\r\n        ...state,\r\n        leagues,\r\n      }\r\n    }\r\n    case actions.ReceiveYears: {\r\n      const yearsByLeague = { ...state.yearsByLeague, ...action.yearsByLeague }\r\n      return {\r\n        ...state,\r\n        yearsByLeague,\r\n      }\r\n    }\r\n    case actions.ReceiveTeams: {\r\n      const teams = {\r\n        ...state.teams,\r\n        ...action.teams,\r\n      }\r\n      const teamsByLeagueAndYear = [\r\n        ...state.teamsByLeagueAndYear,\r\n        ...action.teamsByLeagueAndYear,\r\n      ]\r\n      return { ...state, teams, teamsByLeagueAndYear }\r\n    }\r\n    case actions.ReceiveMatchDays: {\r\n      const matchDays = [...state.matchDays, ...action.matchDays]\r\n\r\n      return {\r\n        ...state,\r\n        matchDays,\r\n      }\r\n    }\r\n    case actions.ReceiveMatchs: {\r\n      const teams = { ...state.teams, ...action.teams }\r\n\r\n      const matchDict = state.matchs.reduce((res,x) => {\r\n        res[x.id]=x\r\n        return res\r\n      }, {})\r\n      \r\n      for (let i=0;i<action.matchs.length;++i) {\r\n        const match = action.matchs[i]\r\n        matchDict[match.id]=match\r\n      }\r\n      const matchs = Object.values(matchDict)\r\n\r\n      return {\r\n        ...state,\r\n        matchs,\r\n        teams,\r\n      }\r\n    }\r\n    case actions.clearAll: {\r\n      return initialState\r\n    }\r\n    case actions.clearSeason: {\r\n      const { league, year } = action.payload\r\n      return {\r\n        ...state,\r\n        matchDays: state.matchDays.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        matchs: state.matchs.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        teamsByLeagueAndYear: state.teamsByLeagueAndYear.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { modelReducer } from './modelReducer'\r\n\r\nexport const reducer = combineReducers({ ui: uiReducer, model: modelReducer })\r\n","import * as React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nimport { reducer } from './reducers'\r\nimport { saveState, loadState } from './utils/localStorage'\r\nimport { throttle } from 'lodash'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/de'\r\n\r\n/******************* Set globals ******************/\r\nmoment.locale(\"de\")\r\n\r\n/******************* Create Store ******************/\r\nconst thunk = ReduxThunk\r\nconst persistedState = loadState()\r\nconst store = createStore(reducer, persistedState, applyMiddleware(thunk))\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const model = store.getState().model\r\n    saveState({ model })\r\n  }, 1000)\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Root store={store} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","const SERIALIZED_STATE_KEY = 'yaspp_state'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(SERIALIZED_STATE_KEY)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(SERIALIZED_STATE_KEY, serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}"],"sourceRoot":""}