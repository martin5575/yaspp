{"version":3,"sources":["reducers/selectors/uiSelector.js","reducers/selectors/modelSelector.js","utils/listUtils.js","stats/statsType.js","stats/seasonInfo.js","maths/probabilities.js","parts/MatchProbabilityDetails.jsx","parts/Match.jsx","parts/MatchsPerDay.jsx","parts/Matchs.jsx","components/ListNavigator.jsx","actions/actions.js","services/leagues.js","services/index.js","services/mapOpenLigaDB.js","utils/filter.js","actions/ActionBuilder.js","utils/storeHelpers.js","actions/ActionBuilderWithStore.js","components/MatchdayNavigator.jsx","parts/RefreshCurrentMatchDayButton.jsx","components/RefreshButton.jsx","parts/MatchDayOptionsButton.jsx","parts/MatchDayViewSettings.jsx","parts/LoadingPage.jsx","components/IconButton.jsx","parts/Storage/ClearAllButton.jsx","parts/Storage/ClearSeasonButton.jsx","utils/stateStats.js","parts/Storage/index.jsx","components/PercentageButton.jsx","parts/App.jsx","components/Navbar.jsx","parts/Header.jsx","parts/Footer.jsx","utils/dateFormat.js","Root.jsx","reducers/uiReducer.js","reducers/modelReducer.js","reducers/index.js","index.js","utils/localStorage.js"],"names":["getUi","prop","getSelectedLeague","pipe","getSelectedYear","getSelectedMatchDay","getIsInitializing","getIsLoadingLeagues","getIsLoadingYears","getIsLoadingTeams","getIsLoadingAllMatchDays","getIsLoadingMatchDay","getIsLoading","getModel","getAllLeagues","getAllTeams","getTeamsByLeagueAndYear","getAllMatchDays","getAllMatchs","getAllYearsByLeague","groupByArray","xs","key","reduce","rv","x","v","Function","el","find","r","values","push","dictionarize","array","result","y","id","sortByField","sort","compare","a","b","sum","res","definitions","short","description","getPoints","gf","ga","sumFields","teamInfo","key1","key2","undefined","aggregateSeasonInfo","matchs","home","map","team","hgf","fullTimeHome","hga","fullTimeAway","hp","match","hm","length","away","agf","aga","ap","am","fullWithTotal","concat","_toConsumableArray","_objectSpread","tgf","tga","tp","tm","totalGA","aggregate","avgGA","hdf","adf","tdf","getHG_AG_AVG","infoHome","infoAway","getTG_TG_AVG","getStats","statsType","goals","getHGDF_AGDF_AVG","getTGDF_TGDF_AVG","formatNumber","n","digits","toFixed","poissonProbability","lambda","k","Math","pow","exp","i","faculty","calcLossProbs","probs","probSum","j","calcWinProbs","calcTieProbs","calcResultProbs","hg","ag","arguments","minProb","max","row","formatPercentage","formatRate","min","MatchProbabilityDetails","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","_inherits","_createClass","value","props","stats","React","createElement","className","style","backgroundColor","showPercentage","Component","formatProbOrRate","Match","_getPrototypeOf2","_this","_len","args","Array","_key","call","logoSize","_this2","teams","seasonInfo","modelKey","probabilityDetailsMatchId","isProbabilityDetailsShown","teamHome","teamHomeId","teamAway","teamAwayId","calcStats","formatedStats","formatStats","win","tie","loss","calcWinLossTieProbs","formatProbs","Fragment","data-toggle","title","moment","lastUpdate","format","src","iconUrl","alt","shortName","height","width","halfTimeHome","halfTimeAway","isFinished","Button","size","color","onClick","toggleProbabilityDetails","FontAwesomeIcon","icon","Collapse","isOpen","MatchsPerDay","statsTitle","statsDescription","scope","date","m","Matchs","func","groupByMatchDay","matchDateTime","groupedMatchs","Object","entries","selectedModelId","statsHeader","item","getShort","getDescription","gm","ListNavigator","_Component","event","node","target","parentElement","onSelect","data","buttonStyles","bgStyles","currentIndex","findIndex","selected","selectedItem","nextIndex","prevIndex","nextId","prevId","role","aria-label","disabled","bind","aria-haspopup","aria-expanded","name","aria-labelledby","RequestLeagues","RequestYears","RequestTeams","RequestMatchDays","RequestMatchs","ReceiveLeagues","ReceiveYears","ReceiveTeams","ReceiveMatchDays","ReceiveMatchs","SelectMatchDay","SelectLeague","SelectYear","StartRefreshMatchs","leagues","years","openligaBaseUrl","mapTeam","olTeam","teamId","teamIconUrl","teamName","getSelectedMatchs","state","selectedLeague","selectedYear","selectedMatchDay","allMatchs","filter","league","year","matchDayId","getSelectedYears","toString","getSelectedMatchDays","existsMatchDay","existLeagues","allLeagues","existYears","Error","yearsOfLeague","existTeams","relevantTeams","existMatchDays","relevantDay","getLatestUpdate","reverse","selectMatchDay","type","actions","selectLeague","selectYear","receiveMatchDays","json","isLoadingMatchDays","matchDays","olGroup","parseInt","groupOrderID","groupName","groupID","fetchMatchDays","dispatch","requestMatchDays","url","fetch","then","service","fetchMatchs","isLoadingMatchs","requestMatchs","matchday","olMatchs","olMatch","twoTeams","team1","team2","t1","t2","mapper","matchID","matchIsFinished","group","leagueKey","leagueId","lastUpdateDateTime","halfTimeResult","matchResults","resultName","fullTimeResult","pointsTeam1","pointsTeam2","receiveMatchs","refreshMatchs","isRefreshingMatchs","console","log","updateMatchsRequired","endRefreshMatchs","fetchTeams","isLoadingTeams","requestTeams","teamData","teamsByLeagueAndYear","receiveTeams","fetchLeagues","isLoadingLeagues","fetchYears","isLoadingYears","requestYears","yearsByLeague","receiveYears","startInitializing","isInitializing","endInitializing","areSelectedMatchsPresent","store","getState","dispatchFetchMatchs","matchDay","dispatchFetchInitial","fetchInitial","dispatchFetchYears","dispatchSelectMatchDay","dispatchSelectLeague","dispatchSelectYear","updateMatchDaysIfNecessary","areSelectedMatchDaysPresent","dispatchFetchMatchDays","dispatchSwitchMenu","menuId","switchMenu","MatchdayNavigator","updateMatchs","relevantMatchDays","RefreshCurrentMatchDayButton","connect","isUpdating","ui","_ref","spin","MatchDayOptionsButton","ownProps","payload","currentId","switchModel","MatchDayViewSettings","LoadingPage","IconButton","handleClick","ClearAllButton","ClearSeasonButton","getTeamCount","keys","model","getSeasonsCount","seasons","z","count","z1","Storage","teamCount","getStorageStats","l","s","PercentageButton","aria-pressed","_regeneratorRuntime","e","t","prototype","hasOwnProperty","o","defineProperty","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","f","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","App","_componentDidMount","forceUpdate","unsubscribe","subscribe","update","_asyncToGenerator","_callee","_context","relevantMatchs","previousMatchs","getSeasonInfo","matchId","actionBuilder","Navbar","_leagueChange","_yearChange","_x","_x2","_callee2","_context2","relevantYears","href","yearChange","data-target","aria-controls","leagueChange","selectMenu","Header","Footer","lastUpdateDate","now","dt","duration","diff","asYears","humanize","formatUpdateDate","library","add","icons","Root","initialState","isLoadingAllMatchDays","isLoadingMatchDay","reducer","combineReducers","action","isLoadingLeague","matchDict","_action$payload","locale","thunk","ReduxThunk","persistedState","serializedState","localStorage","getItem","JSON","parse","error","loadState","createStore","applyMiddleware","throttle","stringify","setItem","saveState","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.5e3c8aee.chunk.js","sourcesContent":["import { prop, pipe } from 'ramda'\r\n\r\nexport const getUi = prop('ui')\r\n\r\nexport const getSelectedLeague = pipe(\r\n  getUi,\r\n  prop('selectedLeague')\r\n)\r\n\r\nexport const getSelectedYear = pipe(\r\n  getUi,\r\n  prop('selectedYear')\r\n)\r\n\r\nexport const getSelectedMatchDay = pipe(\r\n  getUi,\r\n  prop('selectedMatchDay')\r\n)\r\n\r\nexport const getIsInitializing = pipe(\r\n  getUi,\r\n  prop('isInitializing')\r\n)\r\n\r\nexport const getIsLoadingLeagues = pipe(\r\n  getUi,\r\n  prop('isLoadingLeagues')\r\n)\r\n\r\nexport const getIsLoadingYears = pipe(\r\n  getUi,\r\n  prop('isLoadingYears')\r\n)\r\n\r\nexport const getIsLoadingTeams = pipe(\r\n  getUi,\r\n  prop('isLoadingTeams')\r\n)\r\n\r\nexport const getIsLoadingAllMatchDays = pipe(\r\n  getUi,\r\n  prop('isLoadingAllMatchDays')\r\n)\r\n\r\nexport const getIsLoadingMatchDay = pipe(\r\n  getUi,\r\n  prop('isLoadingMatchDay')\r\n)\r\n\r\nexport const getIsLoading =\r\n  getIsInitializing ||\r\n  getIsLoadingLeagues ||\r\n  getIsLoadingYears ||\r\n  getIsLoadingTeams ||\r\n  getIsLoadingAllMatchDays ||\r\n  getIsLoadingMatchDay\r\n","import { prop, pipe } from 'ramda'\r\n\r\nexport const getModel = prop('model')\r\n\r\nexport const getAllLeagues = pipe(\r\n  getModel,\r\n  prop('leagues')\r\n)\r\n\r\nexport const getAllTeams = pipe(\r\n  getModel,\r\n  prop('teams')\r\n)\r\n\r\nexport const getTeamsByLeagueAndYear = pipe(\r\n  getModel,\r\n  prop('teamsByLeagueAndYear')\r\n)\r\n\r\nexport const getAllMatchDays = pipe(\r\n  getModel,\r\n  prop('matchDays')\r\n)\r\n\r\nexport const getAllMatchs = pipe(\r\n  getModel,\r\n  prop('matchs')\r\n)\r\n\r\nexport const getAllYearsByLeague = pipe(\r\n  getModel,\r\n  prop('yearsByLeague')\r\n)\r\n","export const groupByField = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    ;(rv[x[key]] = rv[x[key]] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByFunc = (xs, func) => {\r\n  return xs.reduce((rv, x) => {\r\n    const key = func(x)\r\n    ;(rv[key] = rv[key] || []).push(x)\r\n    return rv\r\n  }, {})\r\n}\r\n\r\nexport const groupByArray = (xs, key) => {\r\n  return xs.reduce((rv, x) => {\r\n    let v = key instanceof Function ? key(x) : x[key]\r\n    let el = rv.find((r) => r && r.key === v)\r\n\r\n    if (el) {\r\n      el.values.push(x)\r\n    } else {\r\n      rv.push({ key: v, values: [x] })\r\n    }\r\n\r\n    return rv\r\n  }, [])\r\n}\r\n\r\nexport const dictionarize = (array) => {\r\n  return array.reduce((result, y) => {\r\n    result[y.id] = y\r\n    return result\r\n  }, {})\r\n}\r\n\r\nexport const sortByField = (xs, key) => xs.sort(compare(key))\r\n\r\nexport const compare = (key) => (a, b) => {\r\n  if (a[key] < b[key]) return -1\r\n  if (a[key] > b[key]) return 1\r\n  return 0\r\n}\r\n\r\nexport const sum = (xs) => xs.reduce((res, x) => res + x, 0)\r\n","export const TotalGoalsVsTotalGoals = \"tg_vs_tg\"\nexport const TotalGoalsVsTotalGoalsWithDefenseFactor = \"tgdf_vs_tgdf\"\nexport const HomeGoalsVsAwayGoals = \"hg_vs_ag\"\nexport const HomeGoalsVsAwayGoalsWithDefenseFactor = \"hgdf_vs_agdf\"\n//export const TotalPointsVsTotalPoints = \"tp_vs_tp\"\n\nexport const getKeys = () => {     \n    return [\n        TotalGoalsVsTotalGoals,\n        TotalGoalsVsTotalGoalsWithDefenseFactor,\n        HomeGoalsVsAwayGoals,\n        HomeGoalsVsAwayGoalsWithDefenseFactor\n    ]\n}\n\nconst definitions = [\n    {\n        key: TotalGoalsVsTotalGoals,\n        short: \"t-t\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt.\"\n    },\n    {\n        key: TotalGoalsVsTotalGoalsWithDefenseFactor,\n        short: \"t-t*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der beiden Mannschaften werden jeweils alle Tore (heim & auswärts) genutzt. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    },    {\n        key: HomeGoalsVsAwayGoals,\n        short: \"h-a\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore.\"\n    },\n    {\n        key: HomeGoalsVsAwayGoalsWithDefenseFactor,\n        short: \"h-a*\",\n        description: \"Zur Bestimmung der Torwahrscheinlichkeit der Heimmannschaft werden nur die Heimtore genutzt und für die Auswärtsmannschaft die Auswärtstore. Zusätzlich wird die Verteidigungsstärke der gegnerischen Mannschaft berücksichtigt.\"\n    }\n]\n\nconst find = (key) => definitions.find(x=>x.key===key)\n\nexport const getDescription = (key) => {\n    const item = find(key)\n    return item ? item.description : \"\"\n}\n\nexport const getShort = (key) => {\n    const item = find(key)\n    return item ? item.short : \"\"\n}\n\nexport const getNextId = (currentId) => ++currentId % definitions.length\n\nexport const getKey = (currentId) => definitions[currentId].key","import {\n  getSelectedLeague,\n  getSelectedYear,\n  getSelectedMatchDay,\n} from '../reducers/selectors/uiSelector'\nimport {\n  getAllMatchs\n} from '../reducers/selectors/modelSelector'\nimport {\n  groupByArray,\n  sum\n} from '../utils/listUtils'\n\nimport * as stats from './statsType';\n\nconst getPoints = (gf, ga) => {\n  if (gf > ga) return 3\n  if (gf === ga) return 1\n  return 0\n}\n\nconst getHomePoints = (match) =>\n  getPoints(match.fullTimeHome, match.fullTimeAway)\nconst getAwayPoints = (match) =>\n  getPoints(match.fullTimeAway, match.fullTimeHome)\n\n\n  const sumFields = (teamInfo, key1, key2) => {\n    return !teamInfo ?\n      undefined :\n      teamInfo[key1] && teamInfo[key2] ?\n      teamInfo[key1] + teamInfo[key2] :\n      teamInfo[key1] ?\n      teamInfo[key1] :\n      teamInfo[key2]\n  }\n  \n  const tgf = (teamInfo) => {\n    return sumFields(teamInfo, 'hgf', 'agf')\n  }\n  \n  const tga = (teamInfo) => {\n    return sumFields(teamInfo, 'hga', 'aga')\n  }\n  \n  const tp = (teamInfo) => {\n    return sumFields(teamInfo, 'hp', 'ap')\n  }\n  \n  const tm = (teamInfo) => {\n    return sumFields(teamInfo, 'hm', 'am')\n  }\n\n\nexport const getSeasonInfo = (state) => {\n  const league = getSelectedLeague(state)\n  const year = getSelectedYear(state)\n  const matchDay = getSelectedMatchDay(state)\n  const allMatchs = getAllMatchs(state)\n\n  const previousMatchs = !allMatchs ? [] :\n    // @ts-ignore\n    allMatchs.filter(\n      (m) => m.year === year && m.league === league && m.isFinished &&\n      m.matchDayId < matchDay\n    )\n    \n    return aggregateSeasonInfo(previousMatchs)\n  }\n\nexport const aggregateSeasonInfo = (matchs) => {\n  const home = groupByArray(matchs, 'teamHomeId').map((x) => ({\n    team: x.key,\n    hgf: sum(x.values.map((y) => y.fullTimeHome)),\n    hga: sum(x.values.map((y) => y.fullTimeAway)),\n    hp: sum(x.values.map((y) => getHomePoints(y))),\n    hm: x.values.length,\n  }))\n  const away = groupByArray(matchs, 'teamAwayId').map((x) => ({\n    team: x.key,\n    agf: sum(x.values.map((y) => y.fullTimeAway)),\n    aga: sum(x.values.map((y) => y.fullTimeHome)),\n    ap: sum(x.values.map((y) => getAwayPoints(y))),\n    am: x.values.length,\n  }))\n  \n  const fullByTeam = groupByArray([...home, ...away], 'team')\n  const full = fullByTeam.map((x) =>\n    x.values.reduce((res, x) => ({ ...res,\n      ...x\n    }), {hgf:0, hga:0, hp:0, hm:0, agf:0, aga:0, ap:0, am:0})\n  )\n\n  const fullWithTotal = full.map(x=>{\n    var res = {...x}\n    res.tgf = tgf(x)\n    res.tga = tga(x)\n    res.tp = tp(x)\n    res.tm = tm(x)\n    return res    \n  })\n\n  const totalGA = fullWithTotal.reduce((res,x)=>{\n    var aggregate = { ...res };\n    aggregate.hga += x.hga;\n    aggregate.hm += x.hm;\n    aggregate.aga += x.aga;\n    aggregate.am += x.am;\n    aggregate.tga += x.tga;\n    aggregate.tm += x.tm;\n    return aggregate;\n  }, {hga:0, hm:0, aga:0, am:0, tga:0, tm:0})\n\n  const avgGA = {\n    hga: totalGA.hm > 0 ? totalGA.hga / totalGA.hm : undefined,\n    aga: totalGA.am > 0 ? totalGA.aga / totalGA.am : undefined,\n    tga: totalGA.tm > 0 ? totalGA.tga / totalGA.tm : undefined\n  }\n\n  const fullWithDefenseFactor = fullWithTotal.map(x => ({...x, \n    hdf: avgGA.hga ? (x.hga/x.hm) / avgGA.hga : 1.0,\n    adf: avgGA.aga ? (x.aga/x.am) / avgGA.aga : 1.0,\n    tdf: avgGA.tga ? (x.tga/x.tm) / avgGA.tga : 1.0\n    })\n  )\n\n  return fullWithDefenseFactor\n}\n\n\n\nconst getHG_AG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.hm ? infoHome.hgf / infoHome.hm : undefined\n  const goalsAway =\n    infoAway && infoAway.am ? infoAway.agf / infoAway.am : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getHGDF_AGDF_AVG = (infoHome, infoAway) => {\n  const goals = getHG_AG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.adf ? goals.home * infoAway.adf :undefined,\n    away: goals.away && infoHome.hdf ? goals.away * infoHome.hdf: undefined\n  }\n}\n\nconst getTG_TG_AVG = (infoHome, infoAway) => {\n  const goalsHome =\n    infoHome && infoHome.tm ? infoHome.tgf / infoHome.tm : undefined\n  const goalsAway =\n    infoAway && infoAway.tm ? infoAway.tgf / infoAway.tm : undefined\n  return {\n    home: goalsHome,\n    away: goalsAway\n  }\n}\n\nconst getTGDF_TGDF_AVG = (infoHome, infoAway) => {\n  const goals = getTG_TG_AVG(infoHome, infoAway)\n  return {\n    home: goals.home && infoAway.tdf ? goals.home * infoAway.tdf :undefined,\n    away: goals.away && infoHome.tdf ? goals.away * infoHome.tdf :undefined,\n  }\n}\n\nconst getStats = (infoHome, infoAway, statsType) => {\n  switch (statsType) {\n    case stats.HomeGoalsVsAwayGoalsWithDefenseFactor:\n      return getHGDF_AGDF_AVG(infoHome, infoAway)\n    case stats.HomeGoalsVsAwayGoals:\n      return getHG_AG_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoalsWithDefenseFactor:\n      return getTGDF_TGDF_AVG(infoHome, infoAway)\n    case stats.TotalGoalsVsTotalGoals:\n    default:\n      return getTG_TG_AVG(infoHome, infoAway)\n  }\n}\n\nexport const calcStats = (seasonInfo, teamHomeId, teamAwayId, stats) => {\n  const infoHome = seasonInfo.find((x) => x.team === teamHomeId)\n  const infoAway = seasonInfo.find((x) => x.team === teamAwayId)\n  return getStats(infoHome, infoAway, stats)\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '0.0')\nexport const formatStats = (stats, digits = 2) => {\n  return `${formatNumber(stats.home, digits)}:${formatNumber(\n    stats.away,\n    digits\n  )}`\n}","const faculty = (k) => {\n  let r = 1.0\n  for (let i = 1; i <= k; ++i) {\n    r *= i\n  }\n  return r\n}\n\nconst poissonProbability = (lambda, k) => {\n  return (Math.pow(lambda, k) * Math.exp(-lambda)) / faculty(k)\n}\n\nexport const calcLossProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    for (let j = i + 1; j < n; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcWinProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 1; i < n; ++i) {\n    for (let j = 0; j < i; ++j) {\n      probSum += probs[i][j]\n    }\n  }\n  return probSum\n}\n\nexport const calcTieProbs = (probs) => {\n  let probSum = 0.0\n  const n = probs.length\n  for (let i = 0; i < n; ++i) {\n    probSum += probs[i][i]\n  }\n  return probSum\n}\n\nexport const calcWinLossTieProbs = (hg, ag) => {\n  const probs = calcResultProbs(hg, ag)\n  return {\n    win: calcWinProbs(probs),\n    tie: calcTieProbs(probs),\n    loss: calcLossProbs(probs),\n  }\n}\n\nexport const calcResultProbs = (hg, ag, n = 20, minProb = 0.01) => {\n  const hgf = Math.max(minProb, hg || 0.0)\n  const agf = Math.max(minProb, ag || 0.0)\n\n  let result = []\n  for (let i = 0; i <= n; ++i) {\n    let row = []\n    for (let j = 0; j <= n; ++j) {\n      row.push(poissonProbability(hgf, i) * poissonProbability(agf, j))\n    }\n    result.push(row)\n  }\n  return result\n}\n\nconst formatNumber = (n, digits) => (n ? n.toFixed(digits) : '-')\n\nexport const formatPercentage = (n, digits = 0) =>\n  n ? (n * 100.0).toFixed(digits) + '%' : '-'\n\nexport const formatProbs = (probs, n = 2) => {\n  return `${formatPercentage(probs.win, n)}/${formatPercentage(\n    probs.tie,\n    n\n  )}/${formatPercentage(probs.loss, n)}`\n}\n\nexport const formatRate = (n, digits = 1) =>\n  n ? Math.min(99.9, 1.0 / n).toFixed(digits) : '-'\n\nexport const getProbDescription = (hg, ag) => {\n  const results = calcResultProbs(hg, ag)\n  let content = ''\n  for (let i = 0; i <= 5; ++i) {\n    for (let j = 0; j <= 5; ++j) {\n      if (i + j > 6) continue\n      content += `<b>${i}:${j}</b> ${formatPercentage(results[i][j])}<br/>`\n    }\n  }\n  return `<div>${content}</div>`\n}\n","import React from 'react'\nimport './MatchProbabilityDetails.css'\nimport { formatStats, calcStats } from '../stats/seasonInfo'\nimport {\n  formatRate,\n  formatPercentage,\n  calcResultProbs,\n} from '../maths/probabilities'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\n\nconst formatProbOrRate = (showPercentage, value) =>\n  showPercentage ? formatPercentage(value) : formatRate(value)\n\nexport class MatchProbabilityDetails extends React.Component {\n  \n  render() {\n    const hg = this.props.stats.home\n    const ag = this.props.stats.away\n    const probs = calcResultProbs(hg, ag, 6, 0.01)\n     return (\n            <div className='container-fluid'>\n                {[0,1,2,3,4,5].map((i) => (\n                    <div className='row'>\n                        {[0,1,2,3,4,5].map((j) => (\n                        <div className='col-2 p-2 text-center score-card' style={{backgroundColor: `hsl(360 100% ${100 - (probs[i][j]*70.0)}%)`}}>\n                            <p className='mb-0'>{i}:{j}</p>\n                            <p><small>{formatProbOrRate(true, probs[i][j])}</small></p>\n                        </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n     )    \n  }\n}","import React from 'react'\r\nimport moment from 'moment'\r\nimport './Match.css'\r\nimport { formatStats, calcStats } from '../stats/seasonInfo'\r\nimport {\r\n  formatProbs,\r\n  formatRate,\r\n  calcWinLossTieProbs,\r\n  formatPercentage,\r\n  getProbDescription,\r\n} from '../maths/probabilities'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button, Collapse } from 'reactstrap'\r\nimport { MatchProbabilityDetails } from './MatchProbabilityDetails'\r\n\r\nconst formatProbOrRate = (showPercentage, value) =>\r\n  showPercentage ? formatPercentage(value) : formatRate(value)\r\n\r\nclass Match extends React.Component {\r\n  logoSize = 20\r\n  render() {\r\n\r\n\r\n    const match = this.props.match\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const modelKey = this.props.modelKey\r\n    const probabilityDetailsMatchId = this.props.probabilityDetailsMatchId;\r\n    const isProbabilityDetailsShown = match.id===probabilityDetailsMatchId;\r\n \r\n\r\n    const teamHome = teams[match.teamHomeId]\r\n    const teamAway = teams[match.teamAwayId]\r\n\r\n    const stats = calcStats(\r\n      seasonInfo,\r\n      match.teamHomeId,\r\n      match.teamAwayId,\r\n      modelKey\r\n    )\r\n    const digits = 1\r\n    const formatedStats = formatStats(stats, digits)\r\n    const probs = calcWinLossTieProbs(stats.home, stats.away)\r\n    const formatedProbs = formatProbs(probs)\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      <>\r\n      <div\r\n        className=\"row\"\r\n        key={match.id}\r\n        data-toggle=\"tooltip\"\r\n        title={\r\n          'aktualisiert: ' +\r\n          moment(match.lastUpdate).format('DD.MM.YY HH:mm:ss')\r\n        }\r\n      >\r\n        <div className=\"col-2 pr-0\">\r\n          <img\r\n            src={teamHome.iconUrl}\r\n            alt={teamHome.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n          <img\r\n            src={teamAway.iconUrl}\r\n            alt={teamAway.shortName}\r\n            height={this.logoSize}\r\n            width={this.logoSize}\r\n          />\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <small>\r\n            ({match.halfTimeHome}:{match.halfTimeAway})\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <small className={match.isFinished ? 'final ' : ''}>\r\n            {match.fullTimeHome}:{match.fullTimeAway}\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <Button size='sm' color=\"link\" onClick={()=>this.props.toggleProbabilityDetails(isProbabilityDetailsShown ? null: match.id)}>\r\n            <FontAwesomeIcon icon=\"angle-double-down\" color=\"gray\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"col-2 text-center\">\r\n          <small>\r\n            <i>{formatedStats}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.win)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.tie)}</i>\r\n          </small>\r\n        </div>\r\n        <div className=\"col-1 text-center\">\r\n          <small>\r\n            <i>{formatProbOrRate(showPercentage, probs.loss)}</i>\r\n          </small>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Collapse className='col-12' isOpen={isProbabilityDetailsShown}>\r\n          <MatchProbabilityDetails stats={stats} />\r\n        </Collapse>\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Match\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport Match from './Match'\r\nimport './MatchsPerDay.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass MatchsPerDay extends React.Component {\r\n  render() {\r\n    const statsTitle = this.props.statsTitle\r\n    const statsDescription = this.props.statsDescription\r\n    const showPercentage = this.props.showPercentage\r\n    return (\r\n      < >\r\n              <div className=\"row\" key=\"this.props.date\">\r\n                <div scope=\"col\" className=\"col-5 \">\r\n                  <small>\r\n                    {moment(this.props.date).format('ddd DD.MM HH:mm')}\r\n                  </small>\r\n                </div>\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-2 text-center\">\r\n                    <small>\r\n                      {statsTitle}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon icon=\"info-circle\" size=\"sm\" />\r\n                    </small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>1</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>0</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\">\r\n                    <small>2</small>\r\n                  </div>\r\n                )}\r\n                {statsTitle && (\r\n                  <div scope=\"col\" className=\"col-1 text-center\" />\r\n                )}\r\n              </div>\r\n              {this.props.matchs.map((m) => (\r\n                <Match\r\n                  match={m}\r\n                  teams={this.props.teams}\r\n                  seasonInfo={this.props.seasonInfo}\r\n                  key={m.id}\r\n                  showPercentage={showPercentage}\r\n                  modelKey={this.props.modelKey}\r\n                  probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n                  toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n                />\r\n              ))}\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchsPerDay\r\n","import React from 'react'\r\nimport './Matchs.css'\r\nimport MatchsPerDay from './MatchsPerDay'\r\nimport { groupByFunc, sortByField } from '../utils/listUtils'\r\nimport { getKey, getShort, getDescription } from '../stats/statsType'\r\n\r\nclass Matchs extends React.Component {\r\n  render() {\r\n    const matchs = this.props.matchs\r\n    const teams = this.props.teams\r\n    const seasonInfo = this.props.seasonInfo\r\n    const showPercentage = this.props.showPercentage\r\n    if (!matchs || matchs.length === 0 || !teams) return <div>empty</div>\r\n\r\n    const groupByMatchDay = groupByFunc(matchs, (x) =>\r\n      x.matchDateTime\r\n    )\r\n\r\n    // @ts-ignore\r\n    const groupedMatchs = Object.entries(groupByMatchDay)\r\n    sortByField(groupedMatchs, '0')\r\n\r\n    const selectedModelId = this.props.selectedModelId\r\n    const modelKey = getKey(selectedModelId)\r\n    const statsHeader = getShort(modelKey)\r\n    const statsDescription = getDescription(modelKey)\r\n    \r\n    return (\r\n      <div className=\"container-fluid schedule\">\r\n        {groupedMatchs.map((gm, i) => (\r\n          <MatchsPerDay\r\n            teams={teams}\r\n            seasonInfo={seasonInfo}\r\n            date={gm[0]}\r\n            matchs={gm[1]}\r\n            key={gm[0]}\r\n            statsTitle={i === 0 ? statsHeader : ''}\r\n            statsDescription={statsDescription}\r\n            modelKey={modelKey}\r\n            showPercentage={showPercentage}\r\n            probabilityDetailsMatchId={this.props.probabilityDetailsMatchId}\r\n            toggleProbabilityDetails={this.props.toggleProbabilityDetails}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Matchs\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass ListNavigator extends Component {\r\n  onSelect(event) {\r\n    let node = event.target\r\n    while (!node.id) {\r\n      node = node.parentElement\r\n    }\r\n    this.props.onSelect(node.id)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.data) return <div />\r\n    const buttonStyles = this.props.buttonStyles ? this.props.buttonStyles : ''\r\n    const bgStyles = this.props.bgStyles ? this.props.bgStyles : ''\r\n\r\n    const data = this.props.data\r\n    const currentIndex = data.findIndex((x) => x.id === this.props.selected)\r\n    const selectedItem = data[currentIndex]\r\n    const nextIndex = currentIndex + 1\r\n    const prevIndex = currentIndex - 1\r\n    const nextId = nextIndex < data.length ? data[nextIndex].id : undefined\r\n    const prevId = prevIndex >= 0 ? data[prevIndex].id : undefined\r\n\r\n    return (\r\n      <div\r\n        className={`btn-group ${bgStyles}`}\r\n        role=\"group\"\r\n        aria-label=\"Button group with nested dropdown\"\r\n      >\r\n        <Button\r\n\r\n          id={prevId}\r\n          className={`btn btn-secondary ${buttonStyles}`}\r\n          disabled={prevId === undefined}\r\n          onClick={this.onSelect.bind(this)}\r\n        >\r\n          <FontAwesomeIcon icon=\"caret-left\" />\r\n        </Button>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          <Button\r\n            id=\"btnGroupDrop1\"\r\n            className={`btn btn-secondary dropdown-toggle ${buttonStyles}`}\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            {selectedItem ? selectedItem.name : this.props.selected}\r\n          </Button>\r\n          <div className=\"dropdown-menu\" aria-labelledby=\"btnGroupDrop1\">\r\n            {this.props.data.map((x) => (\r\n              <Button\r\n                className=\"dropdown-item\"\r\n                id={x.id}\r\n                key={x.id}\r\n                onClick={this.onSelect.bind(this)}\r\n              >\r\n                {x.name}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n          <Button\r\n            id={nextId}\r\n            className={`btn btn-secondary ${buttonStyles}`}\r\n            onClick={this.onSelect.bind(this)}\r\n            disabled={nextId === undefined}\r\n          >\r\n            <FontAwesomeIcon icon=\"caret-right\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default ListNavigator\r\n","/******************* Actions ******************/\r\n\r\nexport const RequestLeagues = 'RequestLeagues'\r\nexport const RequestYears = 'RequestYears'\r\nexport const RequestTeams = 'RequestTeams'\r\nexport const RequestMatchDays = 'RequestMatchDays'\r\nexport const RequestMatchs = 'RequestMatchs'\r\nexport const ReceiveLeagues = 'ReceiveLeagues'\r\nexport const ReceiveYears = 'ReceiveYears'\r\nexport const ReceiveTeams = 'ReceiveTeams'\r\n\r\nexport const ReceiveMatchDays = 'ReceiveMatchDays'\r\nexport const ReceiveMatchs = 'ReceiveMatchs'\r\n\r\nexport const SelectMatchDay = 'SelectMatchDay'\r\nexport const SelectLeague = 'SelectLeague'\r\nexport const SelectYear = 'SelectYear'\r\n\r\nexport const StartInitializing = 'StartInitializing'\r\nexport const EndInitializing = 'EndInitializing'\r\n\r\nexport const StartRefreshMatchs = 'StartRefreshMatchs'\r\nexport const EndRefreshMatchs = 'EndRefreshMatchs'\r\n\r\nexport const SwitchMenu = 'SwitchMenu'\r\n\r\n/******** Clear **********/\r\nexport const clearSeason = 'ClearSeason'\r\nexport const clearAll = 'ClearAll'\r\n\r\nexport const ShowPercentage = 'ShowPercentage'\r\nexport const SwitchModel = 'SwitchModel'\r\nexport const ToggleProbabilityDetails = 'ToggleProbabilityDetails'\r\n","const leagues = [\r\n  {\r\n    id: 'bl1',\r\n    name: '1.Bundesliga',\r\n    key: 3005,\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  {\r\n    id: 'bl2',\r\n    name: '2.Bundesliga',\r\n    years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015]\r\n  },\r\n  { id: 'bl3', name: '3.Bundesliga', years: [2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016, 2015] },\r\n  { id: 'fifa18', name: 'WM18', years: [2018] },\r\n]\r\n\r\nexport default leagues\r\n","import leagues from './leagues'\r\n\r\nfunction getLeagues() {\r\n  return leagues.map((x) => {\r\n    return { id: x.id, name: x.name }\r\n  })\r\n}\r\n\r\nfunction getYears(leagueId) {\r\n  const league = leagues.find((x) => x.id === leagueId)\r\n  if (!league) return []\r\n  return league.years.map((y) => {\r\n    return { id: y, name: y, leagueId }\r\n  })\r\n}\r\n// new urls: https://api.openligadb.de/getmatchdata/bl1/2020/1\r\nconst openligaBaseUrl = 'https://api.openligadb.de'\r\nfunction getTeams(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailableteams/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\nfunction getMatchDays(league, year) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  const url = `${openligaBaseUrl}/getavailablegroups/${league}/${year}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchs(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getmatchdata/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nfunction getMatchsLastChangeDate(league, year, matchday) {\r\n  if (!league) throw new Error('league is not defined')\r\n  if (!year) throw new Error('year is not defined')\r\n  if (!matchday) throw new Error('matchday is not defined')\r\n  const url = `${openligaBaseUrl}/getlastchangedate/${league}/${year}/${matchday}`\r\n  return fetch(url).then((x) => x.json())\r\n}\r\n\r\nexport {\r\n  getTeams,\r\n  getLeagues,\r\n  getYears,\r\n  getMatchs,\r\n  getMatchDays,\r\n  getMatchsLastChangeDate,\r\n}\r\n","/****************** Map open liga db data ******************/\r\nfunction mapMatch(olMatch, league, year) {\r\n  const id = olMatch.matchID\r\n  const matchDateTime = olMatch.matchDateTime\r\n  const teamHomeId = olMatch.team1.teamId\r\n  const teamAwayId = olMatch.team2.teamId\r\n  const isFinished = olMatch.matchIsFinished\r\n  const matchDayId = olMatch.group.groupOrderID\r\n  const leagueKey = olMatch.leagueId\r\n  const lastUpdate = olMatch.lastUpdateDateTime\r\n  const halfTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Halbzeit\" || x.resultName === \"Halbzeitergebnis\"\r\n  )\r\n  const fullTimeResult = olMatch.matchResults.find(\r\n    (x) => x.resultName === \"Endergebnis\"\r\n  )\r\n  const halfTimeHome = halfTimeResult ? halfTimeResult.pointsTeam1 : '-'\r\n  const halfTimeAway = halfTimeResult ? halfTimeResult.pointsTeam2 : '-'\r\n  const fullTimeHome = fullTimeResult ? fullTimeResult.pointsTeam1 : '-'\r\n  const fullTimeAway = fullTimeResult ? fullTimeResult.pointsTeam2 : '-'\r\n  return {\r\n    id,\r\n    teamHomeId,\r\n    teamAwayId,\r\n    matchDayId,\r\n    league,\r\n    leagueKey,\r\n    year,\r\n    lastUpdate,\r\n    matchDateTime,\r\n    isFinished,\r\n    halfTimeHome,\r\n    halfTimeAway,\r\n    fullTimeHome,\r\n    fullTimeAway,\r\n  }\r\n}\r\n\r\nfunction mapTeam(olTeam) {\r\n  const id = olTeam.teamId\r\n  const shortName = olTeam.shortName\r\n  const iconUrl = olTeam.teamIconUrl\r\n  const name = olTeam.teamName\r\n  return {\r\n    id,\r\n    shortName,\r\n    iconUrl,\r\n    name,\r\n  }\r\n}\r\n\r\nfunction mapTeamFromMatch(olMatch) {\r\n  const team1 = mapTeam(olMatch.team1)\r\n  const team2 = mapTeam(olMatch.team2)\r\n  return [team1, team2]\r\n}\r\n\r\nfunction mapTeamFromMatchs(olMatchs) {\r\n  let teams = {}\r\n  for (let i = 0; i < olMatchs.length; i++) {\r\n    const twoTeams = mapTeamFromMatch(olMatchs[i])\r\n    const t1 = twoTeams[0]\r\n    teams[t1.id] = t1\r\n    const t2 = twoTeams[1]\r\n    teams[t2.id] = t2\r\n  }\r\n  return teams\r\n}\r\n\r\nfunction mapMatchDay(olGroup, league, year) {\r\n  const id = parseInt(olGroup.groupOrderID, 10)\r\n  const name = olGroup.groupName\r\n  const key = parseInt(olGroup.groupID, 10)\r\n  return {\r\n    id,\r\n    name,\r\n    key,\r\n    league,\r\n    year\r\n  }\r\n}\r\n\r\nexport {\r\n  mapMatch,\r\n  mapMatchDay,\r\n  mapTeam,\r\n  mapTeamFromMatchs\r\n}","import {\r\n  prop,\r\n  map\r\n} from 'ramda'\r\nimport {\r\n  getAllMatchs,\r\n  getAllYearsByLeague,\r\n  getAllMatchDays,\r\n  getTeamsByLeagueAndYear,\r\n} from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport function getSelectedMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n\r\n  // @ts-ignore\r\n  return !allMatchs ? [] : allMatchs.filter(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}\r\nexport function getSelectedYears(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  return getAllYearsByLeague(state)[selectedLeague.toString()]\r\n}\r\n\r\nexport function getSelectedMatchDays(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n\r\n  const allMatchDays = getAllMatchDays(state)\r\n\r\n  // @ts-ignore\r\n  return allMatchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport const existsMatchDay = (state, matchDayId) => {\r\n  const matchDays = getSelectedMatchDays(state)\r\n  return !!matchDays.find((x) => x.id === matchDayId)\r\n}\r\n\r\nexport const existLeagues = (state) => {\r\n  const allLeagues = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allLeagues && allLeagues.length > 0\r\n}\r\n\r\nexport const existYears = (state, selectedLeague) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n\r\n  const yearsOfLeague = getAllYearsByLeague(state)[selectedLeague.toString()]\r\n  return yearsOfLeague && yearsOfLeague.length > 0\r\n}\r\n\r\nexport const existTeams = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const teamsByLeagueAndYear = getTeamsByLeagueAndYear(state)\r\n  // @ts-ignore\r\n  const relevantTeams = teamsByLeagueAndYear.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantTeams && relevantTeams.length > 0\r\n}\r\n\r\nexport const existMatchDays = (state, selectedLeague, selectedYear) => {\r\n  if (!state) throw new Error('state not defined')\r\n  if (!selectedLeague) throw new Error('selectedLeague not defined')\r\n  if (!selectedYear) throw new Error('selectedYear not defined')\r\n\r\n  const matchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  const relevantDay = matchDays.filter(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n  return relevantDay && relevantDay.length > 0\r\n}\r\n\r\nexport const getLatestUpdate = (matchs) => {\r\n  if (!matchs || matchs.length === 0) return undefined\r\n  const lastUpdates = map(prop('lastUpdate'))(matchs)\r\n    .sort()\r\n    .reverse()\r\n  return lastUpdates[0]\r\n}","import * as actions from './actions'\r\nimport * as statsType from '../stats/statsType'\r\nimport * as service from '../services'\r\nimport * as mapper from '../services/mapOpenLigaDB'\r\nimport {\r\n  existsMatchDay,\r\n  existLeagues,\r\n  existYears,\r\n  existTeams,\r\n  existMatchDays,\r\n  getSelectedYears,\r\n  getSelectedMatchDays,\r\n  getSelectedMatchs,\r\n  getLatestUpdate,\r\n} from '../utils/filter'\r\nimport {\r\n  getSelectedMatchDay,\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  dictionarize\r\n} from '../utils/listUtils'\r\nimport {\r\n  getAllLeagues\r\n} from '../reducers/selectors/modelSelector'\r\n\r\n/******************* SELECT in UI ******************/\r\n\r\nfunction selectMatchDay(state, selectedMatchDay) {\r\n  if (!existsMatchDay(state, selectedMatchDay))\r\n    selectedMatchDay = getSelectedMatchDay(state)\r\n  return {\r\n    type: actions.SelectMatchDay,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction selectLeague(selectedLeague) {\r\n  return {\r\n    type: actions.SelectLeague,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction selectYear(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.SelectYear,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\n/***************** MATCHDAYS  *********************/\r\n\r\nfunction requestMatchDays(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestMatchDays,\r\n    isLoadingMatchDays: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveMatchDays(selectedLeague, selectedYear, json) {\r\n  return {\r\n    type: actions.ReceiveMatchDays,\r\n    isLoadingMatchDays: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    matchDays: json.map((x) =>\r\n      mapper.mapMatchDay(x, selectedLeague, selectedYear)\r\n    ),\r\n  }\r\n}\r\n\r\nfunction fetchMatchDays(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchDays(selectedLeague, selectedYear))\r\n    return service\r\n      .getMatchDays(selectedLeague, selectedYear)\r\n      .then((json) =>\r\n        dispatch(receiveMatchDays(selectedLeague, selectedYear, json))\r\n      )\r\n  }\r\n}\r\n\r\n/***************** MATCHS  *********************/\r\n\r\nfunction requestMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return {\r\n    type: actions.RequestMatchs,\r\n    isLoadingMatchs: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n  }\r\n}\r\n\r\nfunction receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json) {\r\n  const teams = mapper.mapTeamFromMatchs(json)\r\n  return {\r\n    type: actions.ReceiveMatchs,\r\n    isLoadingMatchs: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    selectedMatchDay,\r\n    matchs: json.map((x) => mapper.mapMatch(x, selectedLeague, selectedYear)),\r\n    teams,\r\n  }\r\n}\r\n\r\nfunction fetchMatchs(selectedLeague, selectedYear, selectedMatchDay) {\r\n  return function (dispatch) {\r\n    dispatch(requestMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n    return service\r\n      .getMatchs(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) =>\r\n        dispatch(\r\n          receiveMatchs(selectedLeague, selectedYear, selectedMatchDay, json)\r\n        )\r\n      )\r\n  }\r\n}\r\n\r\nfunction refreshMatchs(state) {\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  if (!selectedLeague || !selectedYear || !selectedYear) return\r\n\r\n  return function (dispatch) {\r\n    dispatch(startRefreshMatchs())\r\n    return service\r\n      .getMatchsLastChangeDate(selectedLeague, selectedYear, selectedMatchDay)\r\n      .then((json) => {\r\n        if (updateMatchsRequired(state, json)) {\r\n          fetchMatchs(selectedLeague, selectedYear, selectedMatchDay)(\r\n            dispatch\r\n          ).then((x) => dispatch(endRefreshMatchs()))\r\n        } else {\r\n          dispatch(endRefreshMatchs())\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nfunction updateMatchsRequired(state, date) {\r\n  console.log(state, date)  \r\n  const matchs = getSelectedMatchs(state)\r\n  const lastUpdate = getLatestUpdate(matchs)\r\n  return !lastUpdate || lastUpdate < date\r\n}\r\n\r\nfunction startRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: true,\r\n  }\r\n}\r\n\r\nfunction endRefreshMatchs() {\r\n  return {\r\n    type: actions.StartRefreshMatchs,\r\n    isRefreshingMatchs: false,\r\n  }\r\n}\r\n\r\n/***************** TEAMS  *********************/\r\n\r\nfunction requestTeams(selectedLeague, selectedYear) {\r\n  return {\r\n    type: actions.RequestTeams,\r\n    isLoadingTeams: true,\r\n    selectedLeague,\r\n    selectedYear,\r\n  }\r\n}\r\n\r\nfunction receiveTeams(selectedLeague, selectedYear, json) {\r\n  const teamData = json.map((x) => mapper.mapTeam(x))\r\n  const teams = dictionarize(teamData)\r\n  const teamsByLeagueAndYear = teamData.map((x) => ({\r\n    teamId: x.id,\r\n    league: selectedLeague,\r\n    year: selectedYear,\r\n  }))\r\n\r\n  return {\r\n    type: actions.ReceiveTeams,\r\n    isLoadingTeams: false,\r\n    selectedLeague,\r\n    selectedYear,\r\n    teams,\r\n    teamsByLeagueAndYear,\r\n  }\r\n}\r\n\r\nfunction fetchTeams(selectedLeague, selectedYear) {\r\n  return function (dispatch) {\r\n    dispatch(requestTeams(selectedLeague, selectedYear))\r\n    const promise = service.getTeams(selectedLeague, selectedYear)\r\n    return (\r\n      promise\r\n      //.then(\r\n      // response => response.json()\r\n      //error => console.log('An error occurred.',   error)\r\n      //)\r\n      .then((json) =>\r\n        dispatch(receiveTeams(selectedLeague, selectedYear, json))\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\n/***************** LEAGUES  *********************/\r\n\r\nfunction requestLeagues() {\r\n  return {\r\n    type: actions.RequestLeagues,\r\n    isLoadingLeagues: true\r\n  }\r\n}\r\n\r\nfunction receiveLeagues(json) {\r\n  return {\r\n    type: actions.ReceiveLeagues,\r\n    isLoadingLeagues: false,\r\n    leagues: json.map((x) => x),\r\n  }\r\n}\r\n\r\nfunction fetchLeagues() {\r\n  return function (dispatch) {\r\n    dispatch(requestLeagues())\r\n    const leagues = service.getLeagues()\r\n    dispatch(receiveLeagues(leagues))\r\n  }\r\n}\r\n\r\n/***************** YEARS  *********************/\r\n\r\nfunction requestYears(selectedLeague) {\r\n  return {\r\n    type: actions.RequestYears,\r\n    isLoadingYears: true,\r\n    selectedLeague,\r\n  }\r\n}\r\n\r\nfunction receiveYears(selectedLeague, json) {\r\n  const years = json.map((x) => x)\r\n  let yearsByLeague = {}\r\n  yearsByLeague[selectedLeague] = years\r\n  return {\r\n    type: actions.ReceiveYears,\r\n    selectedLeague: selectedLeague,\r\n    isLoadingYears: false,\r\n    yearsByLeague,\r\n  }\r\n}\r\n\r\nfunction fetchYears(selectedLeague) {\r\n  if (selectedLeague === undefined)\r\n    throw new Error('selectedLeague is undefined')\r\n\r\n  return function (dispatch) {\r\n    dispatch(requestYears(selectedLeague))\r\n    const years = service.getYears(selectedLeague)\r\n    dispatch(receiveYears(selectedLeague, years))\r\n  }\r\n}\r\n\r\n/***************** INIT  *********************/\r\n\r\nfunction fetchInitial(store) {\r\n  return function (dispatch) {\r\n    dispatch(startInitializing())\r\n\r\n    let state = store.getState()\r\n    if (!existLeagues(state)) {\r\n      fetchLeagues()(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var league = getAllLeagues(state)[0]\r\n      dispatch(selectLeague(league.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedLeague = getSelectedLeague(state)\r\n    if (!existYears(state, selectedLeague)) {\r\n      fetchYears(selectedLeague)(dispatch)\r\n      state = store.getState()\r\n    } else {\r\n      var year = getSelectedYears(state)[0]\r\n      dispatch(selectYear(selectedLeague, year.id))\r\n      state = store.getState()\r\n    }\r\n\r\n    const selectedYear = getSelectedYear(state)\r\n    if (!existTeams(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchTeams(selectedLeague, selectedYear))\r\n    }\r\n\r\n    if (!existMatchDays(state, selectedLeague, selectedYear)) {\r\n      dispatch(fetchMatchDays(selectedLeague, selectedYear)).then(() => {\r\n        let state = store.getState()\r\n        const selectedMatchDay = getSelectedMatchDay(state)\r\n        dispatch(fetchMatchs(selectedLeague, selectedYear, selectedMatchDay))\r\n      })\r\n    } else {\r\n      const matchDay = getSelectedMatchDays(state)[0]\r\n      dispatch(selectMatchDay(state, matchDay.id))\r\n    }\r\n    dispatch(endInitializing())\r\n  }\r\n}\r\n\r\nconst startInitializing = () => ({\r\n  type: actions.StartInitializing,\r\n  isInitializing: true,\r\n})\r\nconst endInitializing = () => ({\r\n  type: actions.EndInitializing,\r\n  isInitializing: false,\r\n})\r\n\r\n/* ----------- Menu ----------- */\r\nconst switchMenu = (id) => ({\r\n  type: actions.SwitchMenu,\r\n  menuId: id,\r\n})\r\n\r\n/* ----------- Clear ----------- */\r\n\r\nconst clearAll = () => ({\r\n  type: actions.clearAll,\r\n})\r\n\r\nconst clearSeason = (league, year) => ({\r\n  type: actions.clearSeason,\r\n  payload: {\r\n    league,\r\n    year\r\n  },\r\n})\r\n\r\n\r\n/* ----------- Visualize ----------- */\r\n\r\nconst showPercentage = (flag) => ({\r\n  type: actions.ShowPercentage,\r\n  payload: flag\r\n})\r\n\r\nconst switchModel = (selectedModelId) => ({\r\n  type: actions.SwitchModel,\r\n  payload: statsType.getNextId(selectedModelId)\r\n})\r\n\r\nconst toggleProbabilityDetails = (matchId) => ({\r\n  type: actions.ToggleProbabilityDetails,\r\n  payload: matchId\r\n})\r\n\r\nexport {\r\n  clearAll,\r\n  clearSeason,\r\n  switchMenu,\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  refreshMatchs,\r\n  showPercentage,\r\n  switchModel,\r\n  toggleProbabilityDetails,\r\n}","import {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\nimport {\r\n  getAllMatchDays,\r\n  getAllMatchs,\r\n} from '../reducers/selectors/modelSelector'\r\n\r\nexport function areSelectedMatchDaysPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const allMatchDays = getAllMatchDays(state)\r\n  // @ts-ignore\r\n  return allMatchDays.find(\r\n    (x) => x.league === selectedLeague && x.year === selectedYear\r\n  )\r\n}\r\n\r\nexport function areSelectedMatchsPresent(store) {\r\n  const state = store.getState()\r\n  const selectedLeague = getSelectedLeague(state)\r\n  const selectedYear = getSelectedYear(state)\r\n  const selectedMatchDay = getSelectedMatchDay(state)\r\n  const allMatchs = getAllMatchs(state)\r\n  // @ts-ignore\r\n  return allMatchs.find(\r\n    (x) =>\r\n    x.league === selectedLeague &&\r\n    x.year === selectedYear &&\r\n    x.matchDayId === selectedMatchDay\r\n  )\r\n}","import {\r\n  fetchTeams,\r\n  fetchMatchs,\r\n  fetchMatchDays,\r\n  fetchInitial,\r\n  fetchLeagues,\r\n  fetchYears,\r\n  selectMatchDay,\r\n  selectLeague,\r\n  selectYear,\r\n  switchMenu,\r\n} from './ActionBuilder'\r\nimport {\r\n  areSelectedMatchDaysPresent,\r\n  areSelectedMatchsPresent,\r\n} from '../utils/storeHelpers'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\n/******************* ActionBuilder with store ******************/\r\nconst dispatchFetchTeams = function(store, league, year) {\r\n  return store.dispatch(fetchTeams(league, year))\r\n}\r\n\r\nconst dispatchFetchMatchs = function(store, league, year, matchDay) {\r\n  return store.dispatch(fetchMatchs(league, year, matchDay))\r\n}\r\n\r\nconst dispatchFetchMatchDays = function(store, league, year) {\r\n  return store.dispatch(fetchMatchDays(league, year))\r\n}\r\n\r\nconst dispatchFetchInitial = function(store) {\r\n  return store.dispatch(fetchInitial(store))\r\n}\r\n\r\nconst dispatchFetchLeagues = function(store) {\r\n  return store.dispatch(fetchLeagues())\r\n}\r\n\r\nconst dispatchFetchYears = function(store, league) {\r\n  return store.dispatch(fetchYears(league))\r\n}\r\n\r\nconst dispatchSelectMatchDay = function(store, matchDay) {\r\n  return store.dispatch(selectMatchDay(store.getState(), matchDay))\r\n}\r\n\r\nconst dispatchSelectLeague = function(store, league) {\r\n  return store.dispatch(selectLeague(league))\r\n}\r\n\r\nconst dispatchSelectYear = function(store, league, year) {\r\n  return store.dispatch(selectYear(league, year))\r\n}\r\n\r\nconst updateMatchDaysIfNecessary = (store) => {\r\n  let state = store.getState()\r\n  if (!areSelectedMatchDaysPresent(store)) {\r\n    state = store.getState()\r\n    dispatchFetchMatchDays(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state)\r\n    )\r\n  }\r\n  state = store.getState()\r\n  let selectedMatchDay = getSelectedMatchDay(state)\r\n  selectedMatchDay = selectedMatchDay ? selectedMatchDay : 1\r\n  dispatchSelectMatchDay(store, selectedMatchDay)\r\n\r\n  if (!areSelectedMatchsPresent(store)) {\r\n    const state = store.getState()\r\n    dispatchFetchMatchs(\r\n      store,\r\n      getSelectedLeague(state),\r\n      getSelectedYear(state),\r\n      getSelectedMatchDay(state)\r\n    )\r\n  }\r\n}\r\n\r\nconst dispatchSwitchMenu = (store, id) => store.dispatch(switchMenu(id))\r\n\r\nexport {\r\n  dispatchSwitchMenu,\r\n  dispatchFetchInitial,\r\n  dispatchFetchLeagues,\r\n  dispatchFetchTeams,\r\n  dispatchFetchMatchDays,\r\n  dispatchFetchMatchs,\r\n  dispatchFetchYears,\r\n  dispatchSelectMatchDay,\r\n  dispatchSelectLeague,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport ListNavigator from './ListNavigator'\r\n\r\nimport {\r\n  dispatchFetchMatchs,\r\n  dispatchSelectMatchDay,\r\n} from '../actions/ActionBuilderWithStore'\r\n\r\nimport { areSelectedMatchsPresent } from '../utils/storeHelpers'\r\nimport { getSelectedMatchDays } from '../utils/filter'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n  getSelectedMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nclass MatchdayNavigator extends Component {\r\n  onSelect(id) {\r\n    const store = this.props.store\r\n    dispatchSelectMatchDay(store, parseInt(id, 10))\r\n    this.updateMatchs()\r\n  }\r\n\r\n  updateMatchs() {\r\n    const store = this.props.store\r\n    if (!areSelectedMatchsPresent(store)) {\r\n      const state = store.getState()\r\n      dispatchFetchMatchs(\r\n        store,\r\n        getSelectedLeague(state),\r\n        getSelectedYear(state),\r\n        getSelectedMatchDay(state)\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantMatchDays = getSelectedMatchDays(state)\r\n    const selectedMatchDay = getSelectedMatchDay(state)\r\n    return (\r\n      <ListNavigator\r\n        data={relevantMatchDays}\r\n        selected={selectedMatchDay}\r\n        onSelect={this.onSelect.bind(this)}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MatchdayNavigator\r\n","import { connect } from 'react-redux'\r\nimport { RefreshButton } from '../components/RefreshButton'\r\nimport { refreshMatchs } from '../actions/ActionBuilder'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false,\r\n  isUpdating: state.ui.isRefreshingMatchs,\r\n  state,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClick: (state) => {\r\n      console.log('refresh')\r\n      dispatch(refreshMatchs(state))\r\n    },\r\n  }\r\n}\r\n\r\nexport const RefreshCurrentMatchDayButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RefreshButton)\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const RefreshButton = ({ onClick, disabled, isUpdating, state }) => {\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      className=\"btn btn-secondary\"\r\n      onClick={() => onClick(state)}\r\n      disabled={disabled && !isUpdating}\r\n    >\r\n      <FontAwesomeIcon icon=\"sync\" spin={isUpdating} />\r\n    </Button>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { switchModel } from '../actions/ActionBuilder';\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"sliders-h\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  disabled: false\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(switchModel(ownProps.selectedModelId)) \r\n    }\r\n  }\r\n}\r\n\r\nexport const MatchDayOptionsButton = connect(mapStateToProps, mapDispatchToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nconst OptionsButton = ({ onClick, disabled }) => {\r\n  return (\r\n    <Button\r\n      className=\"btn btn-secondary\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      <FontAwesomeIcon icon=\"ellipsis-v\" />\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  onClick: () => {\r\n    console.log('refresh')\r\n  },\r\n  disabled: true,\r\n})\r\n\r\nexport const MatchDayViewSettings = connect(mapStateToProps)(OptionsButton)\r\n","import * as React from 'react'\r\nimport {\r\n  getIsInitializing,\r\n  getIsLoadingLeagues,\r\n  getIsLoadingYears,\r\n  getIsLoadingAllMatchDays,\r\n  getIsLoadingTeams,\r\n  getIsLoadingMatchDay,\r\n} from '../reducers/selectors/uiSelector'\r\n\r\nexport default class LoadingPage extends React.Component {\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsInitializing(state)) {\r\n      return <h2>Intializing...</h2>\r\n    }\r\n    if (getIsLoadingLeagues(state)) {\r\n      return <h2>Loading Leagues...</h2>\r\n    }\r\n    if (getIsLoadingYears(state)) {\r\n      return <h2>Loading Years...</h2>\r\n    }\r\n    if (getIsLoadingAllMatchDays(state)) {\r\n      return <h2>Loading Matchdays...</h2>\r\n    }\r\n    if (getIsLoadingTeams(state)) {\r\n      return <h2>Loading Teams...</h2>\r\n    }\r\n    if (getIsLoadingMatchDay(state)) {\r\n      return <h2>Loading Matchs...</h2>\r\n    }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nexport const IconButton = ({ icon, disabled, handleClick }) => {\r\n  return (\r\n    <Button color='link' onClick={handleClick} disabled={disabled}>\r\n      <FontAwesomeIcon icon={icon} />\r\n    </Button>\r\n  )\r\n}\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearAll } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleClick: () => {\r\n    dispatch(clearAll())\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  icon: 'trash-alt',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearAllButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearAllButton\r\n","import { IconButton } from '../../components/IconButton'\r\nimport { connect } from 'react-redux'\r\nimport { clearSeason } from '../../actions/ActionBuilder'\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  handleClick: () => {\r\n    dispatch(clearSeason(ownProps.league, ownProps.year))\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  icon: 'trash',\r\n  disabled: false,\r\n})\r\n\r\nconst ClearSeasonButton = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IconButton)\r\nexport default ClearSeasonButton\r\n","import { groupByArray, sortByField } from './listUtils'\r\n\r\nconst getTeamCount = (state) => {\r\n  return Object.keys(state.model.teams).length\r\n}\r\n\r\nconst getSeasonsCount = (state) => {\r\n  return groupByArray(state.model.matchs, (x) => x.league).map((x) => ({\r\n    league: x.key,\r\n    name: state.model.leagues.find((y) => y.id === x.key).name,\r\n    seasons: sortByField(\r\n      groupByArray(x.values, (y) => y.year).map((z) => ({\r\n        year: z.key,\r\n        count: groupByArray(z.values, (z1) => z1.matchDayId).length,\r\n      })),\r\n      'year'\r\n    ),\r\n  }))\r\n}\r\n\r\nexport const getStorageStats = (state) => ({\r\n  teamCount: getTeamCount(state),\r\n  leagues: getSeasonsCount(state),\r\n})\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport ClearAllButton from './ClearAllButton'\r\nimport ClearSeasonButton from './ClearSeasonButton'\r\nimport { getStorageStats } from '../../utils/stateStats'\r\n\r\nconst renderSeasonRow = (league, year, count) => {\r\n  return (\r\n    <div className=\"storage-row\" key={`${league}_${year}`}>\r\n      {year} ({count}) <ClearSeasonButton league={league} year={year} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StorageTemplate = ({ teamCount, leagues }) => {\r\n  return (\r\n    <div>\r\n      <h3>\r\n        Lokaler Speicher <ClearAllButton />\r\n      </h3>\r\n      <div className=\"storage-header\">Allgemeine Informationen</div>\r\n      <div className=\"storage-row\">Mannschaften ({teamCount})</div>\r\n      <div className=\"storage-header\">Ligen</div>\r\n      <div>{leagues.count}</div>\r\n      {leagues.map((l) => (\r\n        <div key={l.league}>\r\n          <div className=\"storage-sub-header\">{l.name}</div>\r\n          {l.seasons.map((s) => renderSeasonRow(l.league, s.year, s.count))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => getStorageStats(state)\r\n\r\nconst Storage = connect(mapStateToProps)(StorageTemplate)\r\n\r\nexport default Storage\r\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Button } from 'reactstrap'\n\nexport const PercentageButton = ({ onClick, disabled, state }) => {\n  return (\n    <Button\n      type=\"button\"\n      className=\"btn btn-secondary\"\n      data-toggle=\"button\"\n      aria-pressed={state.ui.showPercentage}\n      onClick={() => onClick(state)}\n      disabled={disabled}\n    >\n      <FontAwesomeIcon icon=\"percentage\" />\n    </Button>\n  )\n}\n\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport './App.css'\r\n\r\nimport Matchs from './Matchs'\r\nimport MatchdayNavigator from '../components/MatchdayNavigator'\r\n\r\nimport { dispatchFetchInitial } from '../actions/ActionBuilderWithStore'\r\nimport { getSelectedMatchs } from '../utils/filter'\r\nimport { getIsLoading } from '../reducers/selectors/uiSelector'\r\nimport { getAllTeams } from '../reducers/selectors/modelSelector'\r\nimport { RefreshCurrentMatchDayButton } from './RefreshCurrentMatchDayButton'\r\nimport { MatchDayOptionsButton } from './MatchDayOptionsButton'\r\nimport { MatchDayViewSettings } from './MatchDayViewSettings'\r\n\r\nimport LoadingPage from './LoadingPage'\r\nimport Storage from './Storage'\r\nimport { getSeasonInfo } from '../stats/seasonInfo'\r\nimport { PercentageButton } from '../components/PercentageButton'\r\n\r\nimport * as actionBuilder from '../actions/ActionBuilder'\r\n\r\nclass App extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const store = this.props.store\r\n    dispatchFetchInitial(store)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    if (getIsLoading(state)) return <LoadingPage />\r\n    if (state.ui.menuId === 'storage') return <Storage />\r\n\r\n    console.log('render normal')\r\n    const relevantMatchs = getSelectedMatchs(state)\r\n    const teams = getAllTeams(state)\r\n    const seasonInfo = getSeasonInfo(state)\r\n    const showPercentage = state.ui.showPercentage\r\n    const selectedModelId = state.ui.selectedModelId\r\n    const probabilityDetailsMatchId = state.ui.probabilityDetailsMatchId\r\n    return (\r\n      <div className=\"container.fluid\">\r\n        <div className=\"row justify-content-center\">\r\n          <div\r\n            className=\"btn-toolbar\"\r\n            role=\"toolbar\"\r\n            aria-label=\"Toolbar with button groups\"\r\n          >\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayViewSettings />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <MatchDayOptionsButton selectedModelId={state.ui.selectedModelId} />\r\n            </div>\r\n\r\n            <MatchdayNavigator store={store} />\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <PercentageButton\r\n                state={state}\r\n                onClick={(s) =>\r\n                  this.props.store.dispatch(\r\n                    actionBuilder.showPercentage(!s.ui.showPercentage)\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Third group\">\r\n              <RefreshCurrentMatchDayButton />\r\n            </div>\r\n          </div>\r\n          <div className=\"container-fluid\">\r\n            <Matchs\r\n              matchs={relevantMatchs}\r\n              teams={teams}\r\n              seasonInfo={seasonInfo}\r\n              showPercentage={showPercentage}\r\n              selectedModelId={selectedModelId}\r\n              probabilityDetailsMatchId={probabilityDetailsMatchId}\r\n              toggleProbabilityDetails={(matchId) => { \r\n                this.props.store.dispatch(\r\n                  actionBuilder.toggleProbabilityDetails(matchId)\r\n                )  }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport {\r\n  dispatchSelectLeague,\r\n  dispatchFetchYears,\r\n  dispatchSelectYear,\r\n  updateMatchDaysIfNecessary,\r\n  dispatchSwitchMenu,\r\n} from '../actions/ActionBuilderWithStore'\r\nimport ListNavigator from './ListNavigator'\r\nimport { getSelectedYears } from '../utils/filter'\r\nimport { getAllLeagues } from '../reducers/selectors/modelSelector'\r\nimport {\r\n  getSelectedLeague,\r\n  getSelectedYear,\r\n} from '../reducers/selectors/uiSelector'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Button } from 'reactstrap'\r\n\r\nclass Navbar extends Component {\r\n  update() {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.unsubscribe = this.props.store.subscribe(this.update.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  async leagueChange(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, 'matchs')\r\n    dispatchSelectLeague(store, event.target.id)\r\n    dispatchFetchYears(store, event.target.id)\r\n\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  async yearChange(id) {\r\n    const store = this.props.store\r\n    let state = store.getState()\r\n    const year = parseInt(id, 10)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    dispatchSelectYear(store, selectedLeague, year)\r\n    updateMatchDaysIfNecessary(store)\r\n  }\r\n\r\n  selectMenu(event) {\r\n    const store = this.props.store\r\n    dispatchSwitchMenu(store, event.target.id)\r\n  }\r\n\r\n  render() {\r\n    const store = this.props.store\r\n    const state = store.getState()\r\n    const relevantYears = getSelectedYears(state)\r\n    const leagues = getAllLeagues(state)\r\n    const selectedLeague = getSelectedLeague(state)\r\n    const selectedYear = getSelectedYear(state)\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {selectedLeague}\r\n        </a>\r\n        <ListNavigator\r\n          buttonStyles={'btn-sm btn-light'}\r\n          bgStyles={'btn-light'}\r\n          selected={selectedYear}\r\n          data={relevantYears}\r\n          onSelect={this.yearChange.bind(this)}\r\n        />\r\n        <Button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </Button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <span className=\"navbar-text\">\r\n            <FontAwesomeIcon icon=\"futbol\" />\r\n            &nbsp;\r\n            <b>Fußball</b>\r\n          </span>\r\n          <ul className=\"navbar-nav mr-auto\" key=\"Football\">\r\n            {leagues.map((l) => (\r\n              <li\r\n                className={`nav-item ${\r\n                  l.id === selectedLeague ? 'active' : ''\r\n                }`}\r\n                key={l.id}\r\n              >\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id={l.id}\r\n                  onClick={this.leagueChange.bind(this)}\r\n                >\r\n                  {l.name}\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <span className=\"navbar-text\">\r\n            <b>Einstellungen</b>\r\n            <ul className=\"navbar-nav mr-auto\" key=\"Settings\">\r\n              <li className={`nav-item`} key=\"storage\">\r\n                <a\r\n                  className=\"nav-link\"\r\n                  href=\"#\"\r\n                  id=\"storage\"\r\n                  onClick={this.selectMenu.bind(this)}\r\n                >\r\n                  Speicher\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\nexport default Navbar\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport './Header.css'\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <p className=\"text-center font-italic\">\r\n          <span className=\"badge badge-dark\">yaspp</span>\r\n          &nbsp; yet another sports page\r\n        </p>\r\n        <Navbar store={this.props.store} />\r\n      </header>\r\n    )\r\n  }\r\n}\r\nexport default Header\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './Footer.css'\r\nimport { getSelectedMatchs, getLatestUpdate } from '../utils/filter'\r\nimport { formatUpdateDate } from '../utils/dateFormat'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lastUpdate: getLatestUpdate(getSelectedMatchs(state)),\r\n})\r\n\r\nconst FooterTemplate = ({ lastUpdate }) => (\r\n  <footer>\r\n    <hr />\r\n    <div className=\"row\">\r\n      <div className=\"col self-align-start\">\r\n        <small>\r\n          <i>aktualisiert</i> {formatUpdateDate(lastUpdate)}\r\n        </small>\r\n      </div>\r\n      <div className=\"col self-align-end text-right\">\r\n        <small>\r\n          <i>\r\n            powered by <a href=\"https://www.openligadb.de\">Openliga DB</a>\r\n          </i>\r\n        </small>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n)\r\n\r\nconst Footer = connect(mapStateToProps)(FooterTemplate)\r\nexport default Footer\r\n","import moment from 'moment'\r\n\r\nexport function formatUpdateDate(lastUpdate) {\r\n  const lastUpdateDate = moment(lastUpdate)\r\n  const now = moment()\r\n  var dt = moment.duration(lastUpdateDate.diff(now))\r\n\r\n  return dt.asYears() > -1\r\n    ? dt.humanize(true)\r\n    : lastUpdateDate.format('DD.MM.YY HH:mm')\r\n}\r\n","import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport App from './parts/App'\r\nimport Header from './parts/Header'\r\nimport Footer from './parts/Footer'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport * as icons from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(icons.faSync)\r\nlibrary.add(icons.faSlidersH)\r\nlibrary.add(icons.faTrashAlt)\r\nlibrary.add(icons.faTrash)\r\nlibrary.add(icons.faCaretLeft)\r\nlibrary.add(icons.faCaretRight)\r\nlibrary.add(icons.faFutbol)\r\nlibrary.add(icons.faAngleDoubleDown)\r\nlibrary.add(icons.faInfo)\r\nlibrary.add(icons.faInfoCircle)\r\nlibrary.add(icons.faPercentage)\r\nlibrary.add(icons.faEllipsisV)\r\nlibrary.add(icons.faEllipsisH)\r\nlibrary.add(icons.faBars)\r\nlibrary.add(icons.faColumns)\r\nlibrary.add(icons.faTable)\r\n\r\nclass Root extends Component {\r\n  render() {\r\n    const store = this.props.store\r\n    return (\r\n      <div>\r\n        <Header store={store} />\r\n        <App store={store} />\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Root\r\n","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nconst initialState = {\r\n  menuId: '',\r\n  selectedLeague: '',\r\n  selectedYear: '',\r\n  selectedMatchDay: 0,\r\n\r\n  isInitializing: false,\r\n  isLoadingLeagues: false,\r\n  isLoadingYears: false,\r\n  isLoadingTeams: false,\r\n  isLoadingAllMatchDays: false,\r\n  isLoadingMatchDay: false,\r\n  isRefreshingMatchs: false,\r\n\r\n  showPercentage: false,\r\n  selectedModelId: 0,\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  switch (action.type) {\r\n    case actions.SelectMatchDay:\r\n      {\r\n        return {\r\n          ...state,\r\n          selectedMatchDay: action.selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.SelectLeague:\r\n      {\r\n        const selectedLeague = action.selectedLeague\r\n        return {\r\n          ...state,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.SelectYear:\r\n      {\r\n        const selectedYear = action.selectedYear\r\n        return {\r\n          ...state,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.RequestLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeague\r\n        return { ...state,\r\n          isLoadingLeagues\r\n        }\r\n      }\r\n    case actions.RequestYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        return { ...state,\r\n          isLoadingYears\r\n        }\r\n      }\r\n    case actions.RequestTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.RequestMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        return { ...state,\r\n          isLoadingMatchDays\r\n        }\r\n      }\r\n    case actions.RequestMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return { ...state,\r\n          isLoadingMatchs\r\n        }\r\n      }\r\n    case actions.ReceiveLeagues:\r\n      {\r\n        const isLoadingLeagues = action.isLoadingLeagues\r\n        const selectedLeague = action.leagues[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingLeagues,\r\n          selectedLeague,\r\n        }\r\n      }\r\n    case actions.ReceiveYears:\r\n      {\r\n        const isLoadingYears = action.isLoadingYears\r\n        const years = action.yearsByLeague ?\r\n          action.yearsByLeague[action.selectedLeague] :\r\n          undefined\r\n        const selectedYear = years && years.length > 0 ? years[0].id : undefined\r\n        return {\r\n          ...state,\r\n          isLoadingYears,\r\n          selectedYear,\r\n        }\r\n      }\r\n    case actions.ReceiveTeams:\r\n      {\r\n        const isLoadingTeams = action.isLoadingTeams\r\n        return { ...state,\r\n          isLoadingTeams\r\n        }\r\n      }\r\n    case actions.ReceiveMatchDays:\r\n      {\r\n        const isLoadingMatchDays = action.isLoadingMatchDays\r\n        const selectedMatchDay = action.matchDays[0].id\r\n        return {\r\n          ...state,\r\n          isLoadingMatchDays,\r\n          selectedMatchDay,\r\n        }\r\n      }\r\n    case actions.ReceiveMatchs:\r\n      {\r\n        const isLoadingMatchs = action.isLoadingMatchs\r\n        return {\r\n          ...state,\r\n          isLoadingMatchs,\r\n        }\r\n      }\r\n    case actions.StartInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.EndInitializing:\r\n      {\r\n        return { ...state,\r\n          isInitializing: action.isInitializing\r\n        }\r\n      }\r\n    case actions.StartRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.EndRefreshMatchs:\r\n      {\r\n        return { ...state,\r\n          isRefreshingMatchs: action.isRefreshingMatchs\r\n        }\r\n      }\r\n    case actions.SwitchMenu:\r\n      {\r\n        return { ...state,\r\n          menuId: action.menuId\r\n        }\r\n      }\r\n    case actions.ShowPercentage:\r\n      {\r\n        return { ...state,\r\n          showPercentage: action.payload\r\n        }\r\n      }\r\n    case actions.SwitchModel:\r\n      {\r\n        return { ...state,\r\n          selectedModelId: action.payload\r\n        }\r\n      }\r\n    case actions.ToggleProbabilityDetails:\r\n      {\r\n        return { ...state,\r\n          probabilityDetailsMatchId: action.payload\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import * as actions from '../actions/actions'\r\n\r\n/******************* State ******************/\r\n\r\nexport const initialState = {\r\n  leagues: [],\r\n  yearsByLeague: {},\r\n  teams: {},\r\n  matchDays: [],\r\n  matchs: [],\r\n  teamsByLeagueAndYear: [],\r\n}\r\n\r\n/******************* Reducer ******************/\r\n\r\nexport const modelReducer = (state = initialState, action) => {\r\n  console.log(action ? action.type : '')\r\n  console.log(action)\r\n  console.log(state)\r\n  switch (action.type) {\r\n    case actions.ReceiveLeagues: {\r\n      const leagues = [...action.leagues]\r\n      return {\r\n        ...state,\r\n        leagues,\r\n      }\r\n    }\r\n    case actions.ReceiveYears: {\r\n      const yearsByLeague = { ...state.yearsByLeague, ...action.yearsByLeague }\r\n      return {\r\n        ...state,\r\n        yearsByLeague,\r\n      }\r\n    }\r\n    case actions.ReceiveTeams: {\r\n      const teams = {\r\n        ...state.teams,\r\n        ...action.teams,\r\n      }\r\n      const teamsByLeagueAndYear = [\r\n        ...state.teamsByLeagueAndYear,\r\n        ...action.teamsByLeagueAndYear,\r\n      ]\r\n      return { ...state, teams, teamsByLeagueAndYear }\r\n    }\r\n    case actions.ReceiveMatchDays: {\r\n      const matchDays = [...state.matchDays, ...action.matchDays]\r\n\r\n      return {\r\n        ...state,\r\n        matchDays,\r\n      }\r\n    }\r\n    case actions.ReceiveMatchs: {\r\n      const teams = { ...state.teams, ...action.teams }\r\n\r\n      const matchDict = state.matchs.reduce((res,x) => {\r\n        res[x.id]=x\r\n        return res\r\n      }, {})\r\n      \r\n      for (let i=0;i<action.matchs.length;++i) {\r\n        const match = action.matchs[i]\r\n        matchDict[match.id]=match\r\n      }\r\n      const matchs = Object.values(matchDict)\r\n\r\n      return {\r\n        ...state,\r\n        matchs,\r\n        teams,\r\n      }\r\n    }\r\n    case actions.clearAll: {\r\n      return initialState\r\n    }\r\n    case actions.clearSeason: {\r\n      const { league, year } = action.payload\r\n      return {\r\n        ...state,\r\n        matchDays: state.matchDays.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        matchs: state.matchs.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n        teamsByLeagueAndYear: state.teamsByLeagueAndYear.filter(\r\n          (x) => !(x.league === league && x.year === year)\r\n        ),\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { modelReducer } from './modelReducer'\r\n\r\nexport const reducer = combineReducers({ ui: uiReducer, model: modelReducer })\r\n","// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './Root'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nimport { reducer } from './reducers'\r\nimport { saveState, loadState } from './utils/localStorage'\r\nimport { throttle } from 'lodash'\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/de'\r\n\r\n/******************* Set globals ******************/\r\nmoment.locale(\"de\")\r\n\r\n/******************* Create Store ******************/\r\nconst thunk = ReduxThunk\r\nconst persistedState = loadState()\r\nconst store = createStore(reducer, persistedState, applyMiddleware(thunk))\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    const model = store.getState().model\r\n    saveState({ model })\r\n  }, 1000)\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Root store={store} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n","const SERIALIZED_STATE_KEY = 'yaspp_state'\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(SERIALIZED_STATE_KEY)\r\n    if (serializedState === null) {\r\n      return undefined\r\n    }\r\n    return JSON.parse(serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state)\r\n    localStorage.setItem(SERIALIZED_STATE_KEY, serializedState)\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}"],"sourceRoot":""}